{
	"name": "PL_KHCDE_IRI_US_DELETETRIGGERS",
	"properties": {
		"activities": [
			{
				"name": "FE-LU_Metadata",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "IF_Metadata_exists",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('LU-Metadata').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "IF-TriggerExists",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "GM-Details",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@activity('GM-Details').output.exists",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "CP-ReraiseError01",
										"type": "Copy",
										"dependsOn": [
											{
												"activity": "SP-ActivityFailed05",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "BinarySource",
												"storeSettings": {
													"type": "AzureBlobFSReadSettings",
													"recursive": true
												},
												"formatSettings": {
													"type": "BinaryReadSettings"
												}
											},
											"sink": {
												"type": "BinarySink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings"
												}
											},
											"enableStaging": false
										},
										"inputs": [
											{
												"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
												"type": "DatasetReference",
												"parameters": {
													"container_name": {
														"value": "doesNotExist_Input",
														"type": "Expression"
													},
													"blob_name": {
														"value": "doesNotExist_Input",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
												"type": "DatasetReference",
												"parameters": {
													"container_name": {
														"value": "doesNotExist_Output",
														"type": "Expression"
													},
													"blob_name": {
														"value": "doesNotExist_Output",
														"type": "Expression"
													}
												}
											}
										]
									},
									{
										"name": "DL-Trigger",
										"type": "Delete",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"dataset": {
												"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_FolderFile",
												"type": "DatasetReference",
												"parameters": {
													"container_name": {
														"value": "@{item().container_name}",
														"type": "Expression"
													},
													"blob_name": {
														"value": "@if(contains(item().trigger_path_name, '/'), substring(item().trigger_path_name, 0, lastIndexOf(item().trigger_path_name, '/')),'sales/triggers_not_found')",
														"type": "Expression"
													},
													"file_name": {
														"value": "@if(contains(item().trigger_path_name, '/'), split(item().trigger_path_name, '/')[sub(length(split(item().trigger_path_name, '/')),1)],item().trigger_path_name)",
														"type": "Expression"
													}
												}
											},
											"enableLogging": false,
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											}
										}
									},
									{
										"name": "SP-ActivitySuccess05",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [
											{
												"activity": "DL-Trigger",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[dbo].[generic_activity_audit_log]",
											"storedProcedureParameters": {
												"activity_name": {
													"value": "DL-Trigger",
													"type": "String"
												},
												"activity_status": {
													"value": {
														"value": "Successful",
														"type": "Expression"
													},
													"type": "String"
												},
												"application_name": {
													"value": {
														"value": "@activity('LU-Metadata').output.value[0].application_name",
														"type": "Expression"
													},
													"type": "String"
												},
												"dataset_name": {
													"value": {
														"value": "@activity('LU-Metadata').output.value[0].dataset_name",
														"type": "Expression"
													},
													"type": "String"
												},
												"pipeline_run_id": {
													"value": {
														"value": "@{pipeline().RunId}",
														"type": "Expression"
													},
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "LS_SQL",
											"type": "LinkedServiceReference"
										}
									},
									{
										"name": "SP-ActivityFailed05",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [
											{
												"activity": "DL-Trigger",
												"dependencyConditions": [
													"Failed"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
											"storedProcedureParameters": {
												"activity_name": {
													"value": "DL-Trigger",
													"type": "String"
												},
												"activity_status": {
													"value": {
														"value": "Failed",
														"type": "Expression"
													},
													"type": "String"
												},
												"application_name": {
													"value": {
														"value": "@activity('LU-Metadata').output.value[0].application_name",
														"type": "Expression"
													},
													"type": "String"
												},
												"dataset_name": {
													"value": {
														"value": "@activity('LU-Metadata').output.value[0].dataset_group",
														"type": "Expression"
													},
													"type": "String"
												},
												"error_code": {
													"value": {
														"value": "Trigger deletion failed for IRI US DBT Aggregate load",
														"type": "Expression"
													},
													"type": "String"
												},
												"error_detail": {
													"value": {
														"value": "Trigger deletion failed for IRI US DBT Aggregate load",
														"type": "Expression"
													},
													"type": "String"
												},
												"pipeline_run_id": {
													"value": {
														"value": "@{pipeline().RunId}",
														"type": "Expression"
													},
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "LS_SQL",
											"type": "LinkedServiceReference"
										}
									}
								]
							}
						},
						{
							"name": "GM-Details",
							"type": "GetMetadata",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_FolderFile",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "@{item().container_name}",
											"type": "Expression"
										},
										"blob_name": {
											"value": "@if(contains(item().trigger_path_name, '/'), substring(item().trigger_path_name, 0, lastIndexOf(item().trigger_path_name, '/')),'sales/triggers_not_found')",
											"type": "Expression"
										},
										"file_name": {
											"value": "@if(contains(item().trigger_path_name, '/'), split(item().trigger_path_name, '/')[sub(length(split(item().trigger_path_name, '/')),1)],item().trigger_path_name)",
											"type": "Expression"
										}
									}
								},
								"fieldList": [
									"exists"
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							}
						}
					]
				}
			},
			{
				"name": "LU-Metadata",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "SELECT DISTINCT application_name,dataset_name, container_name,\n                dbt_trigger_name as trigger_path_name, SUBSTRING(dbt_trigger_name, 1, LEN(concat('/',dbt_trigger_name)) - CHARINDEX('/',REVERSE(concat('/',dbt_trigger_name))) - 1) as trigger_blob_folder \nFROM [dbo].[khc_orchestration_metadata]\nWHERE active_ind = 'y'\n  AND LEN(concat('/',dbt_trigger_name)) - CHARINDEX('/',REVERSE(concat('/',dbt_trigger_name))) - 1 >= 0\n  AND concat(container_name,'/',SUBSTRING(dbt_trigger_name, 1, LEN(concat('/',dbt_trigger_name)) - CHARINDEX('/',REVERSE(concat('/',dbt_trigger_name))) - 1)) = '@{pipeline().parameters.blob_trigger_folder_path}'\n",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_KHCDE_GENERIC_MSSQL_Metadata",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "IF_Metadata_exists",
				"description": "",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "LU-Metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@greater(activity('LU-Metadata').output.count,0)",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Wait-Loop",
							"type": "Wait",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"waitTimeInSeconds": 5
							}
						},
						{
							"name": "CP-ReraiseError02",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Wait-Loop",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BinarySource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true
									},
									"formatSettings": {
										"type": "BinaryReadSettings"
									}
								},
								"sink": {
									"type": "BinarySink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "doesNotExist_Input",
											"type": "Expression"
										},
										"blob_name": {
											"value": "doesNotExist_Input",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "doesNotExist_Output",
											"type": "Expression"
										},
										"blob_name": {
											"value": "doesNotExist_Output",
											"type": "Expression"
										}
									}
								}
							]
						}
					],
					"ifTrueActivities": [
						{
							"name": "SP-ActivitySuccess01",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[generic_activity_audit_log]",
								"storedProcedureParameters": {
									"activity_name": {
										"value": "LU-Metadata",
										"type": "String"
									},
									"activity_status": {
										"value": {
											"value": "Successful",
											"type": "Expression"
										},
										"type": "String"
									},
									"application_name": {
										"value": {
											"value": "@activity('LU-Metadata').output.value[0].application_name",
											"type": "Expression"
										},
										"type": "String"
									},
									"dataset_name": {
										"value": {
											"value": "@activity('LU-Metadata').output.value[0].dataset_name",
											"type": "Expression"
										},
										"type": "String"
									},
									"pipeline_run_id": {
										"value": {
											"value": "@{pipeline().RunId}",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_SQL",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			}
		],
		"parameters": {
			"application_name": {
				"type": "string"
			},
			"dataset_name": {
				"type": "string"
			},
			"blob_trigger_folder_path": {
				"type": "string"
			}
		},
		"folder": {
			"name": "IRI_US"
		},
		"annotations": []
	}
}