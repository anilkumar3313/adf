{
	"name": "PL_KHCDE_RESEARCH_AND_DEVELOPMENT_MASTER_LOAD",
	"properties": {
		"description": "1. Ingest Data from raw files to Snowflake raw Tables \n2. Transform the data from raw Tables and load to the final gold layer tables.\n3. Extract tables to destination on khcdedatashare<env>/research-development on conditional basis",
		"activities": [
			{
				"name": "LU-Metadata",
				"description": "This activity will look up the metadata for executing the snowflake and DBT processing pipeline",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "SP-PipelineStart",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "select * from khc_orchestration_metadata where application_name = '@{pipeline().parameters.ApplicationName}' and SUBSTRING(concat('/',blob_trigger_name), LEN(concat('/',blob_trigger_name)) - CHARINDEX('/',REVERSE(concat('/',blob_trigger_name))) + 2, LEN(concat('/',blob_trigger_name)))= '@{pipeline().parameters.BlobTriggerName}' and active_ind = 'y'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_KHCDE_GENERIC_MSSQL_Metadata",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "EP-SnowflakeIngestion",
				"description": "Execution of Snowflake data ingestion activity",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "FE-ExcelToCsv",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "PL_KHCDE_GENERIC_SnowflakeIngestion",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"ApplicationName": {
							"value": "@pipeline().parameters.ApplicationName",
							"type": "Expression"
						},
						"DatasetGroup": {
							"value": "@activity('LU-Metadata').output.value[0].dataset_group",
							"type": "Expression"
						},
						"ParameterJson": {
							"value": "@activity('LU-Metadata').output.value[0].parameter_json",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "EP-DBTProcessing",
				"description": "Execution of DBT Processing activity",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "EP-SnowflakeIngestion",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "PL_KHCDE_GENERIC_DBTProcessing",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"ApplicationName": {
							"value": "@{activity('LU-Metadata').output.value[0].application_name}",
							"type": "Expression"
						},
						"DatasetGroup": {
							"value": "@{activity('LU-Metadata').output.value[0].dataset_group}",
							"type": "Expression"
						},
						"ParameterJson": {
							"value": "@{activity('LU-Metadata').output.value[0].parameter_json}",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "LU Metadata - Success",
				"description": "This activity will write LU orchestration success activity log",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "LU-Metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": "LU-Metadata",
							"type": "String"
						},
						"activity_status": {
							"value": "Successful",
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@{pipeline().parameters.ApplicationName}",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].dataset_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "LU Metadata - Failed",
				"description": "This activity will write the LU orchestration failure activity log",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "LU-Metadata",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": "LU-Metadata",
							"type": "String"
						},
						"activity_status": {
							"value": {
								"value": "Failed",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].dataset_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_code": {
							"value": {
								"value": "N.A.",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_detail": {
							"value": {
								"value": "N.A.",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "GetListOfFiles - Success",
				"description": "GetListOfFiles Success",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "GM-GetListOfFiles",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": "GM-GetListOfFiles",
							"type": "String"
						},
						"activity_status": {
							"value": "Successful",
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@{pipeline().parameters.ApplicationName}",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].dataset_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "GetListOfFiles - Failed",
				"description": "GetListOfFiles  Failed",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "GM-GetListOfFiles",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": "GM-GetListOfFiles",
							"type": "String"
						},
						"activity_status": {
							"value": {
								"value": "Failed",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].dataset_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_code": {
							"value": {
								"value": "N.A.",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_detail": {
							"value": {
								"value": "N.A.",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SnowflakeIngestion - Success",
				"description": "This activity will write a Snowflake Ingestion success activity log.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "EP-SnowflakeIngestion",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": "EP-SnowflakeIngestion",
							"type": "String"
						},
						"activity_status": {
							"value": "Successful",
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@{pipeline().parameters.ApplicationName}",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].dataset_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SnowflakeIngestion - Failed",
				"description": "This activity will write the Snowflake Ingestion failure activity log",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "EP-SnowflakeIngestion",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": "EP-SnowflakeIngestion",
							"type": "String"
						},
						"activity_status": {
							"value": {
								"value": "Failed",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].dataset_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_code": {
							"value": {
								"value": "N.A.",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_detail": {
							"value": {
								"value": "N.A.",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "DBTProcessing - Failed",
				"description": "This activity will write the DBT Processing failure activity log.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "EP-DBTProcessing",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": "EP-DBTProcessing",
							"type": "String"
						},
						"activity_status": {
							"value": {
								"value": "Failed",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].dataset_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_code": {
							"value": {
								"value": "N.A.",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_detail": {
							"value": {
								"value": "N.A.",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "DBTProcessing - Success",
				"description": "This activity will write the DBT Processing success  activity log.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "EP-DBTProcessing",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": "EP-DBTProcessing",
							"type": "String"
						},
						"activity_status": {
							"value": "Successful",
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@{pipeline().parameters.ApplicationName}",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].dataset_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "GM-GetListOfFiles",
				"description": "Get the list of files",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "LU-Metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DS_ADLS_NonCompressed",
						"type": "DatasetReference",
						"parameters": {
							"container_name": {
								"value": "@activity('LU-Metadata').output.value[0].container_name",
								"type": "Expression"
							},
							"stage_path": {
								"value": "@activity('LU-Metadata').output.value[0].stage_blob_name",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			},
			{
				"name": "GetExcelFiles",
				"description": "Get only excel file names from list of files",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "GM-GetListOfFiles",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('GM-GetListOfFiles').output.childItems",
						"type": "Expression"
					},
					"condition": {
						"value": "@contains(item().name,'.xlsx')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "FE-ExcelToCsv",
				"description": "This activity will perform excel to csv conversion for each file ",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "GetExcelFiles",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('GetExcelFiles').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Split_Excel_To_CSV",
							"description": "This Function splits the excel file into multiple CSVs.",
							"type": "AzureFunctionActivity",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 3,
								"retryIntervalInSeconds": 120,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"functionName": "excel_sheet_to_csv_file",
								"method": "POST",
								"body": {
									"value": "@json(concat('{\n  \"blob_name\": \"',activity('LU-Metadata').output.value[0].stage_blob_name,'/',item().name,'\",\n  \"container_name\": \"',activity('LU-Metadata').output.value[0].container_name,'\",\n  \"output_path\": \"',activity('LU-Metadata').output.value[0].stage_blob_name,'\"\n}'))",
									"type": "Expression"
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_AzF_Sharepoint_Ingestion",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "IF-File Exists",
							"description": "If excel file  is present in storage container then delete the  excel file",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Split_Excel_To_CSV",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@and(not(equals(activity('LU-Metadata').output.value[0].stage_blob_name,'')),not(equals(activity('LU-Metadata').output.value[0].container_name,'')))",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "DL-DeleteFile",
										"description": "Delete xlxs file",
										"type": "Delete",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"dataset": {
												"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
												"type": "DatasetReference",
												"parameters": {
													"container_name": {
														"value": "@activity('LU-Metadata').output.value[0].container_name",
														"type": "Expression"
													},
													"blob_name": {
														"value": "@activity('LU-Metadata').output.value[0].stage_blob_name",
														"type": "Expression"
													}
												}
											},
											"enableLogging": false,
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": false,
												"wildcardFileName": {
													"value": "@{item().name}",
													"type": "Expression"
												}
											}
										}
									},
									{
										"name": "Delete File- Success",
										"description": "Activity Success DeleteFile",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [
											{
												"activity": "DL-DeleteFile",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[dbo].[generic_activity_audit_log]",
											"storedProcedureParameters": {
												"activity_name": {
													"value": "DL-DeleteFile",
													"type": "String"
												},
												"activity_status": {
													"value": "Successful",
													"type": "String"
												},
												"application_name": {
													"value": {
														"value": "@{pipeline().parameters.ApplicationName}",
														"type": "Expression"
													},
													"type": "String"
												},
												"dataset_name": {
													"value": {
														"value": "@activity('LU-Metadata').output.value[0].dataset_name",
														"type": "Expression"
													},
													"type": "String"
												},
												"pipeline_run_id": {
													"value": {
														"value": "@{pipeline().RunId}",
														"type": "Expression"
													},
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "LS_SQL",
											"type": "LinkedServiceReference"
										}
									},
									{
										"name": "DeleteFile - Failed",
										"description": "Activity Failure DL-Delete File",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [
											{
												"activity": "DL-DeleteFile",
												"dependencyConditions": [
													"Failed"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
											"storedProcedureParameters": {
												"activity_name": {
													"value": "DL-DeleteFile",
													"type": "String"
												},
												"activity_status": {
													"value": {
														"value": "Failed",
														"type": "Expression"
													},
													"type": "String"
												},
												"application_name": {
													"value": {
														"value": "@activity('LU-Metadata').output.value[0].application_name",
														"type": "Expression"
													},
													"type": "String"
												},
												"dataset_name": {
													"value": {
														"value": "@activity('LU-Metadata').output.value[0].dataset_name",
														"type": "Expression"
													},
													"type": "String"
												},
												"error_code": {
													"value": {
														"value": "N.A.",
														"type": "Expression"
													},
													"type": "String"
												},
												"error_detail": {
													"value": {
														"value": "N.A.",
														"type": "Expression"
													},
													"type": "String"
												},
												"pipeline_run_id": {
													"value": {
														"value": "@{pipeline().RunId}",
														"type": "Expression"
													},
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "LS_SQL",
											"type": "LinkedServiceReference"
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "ExcelToCsv - Success",
				"description": "This activity will write FE-ExcelToCsv success activity log",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "FE-ExcelToCsv",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": "FE-ExcelToCsv",
							"type": "String"
						},
						"activity_status": {
							"value": "Successful",
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@{pipeline().parameters.ApplicationName}",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].dataset_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "ExcelToCsv - Failed",
				"description": "This activity will write the FE-ExcelToCsv failure activity log",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "FE-ExcelToCsv",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": "FE-ExcelToCsv",
							"type": "String"
						},
						"activity_status": {
							"value": {
								"value": "Failed",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].dataset_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_code": {
							"value": {
								"value": "N.A.",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_detail": {
							"value": {
								"value": "N.A.",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "GetExcelFiles - Success",
				"description": "GetListOfFiles Success",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "GetExcelFiles",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": "GetExcelFiles",
							"type": "String"
						},
						"activity_status": {
							"value": "Successful",
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@{pipeline().parameters.ApplicationName}",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].dataset_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "GetExcelFiles - Failed",
				"description": "GetListOfFiles  Failed",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "GetExcelFiles",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": "GetExcelFiles",
							"type": "String"
						},
						"activity_status": {
							"value": {
								"value": "Failed",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].dataset_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_code": {
							"value": {
								"value": "N.A.",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_detail": {
							"value": {
								"value": "N.A.",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "IF-TriggerExists",
				"description": "If trigger file  is present in storage container then delete the  trigger file",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "GM-DeleteTrigger",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@activity('GM-DeleteTrigger').output.exists",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "DL-DeleteTrigger",
							"description": "Delete trigger file",
							"type": "Delete",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "@activity('LU-Metadata').output.value[0].container_name",
											"type": "Expression"
										},
										"blob_name": {
											"value": "@substring(activity('LU-Metadata').output.value[0].blob_trigger_name,0,lastindexof(activity('LU-Metadata').output.value[0].blob_trigger_name,'/'))",
											"type": "Expression"
										}
									}
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"wildcardFileName": {
										"value": "@{pipeline().parameters.BlobTriggerName}",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "DeleteTrigger- Success",
							"description": "Activity Success DeleteTrigger",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "DL-DeleteTrigger",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[generic_activity_audit_log]",
								"storedProcedureParameters": {
									"activity_name": {
										"value": "DL-DeleteTrigger",
										"type": "String"
									},
									"activity_status": {
										"value": "Successful",
										"type": "String"
									},
									"application_name": {
										"value": {
											"value": "@{pipeline().parameters.ApplicationName}",
											"type": "Expression"
										},
										"type": "String"
									},
									"dataset_name": {
										"value": {
											"value": "@activity('LU-Metadata').output.value[0].dataset_name",
											"type": "Expression"
										},
										"type": "String"
									},
									"pipeline_run_id": {
										"value": {
											"value": "@{pipeline().RunId}",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_SQL",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "DeleteTrigger - Failed",
							"description": "Activity Failure DL-DeleteTrigger",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "DL-DeleteTrigger",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
								"storedProcedureParameters": {
									"activity_name": {
										"value": "DL-DeleteTrigger",
										"type": "String"
									},
									"activity_status": {
										"value": {
											"value": "Failed",
											"type": "Expression"
										},
										"type": "String"
									},
									"application_name": {
										"value": {
											"value": "@activity('LU-Metadata').output.value[0].application_name",
											"type": "Expression"
										},
										"type": "String"
									},
									"dataset_name": {
										"value": {
											"value": "@activity('LU-Metadata').output.value[0].dataset_name",
											"type": "Expression"
										},
										"type": "String"
									},
									"error_code": {
										"value": {
											"value": "N.A.",
											"type": "Expression"
										},
										"type": "String"
									},
									"error_detail": {
										"value": {
											"value": "N.A.",
											"type": "Expression"
										},
										"type": "String"
									},
									"pipeline_run_id": {
										"value": {
											"value": "@{pipeline().RunId}",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_SQL",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "GM-DeleteTrigger",
				"description": "Get metadata for trigger file in khcdedatastorage<env> storage account",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "LU-Metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_FolderFile",
						"type": "DatasetReference",
						"parameters": {
							"container_name": {
								"value": "@activity('LU-Metadata').output.value[0].container_name",
								"type": "Expression"
							},
							"blob_name": {
								"value": "@substring(activity('LU-Metadata').output.value[0].blob_trigger_name,0,lastindexof(activity('LU-Metadata').output.value[0].blob_trigger_name,'/'))",
								"type": "Expression"
							},
							"file_name": {
								"value": "@{pipeline().parameters.BlobTriggerName}",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"exists"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			},
			{
				"name": "SP-PipelineStart",
				"description": "This Activity logs starting of pipeline in khc_audit_log table.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": {
								"value": "I",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@pipeline().parameters.ApplicationName",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@pipeline().parameters.BlobTriggerName",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_name": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": {
								"value": "processing",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-ActivitySuccess03",
				"description": "This activity is to logs the success of EP-DBT-Processing activity",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "DBTProcessing - Success",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": "EP-DBT_Processing",
							"type": "String"
						},
						"activity_status": {
							"value": {
								"value": "Successful",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@pipeline().parameters.ApplicationName",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@pipeline().parameters.BlobTriggerName",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-Pipelinesuccesful_Master_Pool",
				"description": "This Activity logs completion of pipeline in khc_audit_log table.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "DBTProcessing - Success",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": "U",
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@pipeline().parameters.ApplicationName",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@pipeline().parameters.BlobTriggerName",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_name": {
							"value": {
								"value": "@{pipeline().Pipeline}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": {
								"value": "Successful",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Pipeline_Failed",
				"description": "This Activity logs failure of pipeline in khc_audit_log table.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "DBTProcessing - Success",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": {
								"value": "U",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@pipeline().parameters.ApplicationName",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].dataset_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_name": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": "Failed",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"ApplicationName": {
				"type": "string",
				"defaultValue": "research_and_development"
			},
			"BlobTriggerName": {
				"type": "string"
			}
		},
		"variables": {
			"exit_ind": {
				"type": "String",
				"defaultValue": "N"
			}
		},
		"folder": {
			"name": "research_and_development"
		},
		"annotations": []
	}
}