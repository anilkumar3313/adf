{
	"name": "PL_KHCDE_GENERIC_SUB_ServerCopy_PART2",
	"properties": {
		"description": "Copies files from source server(s) for the following Linked Services Part 2\nLS_FTP_HYL_CANADA\nLS_SFTP_SOBEYS_CANADA\nLS_SFTP_SALES_CA_METRO\nLS_SFTP_IRI_GLOBAL\nLS_FS_ORACLE_APPS_112\nLS_SFTP_NIELSEN_SDEL2\nLS_AZ_KHC_DATASHARE_STRGV2\nLS_FS_CA_FNP01\nLS_FS_FOODSERVICE_US_VIA\nLS_AZ_XTEL",
		"activities": [
			{
				"name": "SW-Server",
				"description": "Switch the Source Linked service based on server name",
				"type": "Switch",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"on": {
						"value": "@{pipeline().parameters.server_name}",
						"type": "Expression"
					},
					"cases": [
						{
							"value": "LS_FTP_HYL_CANADA",
							"activities": [
								{
									"name": "CP-HYL_CANADA_ToLand",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "FtpReadSettings",
												"recursive": false,
												"wildcardFileName": {
													"value": "@{pipeline().parameters.filename}",
													"type": "Expression"
												},
												"useBinaryTransfer": true,
												"deleteFilesAfterCompletion": false
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false,
										"skipErrorFile": {
											"fileMissing": false
										}
									},
									"inputs": [
										{
											"referenceName": "DS_KHCDE_GENERIC_HYL_CANADA_BINARY_Folder",
											"type": "DatasetReference",
											"parameters": {
												"sftp_path": {
													"value": "@{pipeline().parameters.server_path}",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
											"type": "DatasetReference",
											"parameters": {
												"container_name": {
													"value": "@{pipeline().parameters.container_name}",
													"type": "Expression"
												},
												"blob_name": {
													"value": "@{concat(replace(pipeline().parameters.archival_blob_name, 'yyyyMMdd', 'processing'), '/land')}",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "SV-goAhead_HYL_CANADA",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "CP-HYL_CANADA_ToLand",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "goAhead",
										"value": {
											"value": "@{if(greater(activity('CP-HYL_CANADA_ToLand').output.filesWritten, 0), 'Y', 'N')}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP-CP-HYL_CANADA_ToLand",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "CP-HYL_CANADA_ToLand",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.00:10:00",
										"retry": 50,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
										"storedProcedureParameters": {
											"activity_name": {
												"value": "CP-HYL_CANADA_ToLand",
												"type": "String"
											},
											"activity_status": {
												"value": {
													"value": "Failed",
													"type": "Expression"
												},
												"type": "String"
											},
											"application_name": {
												"value": {
													"value": "@pipeline().parameters.application_name",
													"type": "Expression"
												},
												"type": "String"
											},
											"dataset_name": {
												"value": {
													"value": "@pipeline().parameters.dataset_name",
													"type": "Expression"
												},
												"type": "String"
											},
											"error_code": {
												"value": {
													"value": "@activity('CP-HYL_CANADA_ToLand').output.errors[0].Code",
													"type": "Expression"
												},
												"type": "String"
											},
											"error_detail": {
												"value": {
													"value": "@activity('CP-HYL_CANADA_ToLand').output.errors[0].Message",
													"type": "Expression"
												},
												"type": "String"
											},
											"pipeline_run_id": {
												"value": {
													"value": "@{pipeline().RunId}",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_SQL",
										"type": "LinkedServiceReference"
									}
								}
							]
						},
						{
							"value": "LS_SFTP_SOBEYS_CANADA",
							"activities": [
								{
									"name": "CP-SOBEYS_CANADA_ToLand",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "SftpReadSettings",
												"recursive": false,
												"wildcardFileName": {
													"value": "@{pipeline().parameters.filename}",
													"type": "Expression"
												},
												"deleteFilesAfterCompletion": false
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false,
										"skipErrorFile": {
											"fileMissing": false
										}
									},
									"inputs": [
										{
											"referenceName": "DS_KHCDE_GENERIC_SOBEYS_CANADA_BINARY_Folder",
											"type": "DatasetReference",
											"parameters": {
												"sftp_path": {
													"value": "@{pipeline().parameters.server_path}",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
											"type": "DatasetReference",
											"parameters": {
												"container_name": {
													"value": "@{pipeline().parameters.container_name}",
													"type": "Expression"
												},
												"blob_name": {
													"value": "@{concat(replace(pipeline().parameters.archival_blob_name, 'yyyyMMdd', 'processing'), '/land')}",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "SV-goAhead_SOBEYS_CANADA",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "CP-SOBEYS_CANADA_ToLand",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "goAhead",
										"value": {
											"value": "@{if(greater(activity('CP-SOBEYS_CANADA_ToLand').output.filesWritten, 0), 'Y', 'N')}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP-CP-SOBEYS_CANADA_ToLand",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "CP-SOBEYS_CANADA_ToLand",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.00:10:00",
										"retry": 50,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
										"storedProcedureParameters": {
											"activity_name": {
												"value": "CP-HYL_CANADA_ToLand",
												"type": "String"
											},
											"activity_status": {
												"value": {
													"value": "Failed",
													"type": "Expression"
												},
												"type": "String"
											},
											"application_name": {
												"value": {
													"value": "@pipeline().parameters.application_name",
													"type": "Expression"
												},
												"type": "String"
											},
											"dataset_name": {
												"value": {
													"value": "@pipeline().parameters.dataset_name",
													"type": "Expression"
												},
												"type": "String"
											},
											"error_code": {
												"value": {
													"value": "@activity('CP-SOBEYS_CANADA_ToLand').output.errors[0].Code",
													"type": "Expression"
												},
												"type": "String"
											},
											"error_detail": {
												"value": {
													"value": "@activity('CP-SOBEYS_CANADA_ToLand').output.errors[0].Message",
													"type": "Expression"
												},
												"type": "String"
											},
											"pipeline_run_id": {
												"value": {
													"value": "@{pipeline().RunId}",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_SQL",
										"type": "LinkedServiceReference"
									}
								}
							]
						},
						{
							"value": "LS_SFTP_SALES_CA_METRO",
							"activities": [
								{
									"name": "CP-METRO_CANADA_ToLand",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "SftpReadSettings",
												"recursive": false,
												"wildcardFileName": {
													"value": "@{pipeline().parameters.filename}",
													"type": "Expression"
												},
												"deleteFilesAfterCompletion": false
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false,
										"skipErrorFile": {
											"fileMissing": false
										}
									},
									"inputs": [
										{
											"referenceName": "DS_KHCDE_GENERIC_METRO_CANADA_BINARY_Folder",
											"type": "DatasetReference",
											"parameters": {
												"sftp_path": {
													"value": "@{pipeline().parameters.server_path}",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
											"type": "DatasetReference",
											"parameters": {
												"container_name": {
													"value": "@{pipeline().parameters.container_name}",
													"type": "Expression"
												},
												"blob_name": {
													"value": "@{concat(replace(pipeline().parameters.archival_blob_name, 'yyyyMMdd', 'processing'), '/land')}",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "SV-goAhead_METRO_CANADA",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "CP-METRO_CANADA_ToLand",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "goAhead",
										"value": {
											"value": "@{if(greater(activity('CP-METRO_CANADA_ToLand').output.filesWritten, 0), 'Y', 'N')}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP-CP-METRO_CANADA_ToLand",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "CP-METRO_CANADA_ToLand",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.00:10:00",
										"retry": 50,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
										"storedProcedureParameters": {
											"activity_name": {
												"value": "CP-METRO_CANADA_ToLand",
												"type": "String"
											},
											"activity_status": {
												"value": {
													"value": "Failed",
													"type": "Expression"
												},
												"type": "String"
											},
											"application_name": {
												"value": {
													"value": "@pipeline().parameters.application_name",
													"type": "Expression"
												},
												"type": "String"
											},
											"dataset_name": {
												"value": {
													"value": "@pipeline().parameters.dataset_name",
													"type": "Expression"
												},
												"type": "String"
											},
											"error_code": {
												"value": {
													"value": "@activity('CP-METRO_CANADA_ToLand').output.errors[0].Code",
													"type": "Expression"
												},
												"type": "String"
											},
											"error_detail": {
												"value": {
													"value": "@activity('CP-METRO_CANADA_ToLand').output.errors[0].Message",
													"type": "Expression"
												},
												"type": "String"
											},
											"pipeline_run_id": {
												"value": {
													"value": "@{pipeline().RunId}",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_SQL",
										"type": "LinkedServiceReference"
									}
								}
							]
						},
						{
							"value": "LS_SFTP_IRI_GLOBAL",
							"activities": [
								{
									"name": "CP-IRI_GLOBAL_ToLand",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "SftpReadSettings",
												"maxConcurrentConnections": 1,
												"recursive": false,
												"wildcardFileName": {
													"value": "@{pipeline().parameters.filename}",
													"type": "Expression"
												},
												"deleteFilesAfterCompletion": false
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false,
										"skipErrorFile": {
											"fileMissing": false
										}
									},
									"inputs": [
										{
											"referenceName": "DS_KHCDE_GENERIC_IRI_GLOBAL_BINARY_Folder",
											"type": "DatasetReference",
											"parameters": {
												"sftp_path": {
													"value": "@{pipeline().parameters.server_path}",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
											"type": "DatasetReference",
											"parameters": {
												"container_name": {
													"value": "@{pipeline().parameters.container_name}",
													"type": "Expression"
												},
												"blob_name": {
													"value": "@{concat(replace(pipeline().parameters.archival_blob_name, 'yyyyMMdd', 'processing'), '/land')}",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "SV-goAhead_IRI_GLOBAL",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "CP-IRI_GLOBAL_ToLand",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "goAhead",
										"value": {
											"value": "@{if(greater(activity('CP-IRI_GLOBAL_ToLand').output.filesWritten, 0), 'Y', 'N')}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP-CP-IRI_GLOBAL_ToLand",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "CP-IRI_GLOBAL_ToLand",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.00:10:00",
										"retry": 50,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
										"storedProcedureParameters": {
											"activity_name": {
												"value": "CP-IRI_GLOBAL_ToLand",
												"type": "String"
											},
											"activity_status": {
												"value": {
													"value": "Failed",
													"type": "Expression"
												},
												"type": "String"
											},
											"application_name": {
												"value": {
													"value": "@pipeline().parameters.application_name",
													"type": "Expression"
												},
												"type": "String"
											},
											"dataset_name": {
												"value": {
													"value": "@pipeline().parameters.dataset_name",
													"type": "Expression"
												},
												"type": "String"
											},
											"error_code": {
												"value": {
													"value": "@activity('CP-IRI_GLOBAL_ToLand').output.errors[0].Code",
													"type": "Expression"
												},
												"type": "String"
											},
											"error_detail": {
												"value": {
													"value": "@activity('CP-IRI_GLOBAL_ToLand').output.errors[0].Message",
													"type": "Expression"
												},
												"type": "String"
											},
											"pipeline_run_id": {
												"value": {
													"value": "@{pipeline().RunId}",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_SQL",
										"type": "LinkedServiceReference"
									}
								}
							]
						},
						{
							"value": "LS_FS_ORACLE_APPS_112",
							"activities": [
								{
									"name": "CP-FS_ORACLE_APPS_112_ToLand",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "FileServerReadSettings",
												"recursive": false,
												"wildcardFileName": {
													"value": "@{pipeline().parameters.filename}",
													"type": "Expression"
												},
												"deleteFilesAfterCompletion": false
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false,
										"skipErrorFile": {
											"fileMissing": false
										},
										"validateDataConsistency": false
									},
									"inputs": [
										{
											"referenceName": "DS_KHCDE_GENERIC_FS_ORACLE_APPs_112_BINARY_Folder",
											"type": "DatasetReference",
											"parameters": {
												"fs_path": {
													"value": "@{pipeline().parameters.server_path}",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
											"type": "DatasetReference",
											"parameters": {
												"container_name": {
													"value": "@{pipeline().parameters.container_name}",
													"type": "Expression"
												},
												"blob_name": {
													"value": "@{concat(replace(pipeline().parameters.archival_blob_name, 'yyyyMMdd', 'processing'), '/land')}",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "SV-goAhead_FS_ORACLE_APPS_112",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "CP-FS_ORACLE_APPS_112_ToLand",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "goAhead",
										"value": {
											"value": "@{if(greater(activity('CP-FS_ORACLE_APPS_112_ToLand').output.filesWritten, 0), 'Y', 'N')}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP-CP-FS_ORACLE_APPS_112_ToLand",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "CP-FS_ORACLE_APPS_112_ToLand",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.00:10:00",
										"retry": 50,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
										"storedProcedureParameters": {
											"activity_name": {
												"value": "CP-FS_ORACLE_APPS_112_ToLand",
												"type": "String"
											},
											"activity_status": {
												"value": {
													"value": "Failed",
													"type": "Expression"
												},
												"type": "String"
											},
											"application_name": {
												"value": {
													"value": "@pipeline().parameters.application_name",
													"type": "Expression"
												},
												"type": "String"
											},
											"dataset_name": {
												"value": {
													"value": "@pipeline().parameters.dataset_name",
													"type": "Expression"
												},
												"type": "String"
											},
											"error_code": {
												"value": {
													"value": "@activity('CP-FS_ORACLE_APPS_112_ToLand').output.errors[0].Code",
													"type": "Expression"
												},
												"type": "String"
											},
											"error_detail": {
												"value": {
													"value": "@activity('CP-FS_ORACLE_APPS_112_ToLand').output.errors[0].Message",
													"type": "Expression"
												},
												"type": "String"
											},
											"pipeline_run_id": {
												"value": {
													"value": "@{pipeline().RunId}",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_SQL",
										"type": "LinkedServiceReference"
									}
								}
							]
						},
						{
							"value": "LS_SFTP_NIELSEN_SDEL2",
							"activities": [
								{
									"name": "CP-NIELSEN_SDEL2_ToLand",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "SftpReadSettings",
												"recursive": false,
												"wildcardFileName": {
													"value": "@{pipeline().parameters.filename}",
													"type": "Expression"
												},
												"deleteFilesAfterCompletion": false
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false,
										"skipErrorFile": {
											"fileMissing": false
										}
									},
									"inputs": [
										{
											"referenceName": "DS_KHCDE_GENERIC_NIELSEN_SDEL2_BINARY_Folder",
											"type": "DatasetReference",
											"parameters": {
												"sftp_path": {
													"value": "@{pipeline().parameters.server_path}",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
											"type": "DatasetReference",
											"parameters": {
												"container_name": {
													"value": "@{pipeline().parameters.container_name}",
													"type": "Expression"
												},
												"blob_name": {
													"value": "@{concat(replace(pipeline().parameters.archival_blob_name, 'yyyyMMdd', 'processing'), '/land')}",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "SV-goAhead_NIELSEN_SDEL2",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "CP-NIELSEN_SDEL2_ToLand",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "goAhead",
										"value": {
											"value": "@{if(greater(activity('CP-NIELSEN_SDEL2_ToLand').output.filesWritten, 0), 'Y', 'N')}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP-CP-NIELSEN_SDEL2_ToLand",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "CP-NIELSEN_SDEL2_ToLand",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.00:10:00",
										"retry": 50,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
										"storedProcedureParameters": {
											"activity_name": {
												"value": "CP-NIELSEN_SDEL2_ToLand",
												"type": "String"
											},
											"activity_status": {
												"value": {
													"value": "Failed",
													"type": "Expression"
												},
												"type": "String"
											},
											"application_name": {
												"value": {
													"value": "@pipeline().parameters.application_name",
													"type": "Expression"
												},
												"type": "String"
											},
											"dataset_name": {
												"value": {
													"value": "@pipeline().parameters.dataset_name",
													"type": "Expression"
												},
												"type": "String"
											},
											"error_code": {
												"value": {
													"value": "@activity('CP-NIELSEN_SDEL2_ToLand').output.errors[0].Code",
													"type": "Expression"
												},
												"type": "String"
											},
											"error_detail": {
												"value": {
													"value": "@activity('CP-NIELSEN_SDEL2_ToLand').output.errors[0].Message",
													"type": "Expression"
												},
												"type": "String"
											},
											"pipeline_run_id": {
												"value": {
													"value": "@{pipeline().RunId}",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_SQL",
										"type": "LinkedServiceReference"
									}
								}
							]
						},
						{
							"value": "LS_AZ_KHC_DATASHARE_STRGV2",
							"activities": [
								{
									"name": "CP-KHC_DATASHARE_STRGV2ToLand",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": false,
												"wildcardFileName": {
													"value": "@{pipeline().parameters.filename}",
													"type": "Expression"
												},
												"deleteFilesAfterCompletion": false
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false,
										"skipErrorFile": {
											"fileMissing": false,
											"fileForbidden": false
										},
										"validateDataConsistency": false
									},
									"inputs": [
										{
											"referenceName": "DS_KHCDE_GENERIC_KHC_DATASHARE_STRGV2_Folder",
											"type": "DatasetReference",
											"parameters": {
												"container_name": {
													"value": "@substring(pipeline().parameters.server_path,0,indexof(pipeline().parameters.server_path,'/'))",
													"type": "Expression"
												},
												"blob_name": {
													"value": "@substring(pipeline().parameters.server_path,add(indexof(pipeline().parameters.server_path,'/'),1),sub(sub(length(pipeline().parameters.server_path),indexof(pipeline().parameters.server_path,'/')),1))",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
											"type": "DatasetReference",
											"parameters": {
												"container_name": {
													"value": "@{pipeline().parameters.container_name}",
													"type": "Expression"
												},
												"blob_name": {
													"value": "@{concat(replace(pipeline().parameters.archival_blob_name, 'yyyyMMdd', 'processing'), '/land')}",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "SV-goAhead_KHC_DATASHARE_STRGV2",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "CP-KHC_DATASHARE_STRGV2ToLand",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "goAhead",
										"value": {
											"value": "@{if(greater(activity('CP-KHC_DATASHARE_STRGV2ToLand').output.filesWritten, 0), 'Y', 'N')}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP-CP-KHC_DATASHARE_STRGV2ToLand",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "CP-KHC_DATASHARE_STRGV2ToLand",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.00:10:00",
										"retry": 50,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
										"storedProcedureParameters": {
											"activity_name": {
												"value": "CP-KHC_DATASHARE_STRGV2ToLand",
												"type": "String"
											},
											"activity_status": {
												"value": {
													"value": "Failed",
													"type": "Expression"
												},
												"type": "String"
											},
											"application_name": {
												"value": {
													"value": "@pipeline().parameters.application_name",
													"type": "Expression"
												},
												"type": "String"
											},
											"dataset_name": {
												"value": {
													"value": "@pipeline().parameters.dataset_name",
													"type": "Expression"
												},
												"type": "String"
											},
											"error_code": {
												"value": {
													"value": "@activity('CP-KHC_DATASHARE_STRGV2ToLand').output.errors[0].Code",
													"type": "Expression"
												},
												"type": "String"
											},
											"error_detail": {
												"value": {
													"value": "@activity('CP-KHC_DATASHARE_STRGV2ToLand').output.errors[0].Message",
													"type": "Expression"
												},
												"type": "String"
											},
											"pipeline_run_id": {
												"value": {
													"value": "@{pipeline().RunId}",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_SQL",
										"type": "LinkedServiceReference"
									}
								}
							]
						},
						{
							"value": "LS_FS_CA_FNP01",
							"activities": [
								{
									"name": "CP-CA_FNP01ToLand",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "FileServerReadSettings",
												"recursive": false,
												"wildcardFileName": {
													"value": "@{pipeline().parameters.filename}",
													"type": "Expression"
												},
												"deleteFilesAfterCompletion": false
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false,
										"skipErrorFile": {
											"fileMissing": false
										},
										"validateDataConsistency": false
									},
									"inputs": [
										{
											"referenceName": "DS_KHCDE_GENERIC_CA_FNP01_BINARY_Folder",
											"type": "DatasetReference",
											"parameters": {
												"fs_path": {
													"value": "@{pipeline().parameters.server_path}",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
											"type": "DatasetReference",
											"parameters": {
												"container_name": {
													"value": "@{pipeline().parameters.container_name}",
													"type": "Expression"
												},
												"blob_name": {
													"value": "@{concat(replace(pipeline().parameters.archival_blob_name, 'yyyyMMdd', 'processing'), '/land')}",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "SV-goAhead_CA_FNP01",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "CP-CA_FNP01ToLand",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "goAhead",
										"value": {
											"value": "@{if(greater(activity('CP-CA_FNP01ToLand').output.filesWritten, 0), 'Y', 'N')}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP-CP-CA_FNP01ToLand",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "CP-CA_FNP01ToLand",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.00:10:00",
										"retry": 50,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
										"storedProcedureParameters": {
											"activity_name": {
												"value": "CP-CA_FNP01ToLand",
												"type": "String"
											},
											"activity_status": {
												"value": {
													"value": "Failed",
													"type": "Expression"
												},
												"type": "String"
											},
											"application_name": {
												"value": {
													"value": "@pipeline().parameters.application_name",
													"type": "Expression"
												},
												"type": "String"
											},
											"dataset_name": {
												"value": {
													"value": "@pipeline().parameters.dataset_name",
													"type": "Expression"
												},
												"type": "String"
											},
											"error_code": {
												"value": {
													"value": "@activity('CP-CA_FNP01ToLand').output.errors[0].Code",
													"type": "Expression"
												},
												"type": "String"
											},
											"error_detail": {
												"value": {
													"value": "@activity('CP-CA_FNP01ToLand').output.errors[0].Message",
													"type": "Expression"
												},
												"type": "String"
											},
											"pipeline_run_id": {
												"value": {
													"value": "@{pipeline().RunId}",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_SQL",
										"type": "LinkedServiceReference"
									}
								}
							]
						},
						{
							"value": "LS_FS_FOODSERVICE_US_VIA",
							"activities": [
								{
									"name": "CP-FS_FOODSERVICE_US_VIA_ToLand",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "FileServerReadSettings",
												"recursive": false,
												"wildcardFileName": {
													"value": "@{pipeline().parameters.filename}",
													"type": "Expression"
												},
												"deleteFilesAfterCompletion": false
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false,
										"skipErrorFile": {
											"fileMissing": false
										},
										"validateDataConsistency": false
									},
									"inputs": [
										{
											"referenceName": "DS_KHCDE_GENERIC_FS_FOODSERVICE_US_VIA_BINARY_Folder",
											"type": "DatasetReference",
											"parameters": {
												"fs_path": {
													"value": "@{pipeline().parameters.server_path}",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
											"type": "DatasetReference",
											"parameters": {
												"container_name": {
													"value": "@{pipeline().parameters.container_name}",
													"type": "Expression"
												},
												"blob_name": {
													"value": "@{concat(replace(pipeline().parameters.archival_blob_name, 'yyyyMMdd', 'processing'), '/land')}",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "SV-goAhead_FS_FOODSERVICE_US_VIA",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "CP-FS_FOODSERVICE_US_VIA_ToLand",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "goAhead",
										"value": {
											"value": "@{if(greater(activity('CP-FS_FOODSERVICE_US_VIA_ToLand').output.filesWritten, 0), 'Y', 'N')}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP-CP-FS_FOODSERVICE_US_VIA_ToLand",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "CP-FS_FOODSERVICE_US_VIA_ToLand",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.00:10:00",
										"retry": 50,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
										"storedProcedureParameters": {
											"activity_name": {
												"value": "CP-FS_FOODSERVICE_US_VIA_ToLand",
												"type": "String"
											},
											"activity_status": {
												"value": {
													"value": "Failed",
													"type": "Expression"
												},
												"type": "String"
											},
											"application_name": {
												"value": {
													"value": "@pipeline().parameters.application_name",
													"type": "Expression"
												},
												"type": "String"
											},
											"dataset_name": {
												"value": {
													"value": "@pipeline().parameters.dataset_name",
													"type": "Expression"
												},
												"type": "String"
											},
											"error_code": {
												"value": {
													"value": "@activity('CP-FS_FOODSERVICE_US_VIA_ToLand').output.errors[0].Code",
													"type": "Expression"
												},
												"type": "String"
											},
											"error_detail": {
												"value": {
													"value": "@activity('CP-FS_FOODSERVICE_US_VIA_ToLand').output.errors[0].Message",
													"type": "Expression"
												},
												"type": "String"
											},
											"pipeline_run_id": {
												"value": {
													"value": "@{pipeline().RunId}",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_SQL",
										"type": "LinkedServiceReference"
									}
								}
							]
						},
						{
							"value": "LS_AZ_XTEL",
							"activities": [
								{
									"name": "CP-KHC_XTEL_STRGV2ToLand",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": false,
												"wildcardFileName": {
													"value": "@{pipeline().parameters.filename}",
													"type": "Expression"
												},
												"deleteFilesAfterCompletion": false
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false,
										"skipErrorFile": {
											"fileMissing": false,
											"fileForbidden": false
										},
										"validateDataConsistency": false
									},
									"inputs": [
										{
											"referenceName": "DS_KHCDE_GENERIC_KHC_XTEL_STRGV2_Folder",
											"type": "DatasetReference",
											"parameters": {
												"container_name": {
													"value": "@substring(pipeline().parameters.server_path,0,indexof(pipeline().parameters.server_path,'/'))",
													"type": "Expression"
												},
												"blob_name": {
													"value": "@substring(pipeline().parameters.server_path,add(indexof(pipeline().parameters.server_path,'/'),1),sub(sub(length(pipeline().parameters.server_path),indexof(pipeline().parameters.server_path,'/')),1))",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
											"type": "DatasetReference",
											"parameters": {
												"container_name": {
													"value": "@{pipeline().parameters.container_name}",
													"type": "Expression"
												},
												"blob_name": {
													"value": "@{concat(replace(pipeline().parameters.archival_blob_name, 'yyyyMMdd', 'processing'), '/land')}",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "SV-goAhead_KHC_XTEL_STRGV2",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "CP-KHC_XTEL_STRGV2ToLand",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "goAhead",
										"value": {
											"value": "@{if(greater(activity('CP-KHC_XTEL_STRGV2ToLand').output.filesWritten, 0), 'Y', 'N')}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP-CP-KHC_XTEL_STRGV2ToLand",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "CP-KHC_XTEL_STRGV2ToLand",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.00:10:00",
										"retry": 50,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
										"storedProcedureParameters": {
											"activity_name": {
												"value": "CP-KHC_XTEL_STRGV2ToLand",
												"type": "String"
											},
											"activity_status": {
												"value": {
													"value": "Failed",
													"type": "Expression"
												},
												"type": "String"
											},
											"application_name": {
												"value": {
													"value": "@pipeline().parameters.application_name",
													"type": "Expression"
												},
												"type": "String"
											},
											"dataset_name": {
												"value": {
													"value": "@pipeline().parameters.dataset_name",
													"type": "Expression"
												},
												"type": "String"
											},
											"error_code": {
												"value": {
													"value": "@activity('CP-KHC_XTEL_STRGV2ToLand').output.errors[0].Code",
													"type": "Expression"
												},
												"type": "String"
											},
											"error_detail": {
												"value": {
													"value": "@activity('CP-KHC_XTEL_STRGV2ToLand').output.errors[0].Message",
													"type": "Expression"
												},
												"type": "String"
											},
											"pipeline_run_id": {
												"value": {
													"value": "@{pipeline().RunId}",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_SQL",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					],
					"defaultActivities": [
						{
							"name": "SV-goAhead",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "goAhead",
								"value": {
									"value": "X",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "GM-goAhead",
				"description": "Get Metadata of GoAhead folder",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.00:10:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_FolderFile",
						"type": "DatasetReference",
						"parameters": {
							"container_name": {
								"value": "@{pipeline().parameters.container_name}",
								"type": "Expression"
							},
							"blob_name": {
								"value": "@{concat(replace(pipeline().parameters.archival_blob_name, 'yyyyMMdd', 'processing'), '/noGo')}",
								"type": "Expression"
							},
							"file_name": {
								"value": "@if(contains(pipeline().parameters.blob_trigger_name, '/'), last(split(pipeline().parameters.blob_trigger_name, '/')), pipeline().parameters.blob_trigger_name)",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"exists"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			},
			{
				"name": "SW-goAhead",
				"description": "Switch based on goAhead Variable value",
				"type": "Switch",
				"dependsOn": [
					{
						"activity": "GM-goAhead",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "SW-Server",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"on": {
						"value": "@concat(variables('goAhead'), if(activity('GM-goAhead').output.exists, 1, 0))",
						"type": "Expression"
					},
					"cases": [
						{
							"value": "Y0",
							"activities": [
								{
									"name": "SP-ActivitySuccess01",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:10:00",
										"retry": 50,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[dbo].[generic_activity_audit_log]",
										"storedProcedureParameters": {
											"activity_name": {
												"value": {
													"value": "CP-ServerToLand",
													"type": "Expression"
												},
												"type": "String"
											},
											"application_name": {
												"value": {
													"value": "@{pipeline().parameters.application_name}",
													"type": "Expression"
												},
												"type": "String"
											},
											"dataset_name": {
												"value": {
													"value": "@{pipeline().parameters.dataset_name}",
													"type": "Expression"
												},
												"type": "String"
											},
											"pipeline_run_id": {
												"value": {
													"value": "@{pipeline().parameters.pipeline_run_id}",
													"type": "Expression"
												},
												"type": "String"
											},
											"activity_status": {
												"value": {
													"value": "Successful",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_SQL",
										"type": "LinkedServiceReference"
									}
								}
							]
						},
						{
							"value": "Y1",
							"activities": [
								{
									"name": "SP-ActivitySuccess02",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:10:00",
										"retry": 50,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[dbo].[generic_activity_audit_log]",
										"storedProcedureParameters": {
											"activity_name": {
												"value": {
													"value": "CP-ServerToLand",
													"type": "Expression"
												},
												"type": "String"
											},
											"application_name": {
												"value": {
													"value": "@{pipeline().parameters.application_name}",
													"type": "Expression"
												},
												"type": "String"
											},
											"dataset_name": {
												"value": {
													"value": "@{pipeline().parameters.dataset_name}",
													"type": "Expression"
												},
												"type": "String"
											},
											"pipeline_run_id": {
												"value": {
													"value": "@{pipeline().parameters.pipeline_run_id}",
													"type": "Expression"
												},
												"type": "String"
											},
											"activity_status": {
												"value": {
													"value": "Successful",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_SQL",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "DL-noGo",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "SP-ActivitySuccess02",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:10:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_FolderFile",
											"type": "DatasetReference",
											"parameters": {
												"container_name": {
													"value": "@{pipeline().parameters.container_name}",
													"type": "Expression"
												},
												"blob_name": {
													"value": "@{concat(replace(pipeline().parameters.archival_blob_name, 'yyyyMMdd', 'processing'), '/noGo')}",
													"type": "Expression"
												},
												"file_name": {
													"value": "@if(contains(pipeline().parameters.blob_trigger_name, '/'), last(split(pipeline().parameters.blob_trigger_name, '/')), pipeline().parameters.blob_trigger_name)",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true
										}
									}
								}
							]
						},
						{
							"value": "N0",
							"activities": [
								{
									"name": "CP-noGo02",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "select current_timestamp",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_KHCDE_GENERIC_MSSQL_Metadata",
											"type": "DatasetReference"
										}
									],
									"outputs": [
										{
											"referenceName": "DS_KHCDE_GENERIC_BLOB_CSV_FolderFile",
											"type": "DatasetReference",
											"parameters": {
												"container_name": {
													"value": "@{pipeline().parameters.container_name}",
													"type": "Expression"
												},
												"blob_name": {
													"value": "@{concat(replace(pipeline().parameters.archival_blob_name, 'yyyyMMdd', 'processing'), '/noGo')}",
													"type": "Expression"
												},
												"file_name": {
													"value": "@if(contains(pipeline().parameters.blob_trigger_name, '/'), last(split(pipeline().parameters.blob_trigger_name, '/')), pipeline().parameters.blob_trigger_name)",
													"type": "Expression"
												},
												"field_delimiter": {
													"value": ",",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						},
						{
							"value": "N1",
							"activities": [
								{
									"name": "Wait-Filler",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							]
						}
					]
				}
			}
		],
		"parameters": {
			"server_name": {
				"type": "string"
			},
			"application_name": {
				"type": "string"
			},
			"dataset_name": {
				"type": "string"
			},
			"server_path": {
				"type": "string"
			},
			"filename": {
				"type": "string"
			},
			"container_name": {
				"type": "string"
			},
			"archival_blob_name": {
				"type": "string"
			},
			"blob_trigger_name": {
				"type": "string"
			},
			"pipeline_name": {
				"type": "string"
			},
			"pipeline_run_id": {
				"type": "string"
			}
		},
		"variables": {
			"goAhead": {
				"type": "String",
				"defaultValue": "N"
			}
		},
		"folder": {
			"name": "Generic_Frameworks/Sub_Pipelines"
		},
		"annotations": []
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}