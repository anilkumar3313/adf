{
	"name": "PL_KHCDE_QUINTIQ_SFK_SFTP_EXTRACT",
	"properties": {
		"description": "Extracts quintiq data from snowflake tables as json files and copies into globalscape server.",
		"activities": [
			{
				"name": "Orchestration Metadata Lookup",
				"description": "To get the metadata for the dataset from orchestration metadata table",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Pipeline Start",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "select\napplication_name,\ndataset_name as dataset_group,\ncontainer_name,\nparameter_json,\narchival_blob_name\nfrom dbo.khc_orchestration_metadata where\napplication_name = '@{pipeline().parameters.application_name}'\nand dataset_group = '@{pipeline().parameters.dataset_group}'\nand active_ind='y'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_KHCDE_GENERIC_MSSQL_Metadata",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Generic Snowflake Extract",
				"description": "To copy data from snowflake to the blob storage",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Delete last dataset",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "PL_KHCDE_GENERIC_SnowflakeExtraction",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"ApplicationName": {
							"value": "@activity('Orchestration Metadata Lookup').output.value[0].application_name",
							"type": "Expression"
						},
						"DatasetGroup": {
							"value": "@activity('Orchestration Metadata Lookup').output.value[0].dataset_group",
							"type": "Expression"
						},
						"ParameterJson": {
							"value": "@activity('Orchestration Metadata Lookup').output.value[0].parameter_json",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Copy into business server",
				"description": "Copies data from blob storage file source into business teams server sink using sftp connection.",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Archive data",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 15,
					"retryIntervalInSeconds": 60,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"wildcardFolderPath": {
								"value": "@activity('Extract Metadata Lookup').output.value[0].extract_blob_location",
								"type": "Expression"
							},
							"wildcardFileName": {
								"value": "@{activity('Extract Metadata Lookup').output.value[0].extract_file_name}*",
								"type": "Expression"
							},
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "JsonSink",
						"storeSettings": {
							"type": "SftpWriteSettings",
							"operationTimeout": "01:00:00",
							"useTempFileRename": false
						},
						"formatSettings": {
							"type": "JsonWriteSettings",
							"filePattern": "arrayOfObjects"
						}
					},
					"enableStaging": false,
					"parallelCopies": 2
				},
				"inputs": [
					{
						"referenceName": "DS_KHCDE_QUINTIQ_BLOB_CSV",
						"type": "DatasetReference",
						"parameters": {
							"container_name": {
								"value": "@activity('Orchestration Metadata Lookup').output.value[0].container_name",
								"type": "Expression"
							},
							"blob_name": {
								"value": "@activity('Extract Metadata Lookup').output.value[0].extract_blob_location",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "DS_KHCDE_QUINTIQ_JSON_EXTRACT",
						"type": "DatasetReference",
						"parameters": {
							"SFTP_path": {
								"value": "@activity('Extract Metadata Lookup').output.value[0]. sftp_path",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Pipeline Start",
				"description": "Start of pipeline",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": "I",
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@pipeline().parameters.application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@pipeline().parameters.dataset_group",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_name": {
							"value": {
								"value": "@{pipeline().Pipeline}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": "Processing",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Pipeline Successful",
				"description": "Pipeline completed successfully",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Copy into business server",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": "U",
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@pipeline().parameters.application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@pipeline().parameters.dataset_group",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_name": {
							"value": {
								"value": "@{pipeline().Pipeline}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": "Successful",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Copy into server Failed",
				"description": "Pipeline failed to copy from blob to business's server",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Copy into business server",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": "U",
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@pipeline().parameters.application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@pipeline().parameters.dataset_group",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_name": {
							"value": {
								"value": "@{pipeline().Pipeline}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": "Failed",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Snowflake Extraction Failed",
				"description": "Pipeline failed to extract data from snowflake into blob",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Generic Snowflake Extract",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": "U",
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@pipeline().parameters.application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@pipeline().parameters.dataset_group",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_name": {
							"value": {
								"value": "@{pipeline().Pipeline}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": "Failed",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Snowflake Extract Success",
				"description": "Snowflake Extraction completed successfully",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Generic Snowflake Extract",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": "U",
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@pipeline().parameters.application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@pipeline().parameters.dataset_group",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_name": {
							"value": {
								"value": "@{pipeline().Pipeline}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": "Successful",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Extract Metadata Lookup",
				"description": "Lookup metadata for extracting the data from snowflake Gold tables",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Pipeline Start",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "select\nextract_blob_location,\nextract_file_name,\nsftp_path\nfrom dbo.khc_enggextract_metadata where\napplication_name = '@{pipeline().parameters.application_name}'\nand dataset_group = '@{pipeline().parameters.dataset_group}'\nand active_ind='y'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_KHCDE_GENERIC_MSSQL_Metadata",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Delete last dataset",
				"description": "Delete the folder of previous run",
				"type": "Delete",
				"dependsOn": [
					{
						"activity": "Extract Metadata Lookup",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Orchestration Metadata Lookup",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DS_KHCDE_QUINTIQ_BLOB_CSV",
						"type": "DatasetReference",
						"parameters": {
							"container_name": "@activity('Orchestration Metadata Lookup').output.value[0].container_name",
							"blob_name": "@activity('Extract Metadata Lookup').output.value[0].extract_blob_location"
						}
					},
					"enableLogging": false,
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					}
				}
			},
			{
				"name": "Archive data",
				"description": "Archiving the files into JSON format ",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Snowflake Extract Success",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"wildcardFolderPath": {
								"value": "@activity('Extract Metadata Lookup').output.value[0].extract_blob_location",
								"type": "Expression"
							},
							"wildcardFileName": "*",
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "JsonSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "JsonWriteSettings",
							"filePattern": "arrayOfObjects"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "DS_KHCDE_QUINTIQ_BLOB_CSV",
						"type": "DatasetReference",
						"parameters": {
							"container_name": "@activity('Orchestration Metadata Lookup').output.value[0].container_name",
							"blob_name": {
								"value": "@activity('Extract Metadata Lookup').output.value[0].extract_blob_location",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "DS_KHCDE_QUINTIQ_EXTRACT_ARCHIVE",
						"type": "DatasetReference",
						"parameters": {
							"container_name": {
								"value": "@activity('Orchestration Metadata Lookup').output.value[0].container_name",
								"type": "Expression"
							},
							"blob_name": {
								"value": "@replace(activity('Orchestration Metadata Lookup').output.value[0].archival_blob_name,'yyyyMMdd',string(formatDateTime(utcNow(),'yyyyMMdd')))",
								"type": "Expression"
							}
						}
					}
				]
			}
		],
		"parameters": {
			"application_name": {
				"type": "string",
				"defaultValue": "quintiq"
			},
			"dataset_group": {
				"type": "string",
				"defaultValue": "batch_demand"
			}
		},
		"folder": {
			"name": "Quintiq"
		},
		"annotations": []
	}
}