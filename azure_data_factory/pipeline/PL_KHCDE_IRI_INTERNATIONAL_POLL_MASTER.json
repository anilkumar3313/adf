{
	"name": "PL_KHCDE_IRI_INTERNATIONAL_POLL_MASTER",
	"properties": {
		"description": "This has 2 Pipelines to Process the data. 1. Ingest Data from RAW blob .csv file to Snowflake Stage Tables and 2. Transform the data from Stage Tables and load to the final base tables.",
		"activities": [
			{
				"name": "SP-PipelineStart_Master",
				"description": "pipeline start master",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "LU-Metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": {
								"value": "I",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@{activity('LU-Metadata').output.value[0].application_name}",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@{activity('LU-Metadata').output.value[0].dataset_group}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_name": {
							"value": {
								"value": "@{pipeline().Pipeline}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": {
								"value": "Processing",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-PipelineSuccessful_Master",
				"description": "pipeline successful master",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "EP-DBTProcessing",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": {
								"value": "U",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@{activity('LU-Metadata').output.value[0].application_name}",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@{activity('LU-Metadata').output.value[0].dataset_group}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_name": {
							"value": {
								"value": "@{pipeline().Pipeline}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": {
								"value": "Successful",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-PipelineFailed_Master02",
				"description": "pipeline failed master",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "EP-SnowflakeIngestion",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": {
								"value": "U",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@{activity('LU-Metadata').output.value[0].application_name}",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@{activity('LU-Metadata').output.value[0].dataset_group}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_name": {
							"value": {
								"value": "@{pipeline().Pipeline}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": {
								"value": "Failed",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "LU-Metadata",
				"description": "lu metadata",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "SP-PipelineStart",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "@{concat('select * from khc_orchestration_metadata where application_name = ', '''', 'iri_international', '''', ' and blob_trigger_name = ', '''', pipeline().parameters.blob_trigger_name, '''', ' and data_level = 2 and active_ind = ', '''', 'y', '''')}",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_KHCDE_GENERIC_MSSQL_Metadata",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "EP-SnowflakeIngestion",
				"description": "snowflakes ingestion",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "LU-Metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "PL_KHCDE_GENERIC_SnowflakeIngestion",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"ApplicationName": {
							"value": "@{activity('LU-Metadata').output.value[0].application_name}",
							"type": "Expression"
						},
						"DatasetGroup": {
							"value": "@{activity('LU-Metadata').output.value[0].dataset_group}",
							"type": "Expression"
						},
						"ParameterJson": {
							"value": "@{activity('LU-Metadata').output.value[0].parameter_json}",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "EP-DBTProcessing",
				"description": "dbt processing",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "EP-SnowflakeIngestion",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "PL_KHCDE_GENERIC_DBTProcessing",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"ApplicationName": {
							"value": "@{activity('LU-Metadata').output.value[0].application_name}",
							"type": "Expression"
						},
						"DatasetGroup": {
							"value": "@{activity('LU-Metadata').output.value[0].dataset_group}",
							"type": "Expression"
						},
						"ParameterJson": {
							"value": "@{activity('LU-Metadata').output.value[0].parameter_json}",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "SP-PipelineFailed_Master03",
				"description": "pipeline failed master",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "EP-DBTProcessing",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": {
								"value": "U",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@{activity('LU-Metadata').output.value[0].application_name}",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@{activity('LU-Metadata').output.value[0].dataset_group}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_name": {
							"value": {
								"value": "@{pipeline().Pipeline}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": {
								"value": "Failed",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "FailureEmailSender_sfk",
				"description": "email sent to user",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "condition_sfk",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@variables('logicapp_url')",
						"type": "Expression"
					},
					"method": "POST",
					"body": {
						"value": "{\n\"to_email\":\"@{variables('to_emails')}\",\n\"subject\":\" Important!!! IRI International Snowflake Data Load Process Failed\",\n\"body\": \"Hi Team ,<br><br>Snowflake data load process has Failed for the Application :IRI_INTERNATIONAL <br><br>\nPlease find details below:\n<table style=\\\"width:100%\\\" border=\\\"1\\\">\n<tr>\n<td>Table Name</td>\n<td style=\\\"background-color:#FFFF00\\\">@{activity('LU-Metadata').output.value[0].stage_table_name} </td>\n</tr>\n<tr>\n<td>Dataset name</td>\n<td style=\\\"background-color:#FFFF00\\\">@{activity('LU-Metadata').output.value[0].dataset_name}</td>\n</tr>\n<tr>\n<td>Pipeline Name</td>\n<td>@{pipeline().Pipeline}</td>\n</tr>\n<tr>\n<td>PipelineId</td>\n<td>@{pipeline().RunId}</td>\n</tr>\n<tr>\n<td>Pipeline Start Time</td> \n<td>@{pipeline().TriggerTime}</td>\n</tr>\n<tr>\n<td>Status</td>\n<td style=\\\"background-color:#e99090\\\">Fail</td>\n</tr>\n</table><br><br>\nRegards,<br>DE Team\",\n\"importance\": \"High\",\n\"cc_email\":\"@{variables('cc_emails')}\"\n}\n",
						"type": "Expression"
					}
				}
			},
			{
				"name": "condition_sfk",
				"description": "Picks up corresponding email based on condition provided",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "SP-PipelineFailed_Master02",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@or(\nequals(pipeline().globalParameters.AZURE_ENV,'DEV'),\nequals(pipeline().globalParameters.AZURE_ENV,'UAT')\n)",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Set variable2",
							"description": "picks PROD email details",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "cc_emails",
								"value": "KHCSELLOUTBU@kraftheinz.com"
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Set variable1",
							"description": "picks up DEV and UAT email details",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "cc_emails",
								"value": "monalisha.dash@kraftheinz.com,shahana.k@kraftheinz.com,sandeep.kothapelly@kraftheinz.com,6205151a.Heinz365.onmicrosoft.com@amer.teams.ms"
							}
						}
					]
				}
			},
			{
				"name": "FailureEmailSender_dbt",
				"description": "email sent to user",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "condition_dbt",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@variables('logicapp_url')",
						"type": "Expression"
					},
					"method": "POST",
					"body": {
						"value": "{\n\"to_email\":\"@{variables('to_emails')}\",\n\"subject\":\" Important!!! IRI International Snowflake Data Load Process Failed\",\n\"body\": \"Hi Team ,<br><br>Snowflake data load process has Failed for the Application :IRI_INTERNATIONAL <br><br>\nPlease find details below:\n<table style=\\\"width:100%\\\" border=\\\"1\\\">\n<tr>\n<td>Table Name</td>\n<td style=\\\"background-color:#FFFF00\\\">@{activity('LU-Metadata').output.value[0].stage_table_name} </td>\n</tr>\n<tr>\n<td>Dataset name</td>\n<td style=\\\"background-color:#FFFF00\\\">@{activity('LU-Metadata').output.value[0].dataset_name}</td>\n</tr>\n<tr>\n<td>Pipeline Name</td>\n<td>@{pipeline().Pipeline}</td>\n</tr>\n<tr>\n<td>PipelineId</td>\n<td>@{pipeline().RunId}</td>\n</tr>\n<tr>\n<td>Pipeline Start Time</td> \n<td>@{pipeline().TriggerTime}</td>\n</tr>\n<tr>\n<td>Status</td>\n<td style=\\\"background-color:#e99090\\\">Fail</td>\n</tr>\n</table><br><br>\nRegards,<br>DE Team\",\n\"importance\": \"High\",\n\"cc_email\":\"@{variables('cc_emails')}\"\n}\n",
						"type": "Expression"
					}
				}
			},
			{
				"name": "condition_dbt",
				"description": "Picks up corresponding email based on condition provided",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "SP-PipelineFailed_Master03",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@or(\nequals(pipeline().globalParameters.AZURE_ENV,'DEV'),\nequals(pipeline().globalParameters.AZURE_ENV,'UAT')\n)",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Set variable2_copy1",
							"description": "picks PROD email details",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "cc_emails",
								"value": "KHCSELLOUTBU@kraftheinz.com"
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Set variable1_copy1",
							"description": "picks up DEV and UAT email details",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "cc_emails",
								"value": "monalisha.dash@kraftheinz.com,shahana.k@kraftheinz.com,sandeep.kothapelly@kraftheinz.com,e2eadec5.Heinz365.onmicrosoft.com@amer.teams.ms"
							}
						}
					]
				}
			},
			{
				"name": "SP-PipelineStart",
				"description": "This Activity logs starting of pipeline in khc_audit_log table.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": {
								"value": "I",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": "iri_international",
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@pipeline().parameters.blob_trigger_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_name": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": {
								"value": "Triggered",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"blob_trigger_name": {
				"type": "string"
			}
		},
		"variables": {
			"exit_ind": {
				"type": "String",
				"defaultValue": "N"
			},
			"to_emails": {
				"type": "String",
				"defaultValue": "shahana.k@kraftheinz.com"
			},
			"logicapp_url": {
				"type": "String",
				"defaultValue": "@pipeline().globalParameters.la_khcde_generic_email_url"
			},
			"cc_emails": {
				"type": "String",
				"defaultValue": "monalisha.dash@kraftheinz.com,ec29e560.Heinz365.onmicrosoft.com@amer.teams.ms"
			}
		},
		"folder": {
			"name": "IRI_International"
		},
		"annotations": []
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}