{
	"name": "PL_KHCDE_DIGITAL_MRKT_MASTER_LOAD",
	"properties": {
		"description": "Digital Marketing Master Data load, process which load Raw files to Snowflake followed by DBT Transformations",
		"activities": [
			{
				"name": "Fetch_Metadata",
				"description": "Digital Marketing meta data look up activity,\nChecks for digital marketing metadata from khc_orchestration_metadata table.",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "pipeline_start_email",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "select * from khc_orchestration_metadata where application_name= '@{pipeline().parameters.application_name}' and dataset_group='@{replace(pipeline().parameters.Trigger_file_name,'.txt','')}' and data_level=2 and active_ind='y'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_KHCDE_GENERIC_MSSQL_Metadata",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "DBT_Processing",
				"description": "This activity invokes generic DBT processing pipeline for Digital Marketing data feeds.",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "SFK_ingestion_condition_check",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "PL_KHCDE_GENERIC_DBTProcessing",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"ApplicationName": {
							"value": "@activity('Fetch_Metadata').output.value[0].application_name",
							"type": "Expression"
						},
						"DatasetGroup": {
							"value": "@activity('Fetch_Metadata').output.value[0].dataset_group",
							"type": "Expression"
						},
						"ParameterJson": {
							"value": "@activity('Fetch_Metadata').output.value[0].parameter_json",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Pipeline_Start",
				"description": "This Activity logs starting of pipeline in khc_audit_logÂ table.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": "I",
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@pipeline().parameters.application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@pipeline().parameters.dataset_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_name": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": {
								"value": "Processing",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Fetch_Metadata_Audit_Detail_Success",
				"description": "This activity logs success of Fetch_Metadata activity in khc_audit_log_detail table.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Fetch_Metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": "Fetch_Metadata",
							"type": "String"
						},
						"activity_status": {
							"value": {
								"value": "Successful",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@pipeline().parameters.application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@pipeline().parameters.dataset_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Fetch_Metadata_Audit_Detail_Failure",
				"description": "This activity logs failure of Fetch_Metadataa activity in khc_audit_log_detail table and failure of pipeline in  khc_audit_log table.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Fetch_Metadata",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": "U",
							"type": "String"
						},
						"activity_name": {
							"value": "Fetch_Metadata",
							"type": "String"
						},
						"activity_status": {
							"value": "Failed",
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@pipeline().parameters.application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@pipeline().parameters.dataset_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_code": {
							"value": "N.A.",
							"type": "String"
						},
						"error_detail": {
							"value": "N.A.",
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": "Failed",
							"type": "String"
						},
						"skip_pipeline_audit_update": {
							"value": "N",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "DBT_Processing_Audit_Detail_Success",
				"description": "This activity logs success of DBT_Processing activity in khc_audit_log_detail table.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "DBT_Processing",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": "DBT_Processing",
							"type": "String"
						},
						"activity_status": {
							"value": {
								"value": "Successful",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@pipeline().parameters.application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@pipeline().parameters.dataset_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "DBT_Processing_Audit_Detail_Failure",
				"description": "This activity logs failure of DBT_Processing activity in khc_audit_log_detail table and failure of pipeline in  khc_audit_log table.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "DBT_Processing",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": "U",
							"type": "String"
						},
						"activity_name": {
							"value": "DBT_Processing",
							"type": "String"
						},
						"activity_status": {
							"value": "Failed",
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@pipeline().parameters.application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@pipeline().parameters.dataset_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_code": {
							"value": "N.A.",
							"type": "String"
						},
						"error_detail": {
							"value": "N.A.",
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": "Failed",
							"type": "String"
						},
						"skip_pipeline_audit_update": {
							"value": "N",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Pipeline_Successful",
				"description": "This Activity logs completion of pipeline in khc_audit_log table.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "DBT_Processing",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": {
								"value": "U",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@pipeline().parameters.application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@pipeline().parameters.dataset_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_name": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": "Successful",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Delete_Trigger_File_Audit_Detail_Success",
				"description": "This activity logs success of DL-Trigger activity in khc_audit_log_detail table.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Delete_After_Condition_Check",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": "DL-Trigger",
							"type": "String"
						},
						"activity_status": {
							"value": {
								"value": "Successful",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@pipeline().parameters.application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@pipeline().parameters.dataset_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Delete_Trigger_File_Audit_detail_failure",
				"description": "This activity logs failure of DL-Trigger activity in khc_audit_log_detail table and failure of pipeline in  khc_audit_log table.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Delete_After_Condition_Check",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": "U",
							"type": "String"
						},
						"activity_name": {
							"value": "DL-Trigger",
							"type": "String"
						},
						"activity_status": {
							"value": "Failed",
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@pipeline().parameters.application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@pipeline().parameters.dataset_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_code": {
							"value": "N.A.",
							"type": "String"
						},
						"error_detail": {
							"value": "N.A.",
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": "Failed",
							"type": "String"
						},
						"skip_pipeline_audit_update": {
							"value": "N",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SFK_ingestion_condition_check",
				"description": "SFK ingestion is called only when dataset group is not taxonomy.",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Delete_After_Condition_Check",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@and(not(equals(pipeline().parameters.Trigger_file_name,'digital_marketing_taxonomy.txt')),not(equals(pipeline().parameters.Trigger_file_name,'digital_marketing_trade_desk.txt')))",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "SFK_Ingestion",
							"description": "This activity invokes generic sfk ingestion pipeline for Digital Marketing data feed ingestion to snowflake.",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "PL_KHCDE_GENERIC_SnowflakeIngestion",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"ApplicationName": {
										"value": "@activity('Fetch_Metadata').output.value[0].application_name",
										"type": "Expression"
									},
									"DatasetGroup": {
										"value": "@activity('Fetch_Metadata').output.value[0].dataset_group",
										"type": "Expression"
									},
									"ParameterJson": {
										"value": "@activity('Fetch_Metadata').output.value[0].parameter_json",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "SFK_Ingestion_Audit_Detail_Success",
							"description": "This activity logs success of SFK_Ingestion activity in khc_audit_log_detail table.",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "SFK_Ingestion",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 5,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[generic_activity_audit_log]",
								"storedProcedureParameters": {
									"activity_name": {
										"value": "SFK_Ingestion",
										"type": "String"
									},
									"activity_status": {
										"value": {
											"value": "Successful",
											"type": "Expression"
										},
										"type": "String"
									},
									"application_name": {
										"value": {
											"value": "@pipeline().parameters.application_name",
											"type": "Expression"
										},
										"type": "String"
									},
									"dataset_name": {
										"value": {
											"value": "@pipeline().parameters.dataset_name",
											"type": "Expression"
										},
										"type": "String"
									},
									"pipeline_run_id": {
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_SQL",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "SFK_Ingestion_Audit_Detail_Failure",
							"description": "This activity logs failure of SFK_Ingestion activity in khc_audit_log_detail table and failure of pipeline in  khc_audit_log table.",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "SFK_Ingestion",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 5,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
								"storedProcedureParameters": {
									"action_ind": {
										"value": "U",
										"type": "String"
									},
									"activity_name": {
										"value": "SFK_Ingestion",
										"type": "String"
									},
									"activity_status": {
										"value": "Failed",
										"type": "String"
									},
									"application_name": {
										"value": "signal",
										"type": "String"
									},
									"dataset_name": {
										"value": {
											"value": "@pipeline().parameters.dataset_name",
											"type": "Expression"
										},
										"type": "String"
									},
									"error_code": {
										"value": "N.A.",
										"type": "String"
									},
									"error_detail": {
										"value": "N.A.",
										"type": "String"
									},
									"pipeline_run_id": {
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										},
										"type": "String"
									},
									"pipeline_status": {
										"value": "Failed",
										"type": "String"
									},
									"skip_pipeline_audit_update": {
										"value": "N",
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_SQL",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "SFK_ingestion_condition_check_Audit_Detail_Success",
				"description": "This activity logs success of SFK_Ingestion activity in khc_audit_log_detail table.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "SFK_ingestion_condition_check",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": "SFK_ingestion_condition_check",
							"type": "String"
						},
						"activity_status": {
							"value": {
								"value": "Successful",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@pipeline().parameters.application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@pipeline().parameters.dataset_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SFK_ingestion_condition_check_Audit_Detail_Failure",
				"description": "This activity logs failure of SFK_Ingestion activity in khc_audit_log_detail table and failure of pipeline in  khc_audit_log table.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "SFK_ingestion_condition_check",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": "U",
							"type": "String"
						},
						"activity_name": {
							"value": "SFK_ingestion_condition_check",
							"type": "String"
						},
						"activity_status": {
							"value": "Failed",
							"type": "String"
						},
						"application_name": {
							"value": "signal",
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@pipeline().parameters.dataset_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_code": {
							"value": "N.A.",
							"type": "String"
						},
						"error_detail": {
							"value": "N.A.",
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": "Failed",
							"type": "String"
						},
						"skip_pipeline_audit_update": {
							"value": "N",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "pipeline_start_email",
				"description": "Sends alert in teams channel. ",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "set_email_start_variable",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "set_email_success_vaiable",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "set_email_success_failure",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@pipeline().globalParameters.la_khcde_generic_email_url",
						"type": "Expression"
					},
					"method": "POST",
					"headers": {
						"Content-Type": "application/json"
					},
					"body": {
						"value": "{\n        \"to_email\": \"@{variables('email_start')}\",\n        \"subject\": \"@{pipeline().parameters.dataset_name} snowflakeIngestion has been started.\",\n        \"body\":\"@{pipeline().parameters.dataset_name} snowflakeIngestion has been started.\"\n} ",
						"type": "Expression"
					}
				}
			},
			{
				"name": "pipeline_success_email",
				"description": "Sends alert in teams channel.",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Pipeline_Successful",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@pipeline().globalParameters.la_khcde_generic_email_url",
						"type": "Expression"
					},
					"method": "POST",
					"headers": {
						"Content-Type": "application/json"
					},
					"body": {
						"value": "{\n        \"to_email\": \"@{variables('email_success')}\",\n        \"subject\": \"@{pipeline().parameters.dataset_name} snowflakeIngestion has been successfully completed.\",\n        \"body\":\"@{pipeline().parameters.dataset_name} snowflakeIngestion has been successfully completed.\"\n} ",
						"type": "Expression"
					}
				}
			},
			{
				"name": "pipeline_failure_email_fetch_metadata",
				"description": "Sends alert in teams channel.",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Fetch_Metadata",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@pipeline().globalParameters.la_khcde_generic_email_url",
						"type": "Expression"
					},
					"method": "POST",
					"headers": {
						"Content-Type": "application/json"
					},
					"body": {
						"value": "{\n        \"to_email\": \"@{variables('email_fail')}\",\n        \"subject\": \"@{pipeline().parameters.dataset_name} snowflakeIngestion have failed.\",\n        \"body\":\"@{pipeline().parameters.dataset_name} snowflakeIngestion have failed.\",\n        \"importance\":\"High\"\n} ",
						"type": "Expression"
					}
				}
			},
			{
				"name": "pipeline_failure_email_dl_trigger",
				"description": "Sends alert in teams channel.",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Delete_After_Condition_Check",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@pipeline().globalParameters.la_khcde_generic_email_url",
						"type": "Expression"
					},
					"method": "POST",
					"headers": {
						"Content-Type": "application/json"
					},
					"body": {
						"value": "{\n        \"to_email\": \"@{variables('email_fail')}\",\n        \"subject\": \"@{pipeline().parameters.dataset_name} snowflakeIngestion have failed.\",\n        \"body\":\"@{pipeline().parameters.dataset_name} snowflakeIngestion have failed.\",\n        \"importance\":\"High\"\n} ",
						"type": "Expression"
					}
				}
			},
			{
				"name": "pipeline_failure_email_sfk_ingestion",
				"description": "Sends alert in teams channel.",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "SFK_ingestion_condition_check",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@pipeline().globalParameters.la_khcde_generic_email_url",
						"type": "Expression"
					},
					"method": "POST",
					"headers": {
						"Content-Type": "application/json"
					},
					"body": {
						"value": "{\n        \"to_email\": \"@{variables('email_fail')}\",\n        \"subject\": \"@{pipeline().parameters.dataset_name} snowflakeIngestion have failed.\",\n        \"body\":\"@{pipeline().parameters.dataset_name} snowflakeIngestion have failed.\",\n        \"importance\":\"High\"\n} ",
						"type": "Expression"
					}
				}
			},
			{
				"name": "pipeline_failure_email_DBT_processing",
				"description": "Sends alert in teams channel.",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "DBT_Processing",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@pipeline().globalParameters.la_khcde_generic_email_url",
						"type": "Expression"
					},
					"method": "POST",
					"headers": {
						"Content-Type": "application/json"
					},
					"body": {
						"value": "{\n        \"to_email\": \"@{variables('email_fail')}\",\n        \"subject\": \"@{pipeline().parameters.dataset_name} snowflakeIngestion have failed.\",\n        \"body\":\"@{pipeline().parameters.dataset_name} snowflakeIngestion have failed.\",\n        \"importance\":\"High\"\n} ",
						"type": "Expression"
					}
				}
			},
			{
				"name": "set_email_start_variable",
				"description": "Set the value of email start.",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Pipeline_Start",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "email_start",
					"value": {
						"value": "@if(equals(pipeline().globalParameters.AZURE_ENV,'PROD'),'62c77a36.heinz365.onmicrosoft.com@amer.teams.ms,f835b56b.Heinz365.onmicrosoft.com@amer.teams.ms','56810c7e.Heinz365.onmicrosoft.com@amer.teams.ms')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "set_email_success_failure",
				"description": "Set the value of email fail.",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Pipeline_Start",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "email_fail",
					"value": {
						"value": "@if(equals(pipeline().globalParameters.AZURE_ENV,'PROD'),'62c77a36.heinz365.onmicrosoft.com@amer.teams.ms,f835b56b.Heinz365.onmicrosoft.com@amer.teams.ms','56810c7e.Heinz365.onmicrosoft.com@amer.teams.ms')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "set_email_success_vaiable",
				"description": "Set the value of email success.",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Pipeline_Start",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "email_success",
					"value": {
						"value": "@if(equals(pipeline().globalParameters.AZURE_ENV,'PROD'),'62c77a36.heinz365.onmicrosoft.com@amer.teams.ms,e6daff50.heinz365.onmicrosoft.com@amer.teams.ms,f835b56b.Heinz365.onmicrosoft.com@amer.teams.ms','56810c7e.Heinz365.onmicrosoft.com@amer.teams.ms')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Delete_After_Condition_Check",
				"description": "This activity checks the defined condition and deletes the trigger file.",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Fetch_Metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@and(not(equals(activity('Fetch_Metadata').output.value[0].container_name,'')),\nand(not(equals(activity('Fetch_Metadata').output.value[0].blob_trigger_name,'')),\nnot(equals(coalesce(activity('Fetch_Metadata').output.value[0].blob_trigger_name,''),''))))",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "DL-Trigger",
							"description": "This activity deletes the trigger file from location marketing/digital_marketing_triggers.",
							"type": "Delete",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 5,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "DS_KHCDE_ADLS_Blob",
									"type": "DatasetReference",
									"parameters": {
										"container": {
											"value": "@activity('Fetch_Metadata').output.value[0].container_name",
											"type": "Expression"
										},
										"stage_path": {
											"value": "@activity('Fetch_Metadata').output.value[0].blob_trigger_name",
											"type": "Expression"
										}
									}
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								}
							}
						}
					]
				}
			}
		],
		"concurrency": 1,
		"parameters": {
			"application_name": {
				"type": "string",
				"defaultValue": "digital_marketing"
			},
			"dataset_name": {
				"type": "string",
				"defaultValue": "digital_marketing_bing_ad_performance"
			},
			"Trigger_file_name": {
				"type": "string",
				"defaultValue": "digital_marketing_bing.txt"
			}
		},
		"variables": {
			"email_start": {
				"type": "String"
			},
			"email_success": {
				"type": "String"
			},
			"email_fail": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Digital_Marketing"
		},
		"annotations": []
	}
}