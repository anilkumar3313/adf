{
	"name": "PL_KHCDE_GENERIC_SUB_BLOBDeleteAll",
	"properties": {
		"description": "Pipeline to delete datasets.",
		"activities": [
			{
				"name": "Until-Delete",
				"description": "Checks Untill file is deleted.",
				"type": "Until",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@not(equals(variables('exit'), 'C'))",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Wait-Delete",
							"type": "Wait",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"waitTimeInSeconds": 5
							}
						},
						{
							"name": "SV-exit_fail",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "IF-Blob_exists",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "exit",
								"value": {
									"value": "Y",
									"type": "Expression"
								}
							}
						},
						{
							"name": "IF-FilesDeleted",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "IF-Blob_exists",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@greater(int(variables('file_count')), 0)",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "SV-exit_success",
										"type": "SetVariable",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"variableName": "exit",
											"value": {
												"value": "N",
												"type": "Expression"
											}
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "SP-ActivitySuccess_DL",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [],
										"policy": {
											"timeout": "0.00:10:00",
											"retry": 50,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[dbo].[generic_activity_audit_log]",
											"storedProcedureParameters": {
												"activity_name": {
													"value": {
														"value": "@pipeline().parameters.activity_name",
														"type": "Expression"
													},
													"type": "String"
												},
												"application_name": {
													"value": {
														"value": "@{pipeline().parameters.application_name}",
														"type": "Expression"
													},
													"type": "String"
												},
												"dataset_name": {
													"value": {
														"value": "@{pipeline().parameters.dataset_name}",
														"type": "Expression"
													},
													"type": "String"
												},
												"pipeline_run_id": {
													"value": {
														"value": "@{pipeline().parameters.pipeline_run_id}",
														"type": "Expression"
													},
													"type": "String"
												},
												"activity_status": {
													"value": {
														"value": "Successful",
														"type": "Expression"
													},
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "LS_SQL",
											"type": "LinkedServiceReference"
										}
									}
								]
							}
						},
						{
							"name": "GM_folder-existance",
							"type": "GetMetadata",
							"dependsOn": [
								{
									"activity": "Wait-Delete",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.00:10:00",
								"retry": 5,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "@{pipeline().parameters.container_name}",
											"type": "Expression"
										},
										"blob_name": {
											"value": "@{pipeline().parameters.blob_name}",
											"type": "Expression"
										}
									}
								},
								"fieldList": [
									"exists"
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							}
						},
						{
							"name": "IF-Blob_exists",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "GM_folder-existance",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@activity('GM_folder-existance').output.exists",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "SV-exit_fail_if_set",
										"type": "SetVariable",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"variableName": "exit",
											"value": {
												"value": "N",
												"type": "Expression"
											}
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "DL-Blob",
										"type": "Delete",
										"dependsOn": [],
										"policy": {
											"timeout": "0.00:10:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"dataset": {
												"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
												"type": "DatasetReference",
												"parameters": {
													"container_name": {
														"value": "@{pipeline().parameters.container_name}",
														"type": "Expression"
													},
													"blob_name": {
														"value": "@{pipeline().parameters.blob_name}",
														"type": "Expression"
													}
												}
											},
											"enableLogging": false,
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"wildcardFileName": {
													"value": "*",
													"type": "Expression"
												}
											}
										}
									},
									{
										"name": "Set_file_count",
										"type": "SetVariable",
										"dependsOn": [
											{
												"activity": "DL-Blob",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"userProperties": [],
										"typeProperties": {
											"variableName": "file_count",
											"value": {
												"value": "@string(activity('DL-Blob').output.filesDeleted)",
												"type": "Expression"
											}
										}
									}
								]
							}
						}
					],
					"timeout": "0.00:02:00"
				}
			},
			{
				"name": "IF-Error",
				"description": "If file is succssfully deleted or not.",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Until-Delete",
						"dependencyConditions": [
							"Failed",
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(variables('exit'), 'Y')",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Wait-EnforceDeleteSuccess",
							"type": "Wait",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"waitTimeInSeconds": 1
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "CP-ReraiseError_DL",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "SP-ActivityError_DL",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BinarySource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true
									}
								},
								"sink": {
									"type": "BinarySink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									}
								},
								"enableStaging": false,
								"validateDataConsistency": false
							},
							"inputs": [
								{
									"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "doesNotExist_Input",
											"type": "Expression"
										},
										"blob_name": {
											"value": "doesNotExist_Input",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "doesNotExist_Output",
											"type": "Expression"
										},
										"blob_name": {
											"value": "doesNotExist_Output",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "SP-ActivityError_DL",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "0.00:05:00",
								"retry": 50,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
								"storedProcedureParameters": {
									"activity_name": {
										"value": {
											"value": "@{pipeline().parameters.activity_name}",
											"type": "Expression"
										},
										"type": "String"
									},
									"application_name": {
										"value": {
											"value": "@{pipeline().parameters.application_name}",
											"type": "Expression"
										},
										"type": "String"
									},
									"dataset_name": {
										"value": {
											"value": "@{pipeline().parameters.dataset_name}",
											"type": "Expression"
										},
										"type": "String"
									},
									"error_code": {
										"value": {
											"value": "@{activity('DL-Blob').Error.errorCode}",
											"type": "Expression"
										},
										"type": "String"
									},
									"error_detail": {
										"value": {
											"value": "@{activity('DL-Blob').Error.message}",
											"type": "Expression"
										},
										"type": "String"
									},
									"pipeline_run_id": {
										"value": {
											"value": "@{pipeline().parameters.pipeline_run_id}",
											"type": "Expression"
										},
										"type": "String"
									},
									"activity_status": {
										"value": {
											"value": "Failed",
											"type": "Expression"
										},
										"type": "String"
									},
									"skip_pipeline_audit_update": {
										"value": {
											"value": "Y",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_SQL",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			}
		],
		"parameters": {
			"container_name": {
				"type": "string"
			},
			"blob_name": {
				"type": "string"
			},
			"activity_name": {
				"type": "string"
			},
			"application_name": {
				"type": "string"
			},
			"dataset_name": {
				"type": "string"
			},
			"pipeline_run_id": {
				"type": "string"
			}
		},
		"variables": {
			"exit": {
				"type": "String",
				"defaultValue": "C"
			},
			"file_count": {
				"type": "String",
				"defaultValue": "0"
			}
		},
		"folder": {
			"name": "Generic_Frameworks/Sub_Pipelines"
		},
		"annotations": []
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}