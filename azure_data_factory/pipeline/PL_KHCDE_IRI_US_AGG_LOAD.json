{
	"name": "PL_KHCDE_IRI_US_AGG_LOAD",
	"properties": {
		"description": "This pipeline is for DBT processing of Banner_All_Aggregates load. It will check for existence of the trigger files from each Platform, and then triggers DBT processing.",
		"activities": [
			{
				"name": "SP-ActivityFailed03",
				"description": "This activity logs failure of upstream activity in khc_audit_log_detail table and failure of pipeline in khc_audit_log table.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "dependency_check",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": "Until-TriggerFound",
							"type": "String"
						},
						"activity_status": {
							"value": {
								"value": "Failed",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].dataset_group",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_code": {
							"value": {
								"value": "Dependent Trigger not found.",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_detail": {
							"value": {
								"value": "Dependent Trigger not found.",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-ActivitySuccess02",
				"description": "This activity logs Success of upstream activity in khc_audit_log_detail table and completion of deppendent_check in khc_audit_log table.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "dependency_check",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": "EP_DBT_Processing",
							"type": "String"
						},
						"activity_status": {
							"value": {
								"value": "Successful",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].dataset_group",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-ActivityFailed01",
				"description": "This activity logs failure of upstream activity in khc_audit_log_detail table and failure of pipeline in khc_audit_log table.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "LU-Metadata",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": "LU-Metadata",
							"type": "String"
						},
						"activity_status": {
							"value": {
								"value": "Failed",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].dataset_group",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_code": {
							"value": {
								"value": "@{activity('LU-Metadata').Error.errorCode}",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_detail": {
							"value": {
								"value": "@{activity('LU-Metadata').Error.message}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-Pipeline_successful_AGGLoad",
				"description": "This activity logs Success of upstream activity in khc_audit_log_detail table and completion of pipeline in khc_audit_log table.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "SP-ActivitySuccess04",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": "U",
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].dataset_group",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_name": {
							"value": {
								"value": "@{pipeline().Pipeline}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": "Successful",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-ActivityFailed02",
				"description": "This activity logs failure of upstream activity in khc_audit_log_detail table and failure of pipeline in khc_audit_log table.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "IF_Metadata_exists",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": "IF_Metadata_exists",
							"type": "String"
						},
						"activity_status": {
							"value": {
								"value": "Failed",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].dataset_group",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_code": {
							"value": {
								"value": "Orchestration metadata retrived zero records",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_detail": {
							"value": {
								"value": "Orchestration metadata retrived zero records",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "LU-Metadata",
				"description": "This activity pulls the details related to blob_trigger_name from orchestration_metadata. ",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "set_to_mail_variable",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "SELECT *, SUBSTRING(dbt_trigger_name, 1, LEN(concat('/',dbt_trigger_name)) - CHARINDEX('/',REVERSE(concat('/',dbt_trigger_name))) - 1) blob_trigger_folder_path \nFROM khc_orchestration_metadata\nWHERE blob_trigger_name IN\n    (SELECT DISTINCT adf_trigger_name\n     FROM khc_orchestration_metadata\n     WHERE SUBSTRING(concat('/',dbt_trigger_name), LEN(concat('/',dbt_trigger_name)) - CHARINDEX('/',REVERSE(concat('/',dbt_trigger_name))) + 2, LEN(concat('/',dbt_trigger_name)))= '@{pipeline().parameters.blob_trigger_name}'\n       AND active_ind = 'y')",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_KHCDE_GENERIC_MSSQL_Metadata",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "SP-ActivitySuccess04",
				"description": "This activity logs Success of upstream activity in khc_audit_log_detail table and completion of pipeline in khc_audit_log table.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "execute_dbt_clear_triggers",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": "EP_DeleteTriggers",
							"type": "String"
						},
						"activity_status": {
							"value": {
								"value": "Successful",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].dataset_group",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "IF_Metadata_exists",
				"description": "",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "LU-Metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@greater(activity('LU-Metadata').output.count,0)",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Wait-Loop",
							"description": "Wait-Loop",
							"type": "Wait",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"waitTimeInSeconds": 5
							}
						},
						{
							"name": "CP-ReraiseError02",
							"description": "Raises Error",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Wait-Loop",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 5,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BinarySource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true
									},
									"formatSettings": {
										"type": "BinaryReadSettings"
									}
								},
								"sink": {
									"type": "BinarySink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "doesNotExist_Input",
											"type": "Expression"
										},
										"blob_name": {
											"value": "doesNotExist_Input",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "doesNotExist_Output",
											"type": "Expression"
										},
										"blob_name": {
											"value": "doesNotExist_Output",
											"type": "Expression"
										}
									}
								}
							]
						}
					],
					"ifTrueActivities": [
						{
							"name": "SP-ActivitySuccess01",
							"description": "This activity logs Success of upstream activity in khc_audit_log_detail table and completion of LU-Metadata in khc_audit_log table.",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 5,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[generic_activity_audit_log]",
								"storedProcedureParameters": {
									"activity_name": {
										"value": "LU-Metadata",
										"type": "String"
									},
									"activity_status": {
										"value": {
											"value": "Successful",
											"type": "Expression"
										},
										"type": "String"
									},
									"application_name": {
										"value": {
											"value": "@activity('LU-Metadata').output.value[0].application_name",
											"type": "Expression"
										},
										"type": "String"
									},
									"dataset_name": {
										"value": {
											"value": "@activity('LU-Metadata').output.value[0].dataset_group",
											"type": "Expression"
										},
										"type": "String"
									},
									"pipeline_run_id": {
										"value": {
											"value": "@{pipeline().RunId}",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_SQL",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "SP-ActivityFailed04",
				"description": "This activity logs failure of upstream activity in khc_audit_log_detail table and failure of pipeline in khc_audit_log table.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "execute_dbt_clear_triggers",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": "EP_SnowflakeIngestion",
							"type": "String"
						},
						"activity_status": {
							"value": {
								"value": "Failed",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].dataset_group",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_code": {
							"value": {
								"value": "@{activity('execute_dbt_clear_triggers').Error.errorCode}",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_detail": {
							"value": {
								"value": "@{activity('execute_dbt_clear_triggers').Error.message}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "get_trigger_files_count",
				"description": "Get the trigger file count",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "LU-Metadata_dependencies",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
						"type": "DatasetReference",
						"parameters": {
							"container_name": "@activity('LU-Metadata_dependencies').output.value[0].container_name",
							"blob_name": "@activity('LU-Metadata_dependencies').output.value[0].blob_trigger_folder_path"
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			},
			{
				"name": "dependency_check",
				"description": "Dependency check",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "get_trigger_files_count",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(length(activity('get_trigger_files_count').output.childitems),activity('LU-Metadata_dependencies').output.count)",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Set variable value in False",
							"description": "Trigger file count storing in a variable",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "triggerfiles_count",
								"value": {
									"value": "@string(length(activity('get_trigger_files_count').output.childitems))",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set Exit Indicator variable in False",
							"description": "Exit indicator value storing in a variable",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Set variable value in False",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "exit_ind",
								"value": {
									"value": "Y",
									"type": "Expression"
								}
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Set variable value in True",
							"description": "Trigger file count storing in a variable",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "triggerfiles_count",
								"value": {
									"value": "@string(length(activity('get_trigger_files_count').output.childitems))",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set Exit Indicator variable in True",
							"description": "Exit indicator value storing in a variable",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Set variable value in True",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "exit_ind",
								"value": "N"
							}
						}
					]
				}
			},
			{
				"name": "execute_dbt_clear_triggers",
				"description": "Based on exit_ind, either trigger the DBT processing or exit the pipeline",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "dependency_check",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(variables('exit_ind'),'N')",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Set variable1",
							"description": "set Status variable",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "status",
								"value": "Pipeline will exit because all triggers arent available yet"
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Execute DBT Processing",
							"description": "Execute DBT processing for banner_all_aggregates load",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "Execute_Trigger_Deletion",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "PL_KHCDE_GENERIC_DBTProcessing",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"ApplicationName": {
										"value": "@activity('LU-Metadata').output.value[0].application_name",
										"type": "Expression"
									},
									"DatasetGroup": {
										"value": "@activity('LU-Metadata').output.value[0].dataset_group",
										"type": "Expression"
									},
									"ParameterJson": {
										"value": "@activity('LU-Metadata').output.value[0].parameter_json",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "Execute_Trigger_Deletion",
							"description": "Delete trigger files",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "Set variable2",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "PL_KHCDE_IRI_US_DELETETRIGGERS",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"application_name": {
										"value": "@activity('LU-Metadata').output.value[0].application_name",
										"type": "Expression"
									},
									"dataset_name": {
										"value": "@activity('LU-Metadata').output.value[0].dataset_name",
										"type": "Expression"
									},
									"blob_trigger_folder_path": {
										"value": "@{pipeline().parameters.blob_trigger_folder_path}",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "Set variable2",
							"description": "set Status variable",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "status",
								"value": "Running Trigger deletion and DBT"
							}
						},
						{
							"name": "CP-CreateDBT-Trigger",
							"description": "Create DBT trigger",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Execute DBT Processing",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 5,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": {
										"value": "select current_timestamp",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "DS_KHCDE_GENERIC_MSSQL_Metadata",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "DS_KHCDE_GENERIC_BLOB_CSV_FolderFile",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "@{activity('LU-Metadata').output.value[0].container_name}",
											"type": "Expression"
										},
										"blob_name": {
											"value": "@if(contains(activity('LU-Metadata').output.value[0].dbt_trigger_name, '/'), substring(activity('LU-Metadata').output.value[0].dbt_trigger_name, 0, lastIndexOf(activity('LU-Metadata').output.value[0].dbt_trigger_name, '/')), 'sales/triggers')",
											"type": "Expression"
										},
										"file_name": {
											"value": "@if(not(empty(activity('LU-Metadata').output.value[0].dbt_trigger_name)),if(contains(activity('LU-Metadata').output.value[0].dbt_trigger_name, '/'), last(split(activity('LU-Metadata').output.value[0].dbt_trigger_name, '/')), activity('LU-Metadata').output.value[0].dbt_trigger_name),'dummy.txt')",
											"type": "Expression"
										},
										"field_delimiter": {
											"value": ",",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "WB-SendSuccessEmail_copy1",
							"description": "Sends email notification",
							"type": "WebActivity",
							"dependsOn": [
								{
									"activity": "CP-CreateDBT-Trigger",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 5,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": {
									"value": "@pipeline().globalParameters.la_khcde_generic_email_url",
									"type": "Expression"
								},
								"method": "POST",
								"body": {
									"value": "{ \n        \"to_email\": \"@{variables('emailTo')}\", \n        \"subject\": \"Success : @{activity('LU-Metadata').output.value[0].application_name} - @{activity('LU-Metadata').output.value[0].dataset_group}\", \n        \"body\": \"Dear All,<br><br>The cloud analytics data load process succeeded for the Application: @{activity('LU-Metadata').output.value[0].application_name}</b><br> Please find below the details: <br><br> Pipeline Name: @{pipeline().Pipeline} <br> Pipeline Run ID: @{pipeline().RunId}<br> Pipeline Trigger Name: @{pipeline().TriggerName}<br> Pipeline Trigger Type: @{pipeline().TriggerType}<br> Pipeline Start Time: @{pipeline().TriggerTime}<br><br>Parameters:<br>===========<br>Blob Trigger Name: @{pipeline().parameters.blob_trigger_name}<br>Blob Trigger Path: @{pipeline().parameters.blob_trigger_folder_path}<br><br>Regards,<br>Cloud Analytics Team\", \n        \"importance\": \"Low\"\n} ",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "WB-SendFailureEmail01",
				"description": "Sends email notification",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "LU-Metadata",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@pipeline().globalParameters.la_khcde_generic_email_url",
						"type": "Expression"
					},
					"method": "POST",
					"body": {
						"value": "{ \n            \"to_email\": \"@{variables('emailTo')}\", \n            \"subject\": \"Failed during LU-Metadata: @{activity('LU-Metadata').output.value[0].application_name} - @{split(last(split(activity('LU-Metadata').output.value[0].dataset_name, '/')),'.')[0]}\", \n            \"body\": \"Dear All,<br><br>The cloud analytics data load process failed for the Application: @{activity('LU-Metadata').output.value[0].application_name}<br> Please find below the details: <br><br> Pipeline Name: @{pipeline().Pipeline} <br> Pipeline Run ID: @{pipeline().RunId}<br> Pipeline Trigger Name: @{pipeline().TriggerName}<br> Pipeline Trigger Type: @{pipeline().TriggerType}<br> Pipeline Start Time: @{pipeline().TriggerTime}<br> Activity: LU-Metadata<br>Next Step: Please check the blob triggername and active_ind<br><br>Parameters:<br>===========<br>Application Name: @{activity('LU-Metadata').output.value[0].application_name}<br>Blob Trigger: @{activity('LU-Metadata').output.value[0].blob_trigger_name}<br><br>Error Code: @{activity('LU-Metadata').Error.errorCode} <br>Error Message: @{activity('LU-Metadata').Error.message} <br><br><br>Please take care.<br><br>Regards,<br>Cloud Analytics Team\", \n            \"importance\": \"High\"\n    }",
						"type": "Expression"
					}
				}
			},
			{
				"name": "LU-Metadata_dependencies",
				"description": "This activity pulls the details related to blob_trigger_name from orchestration_metadata. ",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "IF_Metadata_exists",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "SELECT DISTINCT application_name,dataset_name,container_name,\n                dbt_trigger_name , SUBSTRING(dbt_trigger_name, 1, LEN(concat('/',dbt_trigger_name)) - CHARINDEX('/',REVERSE(concat('/',dbt_trigger_name))) - 1) as blob_trigger_folder_path \nFROM [dbo].[khc_orchestration_metadata]\nWHERE active_ind = 'y'\n  AND LEN(concat('/',dbt_trigger_name)) - CHARINDEX('/',REVERSE(concat('/',dbt_trigger_name))) - 1 >= 0\n  AND concat(container_name,'/',SUBSTRING(dbt_trigger_name, 1, LEN(concat('/',dbt_trigger_name)) - CHARINDEX('/',REVERSE(concat('/',dbt_trigger_name))) - 1)) = '@{pipeline().parameters.blob_trigger_folder_path}'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_KHCDE_GENERIC_MSSQL_Metadata",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "WB-SendFailureEmail02",
				"description": "Sends email notification",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "IF_Metadata_exists",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@pipeline().globalParameters.la_khcde_generic_email_url",
						"type": "Expression"
					},
					"method": "POST",
					"body": {
						"value": "{ \n            \"to_email\": \"@{variables('emailTo')}\", \n            \"subject\": \"Failed during IF_Metadata_exists: @{activity('LU-Metadata').output.value[0].application_name} - @{split(last(split(activity('LU-Metadata').output.value[0].dataset_name, '/')),'.')[0]}\", \n            \"body\": \"Dear All,<br><br>The cloud analytics data load process failed for the Application: @{activity('LU-Metadata').output.value[0].application_name}<br> Please find below the details: <br><br> Pipeline Name: @{pipeline().Pipeline} <br> Pipeline Run ID: @{pipeline().RunId}<br> Pipeline Trigger Name: @{pipeline().TriggerName}<br> Pipeline Trigger Type: @{pipeline().TriggerType}<br> Pipeline Start Time: @{pipeline().TriggerTime}<br> Activity: LU-Metadata<br>Next Step: Please check the blob triggername and active_ind<br><br>Parameters:<br>===========<br>Application Name: @{activity('LU-Metadata').output.value[0].application_name}<br>Blob Trigger: @{activity('LU-Metadata').output.value[0].blob_trigger_name}<br><br>Error Code: @{activity('IF_Metadata_exists').Error.errorCode} <br>Error Message: @{activity('IF_Metadata_exists').Error.message} <br><br><br>Please take care.<br><br>Regards,<br>Cloud Analytics Team\", \n            \"importance\": \"High\"\n    }",
						"type": "Expression"
					}
				}
			},
			{
				"name": "WB-SendFailureEmail03",
				"description": "Sends email notification",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "dependency_check",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@pipeline().globalParameters.la_khcde_generic_email_url",
						"type": "Expression"
					},
					"method": "POST",
					"body": {
						"value": "{ \n            \"to_email\": \"@{variables('emailTo')}\", \n            \"subject\": \"Failed during dependency_check: @{activity('LU-Metadata').output.value[0].application_name} - @{split(last(split(activity('LU-Metadata').output.value[0].dataset_name, '/')),'.')[0]}\", \n            \"body\": \"Dear All,<br><br>The cloud analytics data load process failed for the Application: @{activity('LU-Metadata').output.value[0].application_name}<br> Please find below the details: <br><br> Pipeline Name: @{pipeline().Pipeline} <br> Pipeline Run ID: @{pipeline().RunId}<br> Pipeline Trigger Name: @{pipeline().TriggerName}<br> Pipeline Trigger Type: @{pipeline().TriggerType}<br> Pipeline Start Time: @{pipeline().TriggerTime}<br> Activity: LU-Metadata<br>Next Step: Please check the blob triggername and active_ind<br><br>Parameters:<br>===========<br>Application Name: @{activity('LU-Metadata').output.value[0].application_name}<br>Blob Trigger: @{activity('LU-Metadata').output.value[0].blob_trigger_name}<br><br>Error Code: @{activity('dependency_check').Error.errorCode} <br>Error Message: @{activity('dependency_check').Error.message} <br><br><br>Please take care.<br><br>Regards,<br>Cloud Analytics Team\", \n            \"importance\": \"High\"\n    }",
						"type": "Expression"
					}
				}
			},
			{
				"name": "WB-SendFailureEmail04",
				"description": "Sends email notification",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "execute_dbt_clear_triggers",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@pipeline().globalParameters.la_khcde_generic_email_url",
						"type": "Expression"
					},
					"method": "POST",
					"body": {
						"value": "{ \n            \"to_email\": \"@{variables('emailTo')}\", \n            \"subject\": \"Failed during execute_dbt_clear_triggers: @{activity('LU-Metadata').output.value[0].application_name} - @{split(last(split(activity('LU-Metadata').output.value[0].dataset_name, '/')),'.')[0]}\", \n            \"body\": \"Dear All,<br><br>The cloud analytics data load process failed for the Application: @{activity('LU-Metadata').output.value[0].application_name}<br> Please find below the details: <br><br> Pipeline Name: @{pipeline().Pipeline} <br> Pipeline Run ID: @{pipeline().RunId}<br> Pipeline Trigger Name: @{pipeline().TriggerName}<br> Pipeline Trigger Type: @{pipeline().TriggerType}<br> Pipeline Start Time: @{pipeline().TriggerTime}<br> Activity: LU-Metadata<br>Next Step: Please check the blob triggername and active_ind<br><br>Parameters:<br>===========<br>Application Name: @{activity('LU-Metadata').output.value[0].application_name}<br>Blob Trigger: @{activity('LU-Metadata').output.value[0].blob_trigger_name}<br><br>Error Code: @{activity('execute_dbt_clear_triggers').Error.errorCode} <br>Error Message: DBT and Deletion of the triggers failed <br><br><br>Please take care.<br><br>Regards,<br>Cloud Analytics Team\", \n            \"importance\": \"High\"\n    }",
						"type": "Expression"
					}
				}
			},
			{
				"name": "SP-PipelineStart",
				"description": "This Activity logs starting of pipeline in khc_audit_log table.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": {
								"value": "I",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@coalesce(last(split(pipeline().parameters.blob_trigger_folder_path,'/')),'iri_us')",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@pipeline().parameters.blob_trigger_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_name": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": {
								"value": "Triggered",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "set_to_mail_variable",
				"description": "Set the mail addresses to get pipeline notification",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "SP-PipelineStart",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "emailTo",
					"value": {
						"value": "@if(equals(toLower(pipeline().globalParameters.AZURE_ENV),'prod'),'DL_KHC_US_SALES_OPERATIONS@kraftheinz.com,ghanashyam.alakke@kraftheinz.com,shweta.pal@kraftheinz.com','dd895406.Heinz365.onmicrosoft.com@amer.teams.ms')",
						"type": "Expression"
					}
				}
			}
		],
		"concurrency": 1,
		"parameters": {
			"blob_trigger_name": {
				"type": "string"
			},
			"blob_trigger_folder_path": {
				"type": "string"
			}
		},
		"variables": {
			"exit_ind": {
				"type": "String",
				"defaultValue": "N"
			},
			"triggerfiles_count": {
				"type": "String",
				"defaultValue": "0"
			},
			"emailTo": {
				"type": "String",
				"defaultValue": "dd895406.Heinz365.onmicrosoft.com@amer.teams.ms"
			},
			"status": {
				"type": "String"
			}
		},
		"folder": {
			"name": "IRI_US"
		},
		"annotations": []
	}
}