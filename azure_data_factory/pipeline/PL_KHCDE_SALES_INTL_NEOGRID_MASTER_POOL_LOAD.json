{
	"name": "PL_KHCDE_SALES_INTL_NEOGRID_MASTER_POOL_LOAD",
	"properties": {
		"description": "Pipeline to process neogrid files conditionally.",
		"activities": [
			{
				"name": "LU_Metadata",
				"description": "Fetches LU-Metadata",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "SP-PipelineStart",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "select  *\nfrom khc_orchestration_metadata \nwhere blob_trigger_name='@{concat(substring(pipeline().parameters.BlobTriggerPathName,add(indexof(pipeline().parameters.BlobTriggerPathName,'/'),1),sub(length(pipeline().parameters.BlobTriggerPathName),add(indexof(pipeline().parameters.BlobTriggerPathName,'/'),1))),'/',pipeline().parameters.BlobTriggerName)}' AND active_ind = 'y'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_KHCDE_GENERIC_MSSQL_Metadata",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "SP-PipelineStart",
				"description": "This Activity logs starting of pipeline in khc_audit_logÂ table.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": {
								"value": "I",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@coalesce(first(split(pipeline().parameters.BlobTriggerPathName,'/')),'global_sales')",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@{pipeline().parameters.BlobTriggerName}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_name": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": {
								"value": "Until Trigger Started",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-PipelineSuccess01",
				"description": "This Activity logs completion of pipeline in khc_audit_log table.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "GM-Details",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": {
								"value": "U",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@activity('LU_Metadata').output.value[0].application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@{pipeline().parameters.BlobTriggerName}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_name": {
							"value": {
								"value": "@{pipeline().Pipeline}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": {
								"value": "Successful",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-ActivityAndPipelineFailed01",
				"description": "This activity logs failure of LU-Metadata activity in khc_audit_log_detail table and failure of pipeline in  khc_audit_log table.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "GM-Details",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": {
								"value": "AF-UntillTriggerFound",
								"type": "Expression"
							},
							"type": "String"
						},
						"activity_status": {
							"value": {
								"value": "Failed",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@activity('LU_Metadata').output.value[0].application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@{pipeline().parameters.BlobTriggerName}",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_code": {
							"value": {
								"value": "N.A.",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_detail": {
							"value": {
								"value": "N.A.",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "FE-File_Delete",
				"description": "Delete all the files present in stage folder upon successful file processing",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "EP-SalesPoolMaster",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('GM-Details').output.childitems",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "SP-ActivitySuccess02",
							"description": "Logs the event",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "DL-StageFile",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 5,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[generic_activity_audit_log]",
								"storedProcedureParameters": {
									"activity_name": {
										"value": {
											"value": "DL-StageFile",
											"type": "Expression"
										},
										"type": "String"
									},
									"application_name": {
										"value": {
											"value": "@activity('LU_Metadata').output.value[0].application_name",
											"type": "Expression"
										},
										"type": "String"
									},
									"dataset_name": {
										"value": {
											"value": "@activity('LU_Metadata').output.value[0].dataset_name",
											"type": "Expression"
										},
										"type": "String"
									},
									"activity_status": {
										"value": {
											"value": "Successful",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_SQL",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "SP-ActivityError02",
							"description": "Logs the event",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "DL-StageFile",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 5,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
								"storedProcedureParameters": {
									"activity_name": {
										"value": {
											"value": "DL-StageFile",
											"type": "Expression"
										},
										"type": "String"
									},
									"application_name": {
										"value": {
											"value": "@activity('LU_Metadata').output.value[0].application_name",
											"type": "Expression"
										},
										"type": "String"
									},
									"dataset_name": {
										"value": {
											"value": "@activity('LU_Metadata').output.value[0].dataset_name",
											"type": "Expression"
										},
										"type": "String"
									},
									"error_code": {
										"value": {
											"value": "@{activity('DL-StageFile').Error.errorCode}",
											"type": "Expression"
										},
										"type": "String"
									},
									"error_detail": {
										"value": {
											"value": "@{activity('DL-StageFile').Error.message}",
											"type": "Expression"
										},
										"type": "String"
									},
									"activity_status": {
										"value": {
											"value": "Failed",
											"type": "Expression"
										},
										"type": "String"
									},
									"skip_pipeline_audit_update": {
										"value": {
											"value": "Y",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_SQL",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "CP-ReraiseError02",
							"description": "Raises Error",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "SP-ActivityError02",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 5,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BinarySource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true
									},
									"formatSettings": {
										"type": "BinaryReadSettings"
									}
								},
								"sink": {
									"type": "BinarySink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "doesNotExist_Input",
											"type": "Expression"
										},
										"blob_name": {
											"value": "doesNotExist_Input",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "doesNotExist_Output",
											"type": "Expression"
										},
										"blob_name": {
											"value": "doesNotExist_Output",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "DL-StageFile",
							"type": "Delete",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_FolderFile",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "@activity('LU_Metadata').output.value[0].container_name",
											"type": "Expression"
										},
										"blob_name": {
											"value": "@activity('LU_Metadata').output.value[0].stage_blob_name",
											"type": "Expression"
										},
										"file_name": {
											"value": "@{item().name}",
											"type": "Expression"
										}
									}
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								}
							}
						}
					]
				}
			},
			{
				"name": "GM-Details",
				"description": "Get Details of File",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "set_to_mail_variable",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
						"type": "DatasetReference",
						"parameters": {
							"container_name": {
								"value": "@activity('LU_Metadata').output.value[0].container_name",
								"type": "Expression"
							},
							"blob_name": {
								"value": "@activity('LU_Metadata').output.value[0].stage_blob_name",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			},
			{
				"name": "EP-SalesPoolMaster",
				"description": "Execute sales pool master pipeline to load sfk ingestion and DBT processing",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "GM-Details",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "PL_KHCDE_SALES_MASTER_POOL_LOAD",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"BlobTriggerPathName": {
							"value": "@{pipeline().parameters.BlobTriggerPathName}",
							"type": "Expression"
						},
						"BlobTriggerName": {
							"value": "@{pipeline().parameters.BlobTriggerName}",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "SP_Pipeline_Failure",
				"description": "This activity logs failure of Pipeline",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "FE-File_Delete",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": "DBT_Trigger_Creation",
							"type": "String"
						},
						"activity_status": {
							"value": {
								"value": "Failed",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@activity('LU_Metadata').output.value[0].application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU_Metadata').output.value[0].dataset_group",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_code": {
							"value": {
								"value": "Error in deleting trigger file",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_detail": {
							"value": {
								"value": "Error in deleting trigger file",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-Pipeline_completion_success",
				"description": "This Activity logs completion of pipeline in khc_audit_log table.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "FE-File_Delete",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": "U",
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@activity('LU_Metadata').output.value[0].application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU_Metadata').output.value[0].dataset_group",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_name": {
							"value": {
								"value": "@{pipeline().Pipeline}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": "Successful",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "WB-SendSuccessEmail",
				"description": "Sends email notification",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "SP-Pipeline_completion_success",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@pipeline().globalParameters.la_khcde_generic_email_url",
						"type": "Expression"
					},
					"method": "POST",
					"body": {
						"value": "{ \nâ¯â¯â¯â¯â¯â¯â¯â¯\"to_email\":â¯\"@{variables('emailTo')}\", \nâ¯â¯â¯â¯â¯â¯â¯â¯\"subject\":â¯\"Success : @{activity('LU_Metadata').output.value[0].application_name} - @{activity('LU_Metadata').output.value[0].dataset_group}\", \nâ¯â¯â¯â¯â¯â¯â¯â¯\"body\": \"Dear All,<br><br>The cloud analytics data load process succeeded for the Application: @{activity('LU_Metadata').output.value[0].application_name}</b><br> Please find below the details: <br><br> Pipeline Name: @{pipeline().Pipeline} <br> Pipeline Run ID: @{pipeline().RunId}<br> Pipeline Trigger Name: @{pipeline().TriggerName}<br> Pipeline Trigger Type: @{pipeline().TriggerType}<br> Pipeline Start Time: @{pipeline().TriggerTime}<br><br>Parameters:<br>===========<br>Application Name: @{activity('LU_Metadata').output.value[0].application_name}<br>BlobTriggerName: @{pipeline().parameters.BlobTriggerName}<br>Regards,<br>Cloud Analytics Team\", \nâ¯â¯â¯â¯â¯â¯â¯â¯\"importance\": \"Low\"\n} ",
						"type": "Expression"
					}
				}
			},
			{
				"name": "set_to_mail_variable",
				"description": "Set the mail addresses to get pipeline notification",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "LU_Metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [
					{
						"name": "emailTo",
						"value": "@if(equals(pipeline().globalParameters.AZURE_ENV,'DEV'),if(contains(trim(string(activity('LU_Metadata').output.value[0].adf_trigger_name)),'@'),trim(string(activity('LU_Metadata').output.value[0].adf_trigger_name)),'dd895406.Heinz365.onmicrosoft.com@amer.teams.ms'),'dd895406.Heinz365.onmicrosoft.com@amer.teams.ms')"
					},
					{
						"name": "exit_ind",
						"value": "@if(equals(pipeline().globalParameters.AZURE_ENV,'DEV'),if(contains(trim(string(activity('LU_Metadata').output.value[0].adf_trigger_name)),'@'),trim(string(activity('LU_Metadata').output.value[0].adf_trigger_name)),'dd895406.Heinz365.onmicrosoft.com@amer.teams.ms'),'dd895406.Heinz365.onmicrosoft.com@amer.teams.ms')"
					}
				],
				"typeProperties": {
					"variableName": "emailTo",
					"value": {
						"value": "@if(equals(pipeline().globalParameters.AZURE_ENV,'DEV'),if(contains(trim(string(activity('LU_Metadata').output.value[0].adf_trigger_name)),'@'),trim(string(activity('LU_Metadata').output.value[0].adf_trigger_name)),'shashank.a@kraftheinz.com'),'shashank.a@kraftheinz.com')",
						"type": "Expression"
					}
				}
			}
		],
		"concurrency": 1,
		"parameters": {
			"BlobTriggerPathName": {
				"type": "string",
				"defaultValue": "%"
			},
			"BlobTriggerName": {
				"type": "string",
				"defaultValue": "%"
			}
		},
		"variables": {
			"emailTo": {
				"type": "String",
				"defaultValue": "dd895406.Heinz365.onmicrosoft.com@amer.teams.ms"
			},
			"exit_ind": {
				"type": "String",
				"defaultValue": "N"
			}
		},
		"folder": {
			"name": "Sales"
		},
		"annotations": []
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}