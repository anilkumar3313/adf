{
	"name": "PL_KHCDE_US_SALES_ON_DEMAND_MASTER",
	"properties": {
		"activities": [
			{
				"name": "LU-Metadata",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "select\nparent_id\n,dependent_id\n,application_name\n,dataset_name\n,server_name\n,replace(server_path, '<env>', '@pipeline().globalParameters.AZURE_ENV') as server_path\n,filename\n,data_filename\n,pattern_type\n,rename_prefix\n,file_zip_ind\n,file_checksum_ind\n,checksum_filename\n,field_delimiter\n,container_name\n,stage_blob_name\n,archival_blob_name\n,blob_trigger_name\n,dbt_trigger_name\n,adf_trigger_name\n,dataset_group\n,snowflake_role\n,warehouse_size\n,snowflake_database\n,snowflake_schema\n,stage_table_name\n,snowflake_stage_name\n,snowflake_file_format\n,dbt_exec_mode\n,dbt_name\n,parameter_json\n,data_level\n,audit_add_user_name\n,audit_add_timestamp\n,audit_update_username\n,audit_update_timestamp\n,active_ind\nfrom khc_orchestration_metadata\nwhere len(trim(server_name)) > 0\n  and len(trim(application_name)) > 0\n  and len(trim(dataset_name)) > 0\n  and len(trim(server_path)) > 0\n  and len(trim(filename)) > 0\n  and len(trim(data_filename)) > 0\n  and file_zip_ind in ('y', 'n')\n  and file_checksum_ind in ('y', 'n')\n  and len(trim(container_name)) > 0\n  and len(trim(archival_blob_name)) > 0\n  and len(trim(stage_blob_name)) > 0\n  and len(trim(blob_trigger_name)) > 0\n  and application_name like '@{pipeline().parameters.application_name}'\n  and data_level = '@{pipeline().parameters.datalevel_ind}'\n  and server_name in ('LS_FS_BLYFORD','LS_AZ_KHC_DATASHARE_STRGV2') and\nSUBSTRING(concat('/',blob_trigger_name), LEN(concat('/',blob_trigger_name)) - CHARINDEX('/',REVERSE(concat('/',blob_trigger_name))) + 2, LEN(concat('/',blob_trigger_name)))= '@{pipeline().parameters.BlobTriggerName}' \nand active_ind = 'y'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_KHCDE_GENERIC_MSSQL_Metadata",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "FE-Metadata",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "IS_Metadata_Valid",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('LU-Metadata').output.value",
						"type": "Expression"
					},
					"isSequential": false,
					"batchCount": 50,
					"activities": [
						{
							"name": "EP-DEMAND_SUB_MASTER",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "PL_KHCDE_US_SALES_ON_DEMAND_SUBMASTER",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"parent_id": {
										"value": "@{item().parent_id}",
										"type": "Expression"
									},
									"dependent_id": {
										"value": "@{item().dependent_id}",
										"type": "Expression"
									},
									"application_name": {
										"value": "@{item().application_name}",
										"type": "Expression"
									},
									"dataset_name": {
										"value": "@{item().dataset_name}",
										"type": "Expression"
									},
									"server_name": {
										"value": "@{item().server_name}",
										"type": "Expression"
									},
									"server_path": {
										"value": "@{item().server_path}",
										"type": "Expression"
									},
									"filename": {
										"value": "@{item().filename}",
										"type": "Expression"
									},
									"data_filename": {
										"value": "@{item().data_filename}",
										"type": "Expression"
									},
									"pattern_type": {
										"value": "@{item().pattern_type}",
										"type": "Expression"
									},
									"rename_prefix": {
										"value": "@{item().rename_prefix}",
										"type": "Expression"
									},
									"file_zip_ind": {
										"value": "@{item().file_zip_ind}",
										"type": "Expression"
									},
									"file_checksum_ind": {
										"value": "@{item().file_checksum_ind}",
										"type": "Expression"
									},
									"checksum_filename": {
										"value": "@{item().checksum_filename}",
										"type": "Expression"
									},
									"field_delimiter": {
										"value": "@{item().field_delimiter}",
										"type": "Expression"
									},
									"container_name": {
										"value": "@{item().container_name}",
										"type": "Expression"
									},
									"stage_blob_name": {
										"value": "@{item().stage_blob_name}",
										"type": "Expression"
									},
									"archival_blob_name": {
										"value": "@{item().archival_blob_name}",
										"type": "Expression"
									},
									"blob_trigger_name": {
										"value": "@{item().blob_trigger_name}",
										"type": "Expression"
									},
									"dbt_trigger_name": {
										"value": "@{item().dbt_trigger_name}",
										"type": "Expression"
									},
									"adf_trigger_name": {
										"value": "@{item().adf_trigger_name}",
										"type": "Expression"
									},
									"dataset_group": {
										"value": "@{item().dataset_group}",
										"type": "Expression"
									},
									"snowflake_role": {
										"value": "@{item().snowflake_role}",
										"type": "Expression"
									},
									"warehouse_size": {
										"value": "@{item().warehouse_size}",
										"type": "Expression"
									},
									"snowflake_database": {
										"value": "@{item().snowflake_database}",
										"type": "Expression"
									},
									"snowflake_schema": {
										"value": "@{item().snowflake_schema}",
										"type": "Expression"
									},
									"stage_table_name": {
										"value": "@{item().stage_table_name}",
										"type": "Expression"
									},
									"snowflake_stage_name": {
										"value": "@{item().snowflake_stage_name}",
										"type": "Expression"
									},
									"snowflake_file_format": {
										"value": "@{item().snowflake_file_format}",
										"type": "Expression"
									},
									"dbt_exec_mode": {
										"value": "@{item().dbt_exec_mode}",
										"type": "Expression"
									},
									"dbt_name": {
										"value": "@{item().dbt_name}",
										"type": "Expression"
									},
									"parameter_json": {
										"value": "@{item().parameter_json}",
										"type": "Expression"
									},
									"data_level": {
										"value": "@{item().data_level}",
										"type": "Expression"
									},
									"audit_add_user_name": {
										"value": "@{item().audit_add_user_name}",
										"type": "Expression"
									},
									"audit_add_timestamp": {
										"value": "@{item().audit_add_timestamp}",
										"type": "Expression"
									},
									"audit_update_username": {
										"value": "@{item().audit_update_username}",
										"type": "Expression"
									},
									"audit_update_timestamp": {
										"value": "@{item().audit_update_timestamp}",
										"type": "Expression"
									},
									"active_ind": {
										"value": "@{item().active_ind}",
										"type": "Expression"
									},
									"pipeline_name": {
										"value": "@{pipeline().Pipeline}",
										"type": "Expression"
									},
									"pipeline_run_id": {
										"value": "@{pipeline().RunId}",
										"type": "Expression"
									},
									"date": {
										"value": "@{string(formatDateTime(addhours(utcnow(), 5), 'yyyyMMdd'))}",
										"type": "Expression"
									},
									"adf_env": {
										"value": "@pipeline().globalParameters.AZURE_ENV",
										"type": "Expression"
									},
									"delete_ind": {
										"value": "@pipeline().parameters.delete_ind",
										"type": "Expression"
									},
									"trigger_type": {
										"value": "@{if(equals(pipeline().parameters.trigger_type,'blob_trigger_name'),item().blob_trigger_name,item().dbt_trigger_name)}",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "SP-PipelineEnd_Failed",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "EP-DEMAND_SUB_MASTER",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
								"storedProcedureParameters": {
									"action_ind": {
										"value": {
											"value": "U",
											"type": "Expression"
										},
										"type": "String"
									},
									"application_name": {
										"value": {
											"value": "@{item().application_name}",
											"type": "Expression"
										},
										"type": "String"
									},
									"dataset_name": {
										"value": {
											"value": "@{item().dataset_name}",
											"type": "Expression"
										},
										"type": "String"
									},
									"pipeline_name": {
										"value": {
											"value": "@{pipeline().Pipeline}",
											"type": "Expression"
										},
										"type": "String"
									},
									"pipeline_run_id": {
										"value": {
											"value": "@{pipeline().RunId}",
											"type": "Expression"
										},
										"type": "String"
									},
									"pipeline_status": {
										"value": {
											"value": "Failed",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_SQL",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "CP-ReraiseError_01",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "SP-PipelineEnd_Failed",
									"dependencyConditions": [
										"Completed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BinarySource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true
									},
									"formatSettings": {
										"type": "BinaryReadSettings"
									}
								},
								"sink": {
									"type": "BinarySink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									}
								},
								"enableStaging": false,
								"skipErrorFile": {
									"fileMissing": false,
									"fileForbidden": false
								},
								"validateDataConsistency": false
							},
							"inputs": [
								{
									"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "doesNotExist_Input",
											"type": "Expression"
										},
										"blob_name": {
											"value": "doesNotExist_Input",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "doesNotExist_Output",
											"type": "Expression"
										},
										"blob_name": {
											"value": "doesNotExist_Output",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "IS_Metadata_Valid",
				"description": "Checks whether the  Input combination given to Pipeline is valid or not.",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "SP-PipelineStart",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@and(greater(activity('LU-Metadata').output.count,0),or(equals(pipeline().parameters.trigger_type,'blob_trigger_name'),equals(pipeline().parameters.trigger_type,'dbt_trigger_name')))\n",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "CP-ReraiseError02",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BinarySource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true
									},
									"formatSettings": {
										"type": "BinaryReadSettings"
									}
								},
								"sink": {
									"type": "BinarySink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "doesNotExist_Input",
											"type": "Expression"
										},
										"blob_name": {
											"value": "doesNotExist_Input",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "doesNotExist_Output",
											"type": "Expression"
										},
										"blob_name": {
											"value": "doesNotExist_Output",
											"type": "Expression"
										}
									}
								}
							]
						}
					],
					"ifTrueActivities": [
						{
							"name": "SP-ActivitySuccess01",
							"description": "This activity logs success of IS_Metadata_Valid activity in khc_audit_log_detail table.",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[generic_activity_audit_log]",
								"storedProcedureParameters": {
									"activity_name": {
										"value": "LU-Metadata",
										"type": "String"
									},
									"activity_status": {
										"value": {
											"value": "Successful",
											"type": "Expression"
										},
										"type": "String"
									},
									"application_name": {
										"value": {
											"value": "@activity('LU-Metadata').output.value[0].application_name",
											"type": "Expression"
										},
										"type": "String"
									},
									"dataset_name": {
										"value": {
											"value": "@activity('LU-Metadata').output.value[0].dataset_group",
											"type": "Expression"
										},
										"type": "String"
									},
									"pipeline_run_id": {
										"value": {
											"value": "@{pipeline().RunId}",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_SQL",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "SP-ActivityFailed02",
				"description": "This activity logs failure of IS_Metadata_Valid activity in khc_audit_log_detail table and failure of pipeline in  khc_audit_log table.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "IS_Metadata_Valid",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": "IS_Metadata_Valid",
							"type": "String"
						},
						"activity_status": {
							"value": {
								"value": "Failed",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].dataset_group",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_code": {
							"value": {
								"value": "Orchestration metadata retrived zero records",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_detail": {
							"value": {
								"value": "Orchestration metadata retrived zero records",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-PipelineStart",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "LU-Metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": {
								"value": "I",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@{pipeline().parameters.application_name}",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].dataset_group",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_name": {
							"value": {
								"value": "@{pipeline().Pipeline}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": {
								"value": "Processing",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-ActivityFailed01",
				"description": "This activity logs failure of LU-Metadata activity in khc_audit_log_detail table and failure of pipeline in  khc_audit_log table.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "LU-Metadata",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": "LU-Metadata",
							"type": "String"
						},
						"activity_status": {
							"value": {
								"value": "Failed",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].dataset_group",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_code": {
							"value": {
								"value": "@{activity('LU-Metadata').Error.errorCode}",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_detail": {
							"value": {
								"value": "@{activity('LU-Metadata').Error.message}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "WB-SendFailureEmail01",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "SP-ActivityFailed01",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@pipeline().globalParameters.la_khcde_generic_email_url",
						"type": "Expression"
					},
					"method": "POST",
					"body": {
						"value": "{ \n        \"to_email\": \"@{variables('emailTo')}\", \n        \"subject\": \"Failed during metadata fetch: @{pipeline().parameters.application_name} - @{split(pipeline().parameters.BlobTriggerName,'.')[0]}\", \n        \"body\": \"Dear All,<br><br>File copying process failed for the Application: @{pipeline().parameters.application_name}<br> Please find below the details: <br><br> Pipeline Name: @{pipeline().Pipeline} <br> Pipeline Run ID: @{pipeline().RunId}<br> Pipeline Trigger Name: @{pipeline().TriggerName}<br> Pipeline Trigger Type: @{pipeline().TriggerType}<br> Pipeline Start Time: @{pipeline().TriggerTime}<br> Activity: LU-Metadata<br>Next Step: Please check the blob triggername and active_ind<br><br>Parameters:<br>===========<br>Application Name: @{pipeline().parameters.application_name}<br>Blob Trigger: @{pipeline().parameters.BlobTriggerName}<br> <br><br><br>Please take care.<br><br>Regards,<br>Cloud Analytics Team\", \n        \"importance\": \"High\"\n}",
						"type": "Expression"
					}
				}
			},
			{
				"name": "WB-SendFailureEmail02",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "IS_Metadata_Valid",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@pipeline().globalParameters.la_khcde_generic_email_url",
						"type": "Expression"
					},
					"method": "POST",
					"body": {
						"value": "{ \n        \"to_email\": \"@{variables('emailTo')}\", \n        \"subject\": \"Failed during metadata fetch: @{pipeline().parameters.application_name} - @{split(pipeline().parameters.BlobTriggerName,'.')[0]}\", \n        \"body\": \"Dear All,<br><br>File copying process failed for the Application: @{pipeline().parameters.application_name}<br> Please find below the details: <br><br> Pipeline Name: @{pipeline().Pipeline} <br> Pipeline Run ID: @{pipeline().RunId}<br> Pipeline Trigger Name: @{pipeline().TriggerName}<br> Pipeline Trigger Type: @{pipeline().TriggerType}<br> Pipeline Start Time: @{pipeline().TriggerTime}<br> Activity: LU-Metadata<br>Next Step: Please check the blob triggername and active_ind<br><br>Parameters:<br>===========<br>Application Name: @{pipeline().parameters.application_name}<br>Blob Trigger: @{pipeline().parameters.BlobTriggerName}<br> <br><br><br>Please take care.<br><br>Regards,<br>Cloud Analytics Team\", \n        \"importance\": \"High\"\n}",
						"type": "Expression"
					}
				}
			},
			{
				"name": "WB-SendSuccessEmail",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "SP-Pipelinesuccesful",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@pipeline().globalParameters.la_khcde_generic_email_url",
						"type": "Expression"
					},
					"method": "POST",
					"body": {
						"value": "{ \n        \"to_email\": \"@{variables('emailTo')}\", \n        \"subject\": \"File Copy Success : @{pipeline().parameters.application_name} - @{activity('LU-Metadata').output.value[0].dataset_group}\", \n        \"body\": \"Dear All,<br><br>File copying process succeeded for the Application: @{pipeline().parameters.application_name}</b><br> Please find below the details: <br><br> Pipeline Name: @{pipeline().Pipeline} <br> Pipeline Run ID: @{pipeline().RunId}<br> Pipeline Trigger Name: @{pipeline().TriggerName}<br> Pipeline Trigger Type: @{pipeline().TriggerType}<br> Pipeline Start Time: @{pipeline().TriggerTime}<br><br>Parameters:<br>===========<br>Application Name: @{pipeline().parameters.application_name}<br>BlobTriggerName: @{pipeline().parameters.BlobTriggerName}<br><br>Regards,<br>Cloud Analytics Team\", \n        \"importance\": \"Low\"\n} ",
						"type": "Expression"
					}
				}
			},
			{
				"name": "WB-SendFailureEmail03",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "FE-Metadata",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@pipeline().globalParameters.la_khcde_generic_email_url",
						"type": "Expression"
					},
					"method": "POST",
					"body": {
						"value": "{ \n        \"to_email\": \"@{variables('emailTo')}\", \n        \"subject\": \"Failed during execution of Inner Activity: @{pipeline().parameters.application_name} - @{split(pipeline().parameters.BlobTriggerName,'.')[0]}\", \n        \"body\": \"Dear All,<br><br>File copying process failed for the Application: @{pipeline().parameters.application_name}<br> Please find below the details: <br><br> Pipeline Name: @{pipeline().Pipeline} <br> Pipeline Run ID: @{pipeline().RunId}<br> Pipeline Trigger Name: @{pipeline().TriggerName}<br> Pipeline Trigger Type: @{pipeline().TriggerType}<br> Pipeline Start Time: @{pipeline().TriggerTime}<br> Activity: LU-Metadata<br>Next Step: Please check the blob triggername and active_ind<br><br>Parameters:<br>===========<br>Application Name: @{pipeline().parameters.application_name}<br>Blob Trigger: @{pipeline().parameters.BlobTriggerName}<br> <br><br><br>Please take care.<br><br>Regards,<br>Cloud Analytics Team\", \n        \"importance\": \"High\"\n}",
						"type": "Expression"
					}
				}
			},
			{
				"name": "SP-Pipelinesuccesful",
				"description": "This Activity logs completion of pipeline in khc_audit_log table.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "FE-Metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": "U",
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].dataset_group",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_name": {
							"value": {
								"value": "@{pipeline().Pipeline}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": "Successful",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			}
		],
		"concurrency": 1,
		"parameters": {
			"application_name": {
				"type": "string",
				"defaultValue": "us_retailer_data"
			},
			"datalevel_ind": {
				"type": "string",
				"defaultValue": "101"
			},
			"delete_ind": {
				"type": "string",
				"defaultValue": "y"
			},
			"trigger_type": {
				"type": "string",
				"defaultValue": "blob_trigger_name"
			},
			"BlobTriggerName": {
				"type": "string",
				"defaultValue": "compass_model_output_trigger.txt"
			}
		},
		"variables": {
			"date": {
				"type": "String",
				"defaultValue": "@{string(formatDateTime(addhours(utcnow(), 5), 'yyyyMMdd'))}"
			},
			"emailTo": {
				"type": "String",
				"defaultValue": "dd895406.Heinz365.onmicrosoft.com@amer.teams.ms"
			}
		},
		"folder": {
			"name": "US_Sales"
		},
		"annotations": []
	}
}