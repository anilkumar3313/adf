{
	"name": "PL_KHCDE_IT4IT_ALERT_EMAIL",
	"properties": {
		"description": "Pipeline for Sending email alert for raw files",
		"activities": [
			{
				"name": "LU_FILE_SCHEDULE",
				"description": "Lookup activity for getting the orchestration details",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "LU-Metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": false,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"dataset": {
						"referenceName": "DS_KHCDE_IT4IT_RUN",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach",
				"description": "Loop for sending mail for every row needed",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "LU_FILE_SCHEDULE",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('LU_FILE_SCHEDULE').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "EMAIL_CHECK",
							"description": "If flag is true mail sent to respective DL",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(item().EMAIL_FLAG,'Y')",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "FailureEmailSender",
										"description": "This activity will send failure email when DBT Processing will fail",
										"type": "WebActivity",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"url": {
												"value": "@pipeline().globalParameters.la_khcde_generic_email_url",
												"type": "Expression"
											},
											"method": "POST",
											"body": {
												"value": "{ \n        \"to_email\": \"@{item().DL_EMAIL}\", \n        \"subject\": \"File not received for Vendor  @{item().VENDOR_NAME}\", \n        \"body\": \"File not received for @{item().VENDOR_NAME}  \\n\nDetails :\\n\nDataset_Name : @{item().DATASET_NAME}\\n\nAs of date : @{item().TODAY_DATE}\\n\nLast successful file processed on : @{item().LATEST_FILE_RUN}\\n\",\n        \"importance\": \"Low\"\n} ",
												"type": "Expression"
											}
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "LU-Metadata",
				"description": "This activity will lookup orchestration table in SQL Server based on given application and dataset group name",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "SP-PipelineStart_Master_Poll_load",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "select * from khc_orchestration_metadata where application_name = '@{pipeline().parameters.ApplicationName}' and trim(dataset_group) = 'file_alert'  and active_ind = 'y'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_KHCDE_GENERIC_MSSQL_Metadata",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "SP-PipelineStart_Master_Poll_load",
				"description": "This pipeline will load Information Technology Vendor data to Snowflake",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": "I",
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@{pipeline().parameters.ApplicationName}",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "file_alert",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_name": {
							"value": {
								"value": "@{pipeline().Pipeline}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": "Processing",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-PipelineEnd_Master_Poll_Load",
				"description": "This activity will log final SUCCESS message into SQL Server logs folder for pipeline Success",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "ForEach",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": "U",
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].dataset_group",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_name": {
							"value": {
								"value": "@{pipeline().Pipeline}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": "Successful",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"ApplicationName": {
				"type": "string",
				"defaultValue": "it4it"
			}
		},
		"variables": {
			"count": {
				"type": "String",
				"defaultValue": "-1"
			}
		},
		"folder": {
			"name": "IT4IT"
		},
		"annotations": []
	}
}