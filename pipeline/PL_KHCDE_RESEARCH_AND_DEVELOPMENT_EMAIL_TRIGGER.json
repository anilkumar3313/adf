{
	"name": "PL_KHCDE_RESEARCH_AND_DEVELOPMENT_EMAIL_TRIGGER",
	"properties": {
		"description": "This pipeline check audit log for every 3 hours and based on that it will trigger ml pipeline",
		"activities": [
			{
				"name": "LU-Metadata",
				"description": "This activity will lookup the metadata from audit log ,and consider the success status of master load pipeline",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "set_env_variable",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "select * from khc_audit_log\nwhere\napplication_name='@{pipeline().parameters.ApplicationName}'\nand pipeline_name= 'PL_KHCDE_RESEARCH_AND_DEVELOPMENT_MASTER_LOAD'\nand pipeline_status ='successful'\nand dataset_name in ('client_inputs_khc_claims_bucket.txt','client_inputs_khc_ingredient_mapping.txt','client_inputs_khc_usda_mintel_ingredient_mapping.txt','client_inputs_khc_usda_mintel_nutrient_mapping.txt','rnd_agile_spec_density.txt','rnd_agile_spec_lio.txt','rnd_agile_spec_per_hundred_gram.txt','rnd_agile_spec_per_serving.txt','rnd_agile_spec_recipe_info.txt','rnd_branded_usda_branded_food.txt','rnd_branded_usda_food_nutrient.txt','rnd_branded_usda_nutrient.txt','rnd_client_inputs_branded_nutrient_mapping.txt','rnd_client_inputs_khc_additional_data.txt','rnd_client_inputs_khc_additional_ingredients.txt','rnd_mintel_product_ingredient.txt','rnd_usda_nutrition_description.txt','rnd_usda_nutrition_ingredient.txt')\nand pipeline_end_time> =(select max(pipeline_start_time) from khc_audit_log\n                            where application_name='research_and_development'\n                            and pipeline_name= 'PL_KHCDE_RESEARCH_AND_DEVELOPMENT_EMAIL_TRIGGER'\n                            and pipeline_status='successful');",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_KHCDE_GENERIC_MSSQL_Metadata",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "send email",
				"description": "Picks up corresponding email based on condition provided",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "LU-Metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@greater(activity('LU-Metadata').output.count,0)",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "pipeline_success_email",
							"description": "Sends alert in teams channel.",
							"type": "WebActivity",
							"dependsOn": [
								{
									"activity": "set_env_variable_copy1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 5,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": {
									"value": "@pipeline().globalParameters.la_khcde_generic_email_url",
									"type": "Expression"
								},
								"method": "POST",
								"headers": {
									"Content-Type": "application/json"
								},
								"body": {
									"value": "{ \n\"to_email\": \"khcde@kraftheinz.com\",\n\"subject\": \"@{pipeline().globalParameters.AZURE_ENV} - CUSTOMEVENT: Rnd Product Formulation\", \n\"body\": \"{<br>\\\"ApplicationName\\\":\\\"research_development_email_to_ml\\\"<br>}\" \n}",
									"type": "Expression"
								}
							}
						},
						{
							"name": "set_env_variable_copy1",
							"description": "Set the variable - ENV from global parameters - AZURE_ENV",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "env",
								"value": {
									"value": "@pipeline().globalParameters.AZURE_ENV",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "SP-PipelineStart",
				"description": "This Activity logs starting of pipeline in khc_audit_logÂ table.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": {
								"value": "I",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@pipeline().parameters.ApplicationName",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_name": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": {
								"value": "processing",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "set_env_variable",
				"description": "Set the variable - ENV from global parameters - AZURE_ENV",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "SP-PipelineStart",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "env",
					"value": {
						"value": "@pipeline().globalParameters.AZURE_ENV",
						"type": "Expression"
					}
				}
			},
			{
				"name": "SP-ActivitySuccess03",
				"description": "This activity is to logs the success of email generation",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "send email",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": "email sent",
							"type": "String"
						},
						"activity_status": {
							"value": {
								"value": "Successful",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@pipeline().parameters.ApplicationName",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-Pipelinesuccesful_Master_Pool",
				"description": "This activity is to logs the success of email generation",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "send email",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": "U",
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@pipeline().parameters.ApplicationName",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_name": {
							"value": {
								"value": "@{pipeline().Pipeline}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": {
								"value": "Successful",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-PipelineFailed",
				"description": "This activity is to log the failure of this pipeline",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "send email",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": "U",
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@pipeline().parameters.ApplicationName",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_name": {
							"value": {
								"value": "@{pipeline().Pipeline}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": "Failed",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"ApplicationName": {
				"type": "string",
				"defaultValue": "research_and_development"
			}
		},
		"variables": {
			"env": {
				"type": "String",
				"defaultValue": "Dev"
			},
			"execute": {
				"type": "Boolean",
				"defaultValue": true
			}
		},
		"folder": {
			"name": "research_and_development"
		},
		"annotations": []
	}
}