{
	"name": "PL_KHCDE_NIELSEN_CA_MASTER_POOL_LOAD",
	"properties": {
		"description": "This has 2 Pipelines to Process the data. 1. Ingest Data from RAW blob file to Snowflake Stage Tables and \n2. Transform the data from Stage Tables and load to the final base tables.",
		"activities": [
			{
				"name": "LU-Metadata",
				"description": "Fetching metadata entries from the table",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "SP-PipelineStart_Snowflake",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "select * from khc_orchestration_metadata where application_name = '@{pipeline().parameters.ApplicationName}' and adf_trigger_name = '@{replace(pipeline().parameters.adf_trigger_name,'_trigger.txt','')}' and data_level = 2 and active_ind = 'y'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_KHCDE_GENERIC_MSSQL_Metadata",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "EP-SnowflakeIngestion",
				"description": "This activity runs the snowflake ingestion",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "LU-Metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "PL_KHCDE_GENERIC_SnowflakeIngestion",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"ApplicationName": {
							"value": "@{activity('LU-Metadata').output.value[0].application_name}",
							"type": "Expression"
						},
						"DatasetGroup": {
							"value": "@{activity('LU-Metadata').output.value[0].dataset_group}",
							"type": "Expression"
						},
						"ParameterJson": {
							"value": "@{activity('LU-Metadata').output.value[0].parameter_json}",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "EP-DBT_Processing",
				"description": "This activity carries out dbt processing",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "EP-SnowflakeIngestion",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "PL_KHCDE_GENERIC_DBTProcessing",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"ApplicationName": {
							"value": "@{activity('LU-Metadata').output.value[0].application_name}",
							"type": "Expression"
						},
						"DatasetGroup": {
							"value": "@{activity('LU-Metadata').output.value[0].dataset_group}",
							"type": "Expression"
						},
						"ParameterJson": {
							"value": "@{activity('LU-Metadata').output.value[0].parameter_json}",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "SP-PipelineStart_Snowflake",
				"description": "The pipeline has started. Makes an entry in the audit log. ",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": {
								"value": "I",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@pipeline().parameters.ApplicationName",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_name": {
							"value": {
								"value": "@{pipeline().Pipeline}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": {
								"value": "Processing",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@{replace(pipeline().parameters.adf_trigger_name,'_trigger.txt','')}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-ActivityFailed05",
				"description": "This activity marks the failure of the prior activity",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "EP-SnowflakeIngestion",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": "EP_SnowflakeIngestion",
							"type": "String"
						},
						"activity_status": {
							"value": {
								"value": "Failed",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].dataset_group",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_code": {
							"value": {
								"value": "N.A.",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_detail": {
							"value": {
								"value": "N.A.",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-ActivitySuccess07",
				"description": "This activity marks the success of the prior activity",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "EP-DBT_Processing",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": "EP_DBT_Processing",
							"type": "String"
						},
						"activity_status": {
							"value": {
								"value": "Successful",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].dataset_group",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-ActivityFailed07",
				"description": "This activity marks the failure of the prior activity",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "EP-DBT_Processing",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": "EP_DBT_Processing",
							"type": "String"
						},
						"activity_status": {
							"value": {
								"value": "Failed",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].dataset_group",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_code": {
							"value": {
								"value": "N.A.",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_detail": {
							"value": {
								"value": "N.A.",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-ActivitySuccess01",
				"description": "This activity marks the success of the prior activity",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "LU-Metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": "Metadata",
							"type": "String"
						},
						"activity_status": {
							"value": {
								"value": "Successful",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].dataset_group",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-ActivityFailed01",
				"description": "This activity marks the failure of the prior activity",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "LU-Metadata",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": "Metadata",
							"type": "String"
						},
						"activity_status": {
							"value": {
								"value": "Failed",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].dataset_group",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_code": {
							"value": {
								"value": "N.A.",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_detail": {
							"value": {
								"value": "N.A.",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-Pipelinesuccesful_with_DBT-Trigger_Creation",
				"description": "This activity marks the success of the prior activity",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "FE-CreateDBTTrigger",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": "U",
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].dataset_group",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_name": {
							"value": {
								"value": "@{pipeline().Pipeline}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": "Successful",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SuccessEmailSender",
				"description": "This activity notifies via email - the success of the prior activity",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "SP-ActivitySuccess07",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@pipeline().globalParameters.la_khcde_generic_email_url",
						"type": "Expression"
					},
					"method": "POST",
					"body": {
						"value": "{ \n\"to_email\":\"@{variables('to_emails')}\", \n\"subject\":\"Successful! - Nielsen Ca Load Process\", \n\"body\": \"Data Load process has been completed Successfully for @{activity('LU-Metadata').output.value[0].dataset_name} dataset. The pipeline name is @{pipeline().Pipeline}. The pipeline-id is @{pipeline().RunId}.\",\n\"importance\": \"Low\"\n}\n",
						"type": "Expression"
					}
				}
			},
			{
				"name": "FailureEmailSender",
				"description": "This activity notifies via email - the failure of the prior activity",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "SP-ActivityFailed07",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@pipeline().globalParameters.la_khcde_generic_email_url",
						"type": "Expression"
					},
					"method": "POST",
					"body": {
						"value": "{\n\"to_email\":\"@{variables('to_emails')}\", \n\"subject\":\"Failed! - Nielsen Ca load Process\",\n\"body\": \"DBT Processing has failed.The application name is @{pipeline().parameters.ApplicationName}. The Dataset name is @{activity('LU-Metadata').output.value[0].dataset_name}. The pipeline name is @{pipeline().Pipeline}. The pipelineid is @{pipeline().RunId}. \",\n\"importance\": \"High\"\n}\n",
						"type": "Expression"
					}
				}
			},
			{
				"name": "FailureEmailSender_Snowflake",
				"description": "This activity notifies via email - the failure of the prior activity",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "SP-ActivityFailed05",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@pipeline().globalParameters.la_khcde_generic_email_url",
						"type": "Expression"
					},
					"method": "POST",
					"body": {
						"value": "{\n\"to_email\":\"@{variables('to_emails')}\",\n\"subject\":\" Failed! - Nielsen ca data Snowflake ingestion load Process\",\n\"body\": \"The application name is @{pipeline().parameters.ApplicationName}.  The Dataset name is @{activity('LU-Metadata').output.value[0].dataset_name}.The pipeline name is @{pipeline().Pipeline}. The pipelineid is @{pipeline().RunId}.\",\n\"importance\": \"High\"\n}",
						"type": "Expression"
					}
				}
			},
			{
				"name": "FE-CreateDBTTrigger",
				"description": "This activity loops on all the records fetched from LU-Metadata activity for which DBT-Trigger has to be created.",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "EP-DBT_Processing",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('LU-Metadata').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "IF-Trigger",
							"description": "If condition to check if metadata entry contain dbt_trigger_name",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@and(not(empty(item().dbt_trigger_name)),greater(length(trim(item().dbt_trigger_name)), 0))",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "SP-ActivitySuccess03",
										"description": "This activity marks the success of the prior activity",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [
											{
												"activity": "CP-CreateDBT-Trigger",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 5,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[dbo].[generic_activity_audit_log]",
											"storedProcedureParameters": {
												"activity_name": {
													"value": {
														"value": "AF-TriggerLoad",
														"type": "Expression"
													},
													"type": "String"
												},
												"activity_status": {
													"value": {
														"value": "Successful",
														"type": "Expression"
													},
													"type": "String"
												},
												"application_name": {
													"value": {
														"value": "@{activity('LU-Metadata').output.value[0].application_name}",
														"type": "Expression"
													},
													"type": "String"
												},
												"dataset_name": {
													"value": {
														"value": "@{activity('LU-Metadata').output.value[0].dataset_group}",
														"type": "Expression"
													},
													"type": "String"
												},
												"pipeline_run_id": {
													"value": {
														"value": "@{pipeline().RunId}",
														"type": "Expression"
													},
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "LS_SQL",
											"type": "LinkedServiceReference"
										}
									},
									{
										"name": "CP-CreateDBT-Trigger",
										"description": "creation of dbt trigger in blob",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 5,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "SqlServerSource",
												"sqlReaderQuery": {
													"value": "select current_timestamp",
													"type": "Expression"
												},
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"sink": {
												"type": "DelimitedTextSink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings"
												},
												"formatSettings": {
													"type": "DelimitedTextWriteSettings",
													"quoteAllText": true,
													"fileExtension": ".txt"
												}
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "DS_KHCDE_GENERIC_MSSQL_Metadata",
												"type": "DatasetReference"
											}
										],
										"outputs": [
											{
												"referenceName": "DS_KHCDE_GENERIC_BLOB_CSV_FolderFile",
												"type": "DatasetReference",
												"parameters": {
													"container_name": {
														"value": "@{item().container_name}",
														"type": "Expression"
													},
													"blob_name": "sales/triggers/nielsen_ca/dbt_triggers",
													"file_name": {
														"value": "@if(contains(item().dbt_trigger_name, '/'), last(split(item().dbt_trigger_name, '/')), item().dbt_trigger_name)",
														"type": "Expression"
													},
													"field_delimiter": {
														"value": ",",
														"type": "Expression"
													}
												}
											}
										]
									}
								]
							}
						}
					]
				}
			}
		],
		"parameters": {
			"ApplicationName": {
				"type": "string",
				"defaultValue": "nielsen_ca"
			},
			"adf_trigger_name": {
				"type": "string"
			}
		},
		"variables": {
			"exit_ind": {
				"type": "String",
				"defaultValue": "N"
			},
			"adf_trigger_name": {
				"type": "String"
			},
			"to_emails": {
				"type": "String",
				"defaultValue": "KHC_CANADA_DE@kraftheinz.com, nicholas.stoycheff@kraftheinz.com, Tyson.Lin@kraftheinz.com, katia.shalygina@kraftheinz.com"
			}
		},
		"folder": {
			"name": "Nielsen_Canada"
		},
		"annotations": []
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}