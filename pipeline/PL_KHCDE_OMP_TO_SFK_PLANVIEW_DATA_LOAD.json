{
	"name": "PL_KHCDE_OMP_TO_SFK_PLANVIEW_DATA_LOAD",
	"properties": {
		"description": "To extract plan view datasets from OMP Blob storage to KHC Azure blob and from there  to SFK",
		"activities": [
			{
				"name": "LU-OMP_Extract_Metadata",
				"description": "Look-up activity to get metadata for OMP Planview data.",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "SP-PipelineStart_Extract_intial",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "select * from dbo.khc_orchestration_metadata where application_name = 'omp' and active_ind = 'y' and dataset_group in ('omp_planview','omp_planview_sop','omp_constrained_forecast')",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_KHCDE_GENERIC_MSSQL_Metadata",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach-OMP_Extract_And_Archive",
				"description": "For Each loop to extract and archive the OMP planview data from OMP ADLS to KHC ADLS.",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "LU-OMP_Extract_Metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('LU-OMP_Extract_Metadata').output.value",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "Get Metadata - to check the entries",
							"description": "Metadata activity to check for the files availability",
							"type": "GetMetadata",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "DS_KHCDE_OMP_BLOB_SOURCE",
									"type": "DatasetReference",
									"parameters": {
										"filename": {
											"value": "@concat(item().dataset_name,formatDateTime(utcnow(),'yyyyMMdd'),'.tsv')",
											"type": "Expression"
										}
									}
								},
								"fieldList": [
									"exists"
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							}
						},
						{
							"name": "If file exist - copy",
							"description": "If file exists then OMP planview data is extracted and archived from OMP ADLS to KHC ADLS.",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Get Metadata - to check the entries",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@activity('Get Metadata - to check the entries').output.exists",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "CP-PlanviewFiles_ExtractedFrom_OMP",
										"description": "Data extraction from OMP to KHC\n",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 5,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "BinarySource",
												"storeSettings": {
													"type": "AzureBlobStorageReadSettings",
													"recursive": true,
													"deleteFilesAfterCompletion": false
												},
												"formatSettings": {
													"type": "BinaryReadSettings"
												}
											},
											"sink": {
												"type": "BinarySink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings"
												}
											},
											"enableStaging": false
										},
										"inputs": [
											{
												"referenceName": "DS_KHCDE_OMP_BLOB_SOURCE",
												"type": "DatasetReference",
												"parameters": {
													"filename": {
														"value": "@concat(item().dataset_name,formatDateTime(utcnow(),'yyyyMMdd'),'.tsv')",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "DS_KHCDE_OMP_BLOB_SINK",
												"type": "DatasetReference",
												"parameters": {
													"file_name": {
														"value": "@concat(item().dataset_name,formatDateTime(utcnow(),'yyyyMMdd'),'.tsv')",
														"type": "Expression"
													},
													"container_name": {
														"value": "@{item().container_name}",
														"type": "Expression"
													},
													"blob_path": {
														"value": "@{item().stage_blob_name}",
														"type": "Expression"
													}
												}
											}
										]
									},
									{
										"name": "CP-OMP_Planview_Archive",
										"description": "Archiving OMP Planview files.",
										"type": "Copy",
										"dependsOn": [
											{
												"activity": "CP-PlanviewFiles_ExtractedFrom_OMP",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 5,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "DelimitedTextSource",
												"storeSettings": {
													"type": "AzureBlobFSReadSettings",
													"recursive": true,
													"enablePartitionDiscovery": false
												},
												"formatSettings": {
													"type": "DelimitedTextReadSettings"
												}
											},
											"sink": {
												"type": "DelimitedTextSink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings"
												},
												"formatSettings": {
													"type": "DelimitedTextWriteSettings",
													"quoteAllText": true,
													"fileExtension": ".txt"
												}
											},
											"enableStaging": false,
											"validateDataConsistency": false
										},
										"inputs": [
											{
												"referenceName": "DS_KHCDE_OMP_BLOB_FOLDER_FILE",
												"type": "DatasetReference",
												"parameters": {
													"file": {
														"value": "@concat(item().dataset_name,formatDateTime(utcnow(),'yyyyMMdd'),'.tsv')",
														"type": "Expression"
													},
													"blobpath": {
														"value": "@{item().stage_blob_name}",
														"type": "Expression"
													},
													"container": {
														"value": "@{item().container_name}",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "DS_KHCDE_OMP_BLOB_FOLDER_FILE",
												"type": "DatasetReference",
												"parameters": {
													"file": {
														"value": "@concat(item().dataset_name,formatDateTime(utcnow(),'yyyyMMdd'),'.tsv')",
														"type": "Expression"
													},
													"blobpath": {
														"value": "@replace(\n     item().archival_blob_name, \n     'yyyyMMdd', \n     formatDateTime(utcnow(),'yyyyMMdd')\n)",
														"type": "Expression"
													},
													"container": {
														"value": "@{item().container_name}",
														"type": "Expression"
													}
												}
											}
										]
									},
									{
										"name": "Audit_Log_OMP_Data_Extraction_Success",
										"description": "Stored procedure to logs success of OMP planview data extraction in khc_audit_log_detail table.",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [
											{
												"activity": "CP-PlanviewFiles_ExtractedFrom_OMP",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 5,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[dbo].[generic_activity_audit_log]",
											"storedProcedureParameters": {
												"activity_name": {
													"value": {
														"value": "CP-PlanviewFiles_ExtractedFrom_OMP",
														"type": "Expression"
													},
													"type": "String"
												},
												"activity_status": {
													"value": {
														"value": "Successful",
														"type": "Expression"
													},
													"type": "String"
												},
												"application_name": {
													"value": {
														"value": "@{item().application_name}",
														"type": "Expression"
													},
													"type": "String"
												},
												"dataset_name": {
													"value": {
														"value": "@{item().data_filename}",
														"type": "Expression"
													},
													"type": "String"
												},
												"pipeline_run_id": {
													"value": {
														"value": "@{pipeline().RunId}",
														"type": "Expression"
													},
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "LS_SQL",
											"type": "LinkedServiceReference"
										}
									},
									{
										"name": "Audit_Log_OMP_Files_Archive_Success",
										"description": "Stored procedure to logs success of  OMP Planview data archiving in khc_audit_log_detail table.",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [
											{
												"activity": "CP-OMP_Planview_Archive",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 5,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[dbo].[generic_activity_audit_log]",
											"storedProcedureParameters": {
												"activity_name": {
													"value": {
														"value": "CP-OMP_Planview_Archive",
														"type": "Expression"
													},
													"type": "String"
												},
												"activity_status": {
													"value": {
														"value": "Successful",
														"type": "Expression"
													},
													"type": "String"
												},
												"application_name": {
													"value": {
														"value": "@{item().application_name}",
														"type": "Expression"
													},
													"type": "String"
												},
												"dataset_name": {
													"value": {
														"value": "@{item().data_filename}",
														"type": "Expression"
													},
													"type": "String"
												},
												"pipeline_run_id": {
													"value": {
														"value": "@{pipeline().RunId}",
														"type": "Expression"
													},
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "LS_SQL",
											"type": "LinkedServiceReference"
										}
									},
									{
										"name": "Audit_Log_OMP_Files_Archive_Failure",
										"description": "Stored procedure to logs failure of  OMP Planview data archiving in khc_audit_log_detail table.",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [
											{
												"activity": "CP-OMP_Planview_Archive",
												"dependencyConditions": [
													"Failed"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 5,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
											"storedProcedureParameters": {
												"action_ind": {
													"value": "U",
													"type": "String"
												},
												"activity_name": {
													"value": {
														"value": "CP-OMP_Planview_Archive",
														"type": "Expression"
													},
													"type": "String"
												},
												"activity_status": {
													"value": "Failed",
													"type": "String"
												},
												"application_name": {
													"value": {
														"value": "@{item().application_name}",
														"type": "Expression"
													},
													"type": "String"
												},
												"dataset_name": {
													"value": {
														"value": "@{item().data_filename}",
														"type": "Expression"
													},
													"type": "String"
												},
												"error_code": {
													"value": {
														"value": "@activity('CP-OMP_Planview_Archive').Error.errorCode",
														"type": "Expression"
													},
													"type": "String"
												},
												"error_detail": {
													"value": {
														"value": "@activity('CP-OMP_Planview_Archive').Error.message",
														"type": "Expression"
													},
													"type": "String"
												},
												"pipeline_run_id": {
													"value": {
														"value": "@pipeline().RunId",
														"type": "Expression"
													},
													"type": "String"
												},
												"pipeline_status": {
													"value": "Failed ",
													"type": "String"
												},
												"skip_pipeline_audit_update": {
													"value": "N",
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "LS_SQL",
											"type": "LinkedServiceReference"
										}
									},
									{
										"name": "Audit_Log_OMP_Data_Extraction_Failure",
										"description": "Stored procedure to logs failure of OMP planview data extraction in khc_audit_log_detail table.",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [
											{
												"activity": "CP-PlanviewFiles_ExtractedFrom_OMP",
												"dependencyConditions": [
													"Failed"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 5,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
											"storedProcedureParameters": {
												"action_ind": {
													"value": "U",
													"type": "String"
												},
												"activity_name": {
													"value": {
														"value": "CP-PlanviewFiles_ExtractedFrom_OMP",
														"type": "Expression"
													},
													"type": "String"
												},
												"activity_status": {
													"value": "Failed",
													"type": "String"
												},
												"application_name": {
													"value": {
														"value": "@{item().application_name}",
														"type": "Expression"
													},
													"type": "String"
												},
												"dataset_name": {
													"value": {
														"value": "@{item().data_filename}",
														"type": "Expression"
													},
													"type": "String"
												},
												"error_code": {
													"value": {
														"value": "@activity('CP-PlanviewFiles_ExtractedFrom_OMP').Error.errorCode",
														"type": "Expression"
													},
													"type": "String"
												},
												"error_detail": {
													"value": {
														"value": "@activity('CP-PlanviewFiles_ExtractedFrom_OMP').Error.message",
														"type": "Expression"
													},
													"type": "String"
												},
												"pipeline_run_id": {
													"value": {
														"value": "@pipeline().RunId",
														"type": "Expression"
													},
													"type": "String"
												},
												"pipeline_status": {
													"value": "Failed ",
													"type": "String"
												},
												"skip_pipeline_audit_update": {
													"value": "N",
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "LS_SQL",
											"type": "LinkedServiceReference"
										}
									}
								]
							}
						},
						{
							"name": "If Condition- check if exists",
							"description": "Check if all different files are extracted and exists to process SFK ingestion",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "If file exist - copy",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@and(activity('Get Metadata - to check the entries').output.exists,equals(contains(variables('datasets'),item().dataset_group),false))",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "Append dataset_group",
										"description": "appends the dataset group of the existed files",
										"type": "AppendVariable",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"variableName": "datasets",
											"value": {
												"value": "@item().dataset_group",
												"type": "Expression"
											}
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "Audit_Log_Data_Extraction_and_Archival_Success",
				"description": "This activity logs success of  Data Extract and Archival in khc_audit_log_detail table.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "ForEach-OMP_Extract_And_Archive",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": "FE-Data_Extraction",
							"type": "String"
						},
						"activity_status": {
							"value": {
								"value": "Successful",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@{activity('LU-OMP_Extract_Metadata').output.value[0].application_name}",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@{activity('LU-OMP_Extract_Metadata').output.value[0].dataset_group}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Audit_Log_Data_Extraction_and_Archiva_Failure",
				"description": "This activity logs failure of  Data Extract and Archival in khc_audit_log_detail table.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "ForEach-OMP_Extract_And_Archive",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": "U",
							"type": "String"
						},
						"activity_name": {
							"value": {
								"value": "FE-Data_Extraction",
								"type": "Expression"
							},
							"type": "String"
						},
						"activity_status": {
							"value": "Failed",
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@{activity('LU-OMP_Extract_Metadata').output.value[0].application_name}",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@{activity('LU-OMP_Extract_Metadata').output.value[0].dataset_group}",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_code": {
							"value": {
								"value": "@activity('ForEach-OMP_Extract_And_Archive').Error.errorCode",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_detail": {
							"value": {
								"value": "@activity('ForEach-OMP_Extract_And_Archive').Error.message",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": "Failed ",
							"type": "String"
						},
						"skip_pipeline_audit_update": {
							"value": "N",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-PipelineStart_Extract_intial",
				"description": "Stored procedure to logs the running status for the pipeline khc_audit_log table",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": {
								"value": "I",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@pipeline().parameters.application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@pipeline().parameters.dataset_group",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_name": {
							"value": {
								"value": "@{pipeline().Pipeline}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": {
								"value": "Processing",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-PipelineFailed_Master",
				"description": "Stored procedure for logging failed pipeline execution.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "DL-Staged_OMP_PlanviewFiles",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": {
								"value": "U",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@pipeline().parameters.application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@pipeline().parameters.dataset_group",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_name": {
							"value": {
								"value": "@{pipeline().Pipeline}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": {
								"value": "Failed",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-PipelineSuccess_Master",
				"description": "Stored procedure for logging successful pipeline execution.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "DL-Staged_OMP_PlanviewFiles",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": {
								"value": "U",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@pipeline().parameters.application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@pipeline().parameters.dataset_group",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_name": {
							"value": {
								"value": "@{pipeline().Pipeline}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": {
								"value": "Successful",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Failure_Notification",
				"description": "Email notification to stakeholders on failed pipeline execution.",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "DL-Staged_OMP_PlanviewFiles",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@pipeline().globalParameters.la_khcde_generic_email_url",
						"type": "Expression"
					},
					"method": "POST",
					"headers": {
						"Content-Type": "application/json"
					},
					"body": {
						"value": "{\n\"subject\": \"Azure Data Factory - OMP to SFK Planview files data load – Failure\",\n\"body\": \"Hi, <br>OMP Planview files data load to Snowflake is Failed <br><br>Thanks & Regards, <br>KHC DE Team\",\n\"to_email\": \"@{if(equals(pipeline().globalParameters.AZURE_ENV,'PROD'),'lucas.koster@kraftheinz.com;daniel.fiems@kraftheinz.com;Richard.Storey@kraftheinz.com;Process.mining@kraftheinz.com;dl_cloud_dataops_ent_func@kraftheinz.com','afifareshma.shaik@kraftheinz.com')}\",\n\"cc_email\": \"@{if(equals(pipeline().globalParameters.AZURE_ENV,'PROD'),'umasankar.avadhanula@kraftheinz.com;afifareshma.shaik@kraftheinz.com','umasankar.avadhanula@kraftheinz.com')}\",\n\"importance\": \"High\"\n}",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Audit_Log_LU_OMP_Planview_Metadata_Failure",
				"description": "Stored procedure to logs failure of  OMP Metadata extraction in khc_audit_log_detail table.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "LU-OMP_Extract_Metadata",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": "U",
							"type": "String"
						},
						"activity_name": {
							"value": {
								"value": "LU-OMP_Extract_Metadata",
								"type": "Expression"
							},
							"type": "String"
						},
						"activity_status": {
							"value": "Failed",
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@{activity('LU-OMP_Extract_Metadata').output.value[0].application_name}",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@{activity('LU-OMP_Extract_Metadata').output.value[0].dataset_group}",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_code": {
							"value": {
								"value": "@activity('LU-OMP_Extract_Metadata').Error.errorCode",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_detail": {
							"value": {
								"value": "@activity('LU-OMP_Extract_Metadata').Error.message",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": "Failed ",
							"type": "String"
						},
						"skip_pipeline_audit_update": {
							"value": "N",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Audit_Log_LU_OMP_Planview_Metadata_Success",
				"description": "Stored procedure to logs success of  OMP Metadata extraction in khc_audit_log_detail table.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "LU-OMP_Extract_Metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": {
								"value": "LU-OMP_Extract_Metadata",
								"type": "Expression"
							},
							"type": "String"
						},
						"activity_status": {
							"value": {
								"value": "Successful",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@{activity('LU-OMP_Extract_Metadata').output.value[0].application_name}",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@{activity('LU-OMP_Extract_Metadata').output.value[0].dataset_group}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "DL-Staged_OMP_PlanviewFiles",
				"description": "Delete all OMP Planview files from KHC staging folder to avoid piling up of data files because OMP planview files are stored with DATE as a suffix in the file name and hence files are not updated but a new files is created everyday while data extraction. ",
				"type": "Delete",
				"dependsOn": [
					{
						"activity": "If dataset group exist",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
						"type": "DatasetReference",
						"parameters": {
							"container_name": {
								"value": "@{activity('LU-OMP_Extract_Metadata').output.value[0].container_name}",
								"type": "Expression"
							},
							"blob_name": {
								"value": "@{activity('LU-OMP_Extract_Metadata').output.value[0].stage_blob_name}",
								"type": "Expression"
							}
						}
					},
					"enableLogging": false,
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": false,
						"wildcardFileName": {
							"value": "*.tsv",
							"type": "Expression"
						},
						"enablePartitionDiscovery": false
					}
				}
			},
			{
				"name": "Audit_Log_Delete_OMP_PlanviewFiles_Failure",
				"description": "Stored procedure to logs failure of  OMP planview file deletion in khc_audit_log_detail table.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "DL-Staged_OMP_PlanviewFiles",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": "U",
							"type": "String"
						},
						"activity_name": {
							"value": {
								"value": "DL-Staged_OMP_PlanviewFiles",
								"type": "Expression"
							},
							"type": "String"
						},
						"activity_status": {
							"value": "Failed",
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@{activity('LU-OMP_Extract_Metadata').output.value[0].application_name}",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@{activity('LU-OMP_Extract_Metadata').output.value[0].data_filename}",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_code": {
							"value": {
								"value": "@activity('DL-Staged_OMP_PlanviewFiles').Error.errorCode",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_detail": {
							"value": {
								"value": "@activity('DL-Staged_OMP_PlanviewFiles').Error.message",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": "Failed ",
							"type": "String"
						},
						"skip_pipeline_audit_update": {
							"value": "N",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Audit_Log_Delete_OMP_PlanviewFiles_Success",
				"description": "Stored procedure to logs success status of  OMP planview file deletion in khc_audit_log_detail table.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "DL-Staged_OMP_PlanviewFiles",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": {
								"value": "DL-Staged_OMP_PlanviewFiles",
								"type": "Expression"
							},
							"type": "String"
						},
						"activity_status": {
							"value": {
								"value": "Successful",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@{activity('LU-OMP_Extract_Metadata').output.value[0].application_name}",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@{activity('LU-OMP_Extract_Metadata').output.value[0].data_filename}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "LU-JDA_Extract_Metadata",
				"description": "Look-up activity to get metadata for OMP forecast data.",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "ForEach - dataset_group",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "select * from dbo.khc_orchestration_metadata where application_name = 'omp' and active_ind = 'y' and dataset_group = 'omp_constrained_forecast'\nand dataset_name = 'ConstrainedForecast'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_KHCDE_GENERIC_MSSQL_Metadata",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach - dataset_group",
				"description": "For each loop to perform SFK ingestion and  dbt processing for the existing files",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "ForEach-OMP_Extract_And_Archive",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@variables('datasets')",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "EP-SnowflakeIngestion",
							"description": "Pipeline for Snowflake ingestion",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "PL_KHCDE_GENERIC_SnowflakeIngestion",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"ApplicationName": {
										"value": "@{activity('LU-OMP_Extract_Metadata').output.value[0].application_name}",
										"type": "Expression"
									},
									"DatasetGroup": {
										"value": "@item()",
										"type": "Expression"
									},
									"ParameterJson": {
										"value": "@{activity('LU-OMP_Extract_Metadata').output.value[0].parameter_json}",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "EP-DBTProcessing",
							"description": "to ingest data from snowflake raw tables to final tables by appending the load_date_time column to the tables",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "EP-SnowflakeIngestion",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "PL_KHCDE_GENERIC_DBTProcessing",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"ApplicationName": {
										"value": "@{activity('LU-OMP_Extract_Metadata').output.value[0].application_name}",
										"type": "Expression"
									},
									"DatasetGroup": {
										"value": "@item()",
										"type": "Expression"
									},
									"ParameterJson": {
										"value": "@{activity('LU-OMP_Extract_Metadata').output.value[0].parameter_json}",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "Audit_Log_Snowflake_Ingession_Success",
							"description": "Stored procedure to logs success Snowflake data ingestion in khc_audit_log_detail table.",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "EP-SnowflakeIngestion",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 5,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[generic_activity_audit_log]",
								"storedProcedureParameters": {
									"activity_name": {
										"value": {
											"value": "EP-SnowflakeIngestion",
											"type": "Expression"
										},
										"type": "String"
									},
									"activity_status": {
										"value": {
											"value": "Successful",
											"type": "Expression"
										},
										"type": "String"
									},
									"application_name": {
										"value": {
											"value": "@{activity('LU-OMP_Extract_Metadata').output.value[0].application_name}",
											"type": "Expression"
										},
										"type": "String"
									},
									"dataset_name": {
										"value": {
											"value": "@{activity('LU-OMP_Extract_Metadata').output.value[0].dataset_group}",
											"type": "Expression"
										},
										"type": "String"
									},
									"pipeline_run_id": {
										"value": {
											"value": "@{pipeline().RunId}",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_SQL",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Audit_Log_Snowflake_Ingession_Failure",
							"description": "Stored procedure to logs failure Snowflake data ingestion in khc_audit_log_detail table.",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "EP-SnowflakeIngestion",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 5,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
								"storedProcedureParameters": {
									"action_ind": {
										"value": "U",
										"type": "String"
									},
									"activity_name": {
										"value": {
											"value": "EP-SnowflakeIngestion",
											"type": "Expression"
										},
										"type": "String"
									},
									"activity_status": {
										"value": "Failed",
										"type": "String"
									},
									"application_name": {
										"value": {
											"value": "@{activity('LU-OMP_Extract_Metadata').output.value[0].application_name}",
											"type": "Expression"
										},
										"type": "String"
									},
									"dataset_name": {
										"value": {
											"value": "@{activity('LU-OMP_Extract_Metadata').output.value[0].dataset_group}",
											"type": "Expression"
										},
										"type": "String"
									},
									"error_code": {
										"value": {
											"value": "@activity('EP-SnowflakeIngestion').Error.errorCode",
											"type": "Expression"
										},
										"type": "String"
									},
									"error_detail": {
										"value": {
											"value": "@activity('EP-SnowflakeIngestion').Error.message",
											"type": "Expression"
										},
										"type": "String"
									},
									"pipeline_run_id": {
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										},
										"type": "String"
									},
									"pipeline_status": {
										"value": "Failed ",
										"type": "String"
									},
									"skip_pipeline_audit_update": {
										"value": "N",
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_SQL",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Audit_Log_DBT_Processing_Success",
							"description": "Stored procedure to logs success of  DBT Processing in khc_audit_log_detail table.",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "EP-DBTProcessing",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 5,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[generic_activity_audit_log]",
								"storedProcedureParameters": {
									"activity_name": {
										"value": {
											"value": "EP-DBTProcessing",
											"type": "Expression"
										},
										"type": "String"
									},
									"activity_status": {
										"value": {
											"value": "Successful",
											"type": "Expression"
										},
										"type": "String"
									},
									"application_name": {
										"value": {
											"value": "@{activity('LU-OMP_Extract_Metadata').output.value[0].application_name}",
											"type": "Expression"
										},
										"type": "String"
									},
									"dataset_name": {
										"value": {
											"value": "@{activity('LU-OMP_Extract_Metadata').output.value[0].dataset_group}",
											"type": "Expression"
										},
										"type": "String"
									},
									"pipeline_run_id": {
										"value": {
											"value": "@{pipeline().RunId}",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_SQL",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Audit_Log_DBT_Processing_Failure",
							"description": "Stored procedure to logs failure of  DBT Processing in khc_audit_log_detail table.",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "EP-DBTProcessing",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 5,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
								"storedProcedureParameters": {
									"action_ind": {
										"value": "U",
										"type": "String"
									},
									"activity_name": {
										"value": {
											"value": "EP-DBTProcessing",
											"type": "Expression"
										},
										"type": "String"
									},
									"activity_status": {
										"value": "Failed",
										"type": "String"
									},
									"application_name": {
										"value": {
											"value": "@{activity('LU-OMP_Extract_Metadata').output.value[0].application_name}",
											"type": "Expression"
										},
										"type": "String"
									},
									"dataset_name": {
										"value": {
											"value": "@{activity('LU-OMP_Extract_Metadata').output.value[0].dataset_group}",
											"type": "Expression"
										},
										"type": "String"
									},
									"error_code": {
										"value": {
											"value": "@activity('EP-DBTProcessing').Error.errorCode",
											"type": "Expression"
										},
										"type": "String"
									},
									"error_detail": {
										"value": {
											"value": "@activity('EP-DBTProcessing').Error.message",
											"type": "Expression"
										},
										"type": "String"
									},
									"pipeline_run_id": {
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										},
										"type": "String"
									},
									"pipeline_status": {
										"value": "Failed ",
										"type": "String"
									},
									"skip_pipeline_audit_update": {
										"value": "N",
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_SQL",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "If dataset group exist",
				"description": "Checks for the files under particular dataset group existence and extraction process continues",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "LU-JDA_Extract_Metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@contains(variables('datasets'), activity('LU-JDA_Extract_Metadata').output.value[0].dataset_group)",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "CP-Forecastfile_Pushto_JDA",
							"description": "Data extraction from Azure blob to JDA ",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "OracleSink",
									"writeBatchSize": 10000,
									"preCopyScript": {
										"value": "delete from @{activity('LU-JDA_Extract_Metadata').output.value[0].filename}",
										"type": "Expression"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "DS_KHCDE_JDA_TABLE",
									"type": "DatasetReference",
									"parameters": {
										"blob_location": {
											"value": "@activity('LU-JDA_Extract_Metadata').output.value[0].stage_blob_name",
											"type": "Expression"
										},
										"file_name": {
											"value": "@{concat(activity('LU-JDA_Extract_Metadata').output.value[0].dataset_name, formatDateTime(utcNow(), 'yyyyMMdd'),'.tsv')}",
											"type": "Expression"
										},
										"container": {
											"value": "@activity('LU-JDA_Extract_Metadata').output.value[0].container_name",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DS_KHCDE_OMP_JDA_SOURCE",
									"type": "DatasetReference",
									"parameters": {
										"TableName": {
											"value": "@activity('LU-JDA_Extract_Metadata').output.value[0].filename",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "If Condition - for planview files check",
				"description": "If condition to check for the planview files existence",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "ForEach-OMP_Extract_And_Archive",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@contains(variables('datasets'),'omp_planview')",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Failure_Notification - Planview files",
							"description": "Email notification for pipeline failure of planview files",
							"type": "WebActivity",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 5,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": {
									"value": "@pipeline().globalParameters.la_khcde_generic_email_url",
									"type": "Expression"
								},
								"method": "POST",
								"headers": {
									"Content-Type": "application/json"
								},
								"body": {
									"value": "{\n\"subject\": \"Azure Data Factory - OMP to SFK Planview files - Missing in Source\",\n\"body\": \"Hi, <br>OMP Planview files are missing since the files are not available in OMP Blob<br><br>Thanks & Regards, <br>KHC DE Team\",\n\"to_email\": \"@{if(equals(pipeline().globalParameters.AZURE_ENV,'PROD'),'lucas.koster@kraftheinz.com;hilary.musaringo@kraftheinz.com;Richard.Storey@kraftheinz.com;Process.mining@kraftheinz.com;dl_cloud_dataops_ent_func@kraftheinz.com','afifareshma.shaik@kraftheinz.com')}\",\n\"cc_email\": \"@{if(equals(pipeline().globalParameters.AZURE_ENV,'PROD'),'umasankar.avadhanula@kraftheinz.com;afifareshma.shaik@kraftheinz.com','umasankar.avadhanula@kraftheinz.com')}\",\n\"importance\": \"High\"\n}",
									"type": "Expression"
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"application_name": {
				"type": "string",
				"defaultValue": "omp"
			},
			"dataset_group": {
				"type": "string",
				"defaultValue": "omp_planview"
			}
		},
		"variables": {
			"datasets": {
				"type": "Array"
			}
		},
		"folder": {
			"name": "OMP"
		},
		"annotations": []
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}