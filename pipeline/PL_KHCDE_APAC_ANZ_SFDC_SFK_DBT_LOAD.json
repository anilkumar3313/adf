{
	"name": "PL_KHCDE_APAC_ANZ_SFDC_SFK_DBT_LOAD",
	"properties": {
		"description": "This has 2 Pipelines to Process the data.\n1. Ingest Data from RAW blob .txt file to Snowflake Stage Tables and \n2. Transform the data from Stage Tables and load to the final base tables.",
		"activities": [
			{
				"name": "LU-Metadata",
				"description": "Lookup activity for ANZ sfdc sales.",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "EP_SFDC_DATA_Extract",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "select\n    om.*,\n    ctrl.table_name,\n    ctrl.dynamic_partition_ind,\n    ctrl.partition_column,\n    ctrl.incr_column_name,\n    ctrl.last_incr_value,\n    concat('select ',select_columns,' from ',ctrl.table_name,'  where ',ctrl.FINAL_WHERE_FOR_EXT) as extraction_query,\n    case\n    when (incr_column_name is not null and trim(incr_column_name)<>'' and trim(last_incr_value) <> '' and last_incr_value is not null) \n    then concat('select max(',ctrl.incr_column_name,') as max_incr_value from ',ctrl.table_name,' where ',ctrl.where_clause_FOR_MAX)\n    else 'SELECT count() FROM Account WHERE AccountSource = ''DUMMYQUERYFORTESTING'''\n    end as max_incr_value_query\nfrom dbo.khc_orchestration_metadata om inner join\n( Select\n    parent_id,\n    table_name,\n    dynamic_partition_ind,\n    partition_column,\n    where_clause,\n    incr_column_name,\n    last_incr_value,\n    select_columns,\n    case\n        when (where_clause is null or trim(where_clause)='') and (incr_column_name is null or trim(incr_column_name)='') then '1=1'\n        when (where_clause is not null and trim(where_clause)<>'') and (incr_column_name is null or trim(incr_column_name)='') then where_clause\n        when (where_clause is null or trim(where_clause)='') and (incr_column_name is not null and trim(incr_column_name)<>'' and trim(last_incr_value) <> '' and last_incr_value is not null) then concat(incr_column_name,' <= FETCH_SFDC_MAX_EXTR_VAL and ',incr_column_name,' > ',last_incr_value)\n        when (where_clause is not null and trim(where_clause)<>'') and (incr_column_name is not null and trim(incr_column_name)<>'' and trim(last_incr_value) <> '' and last_incr_value is not null) then concat(incr_column_name,' <= FETCH_SFDC_MAX_EXTR_VAL and ',incr_column_name,' > ',last_incr_value ,' and ',where_clause)\n    END as FINAL_WHERE_FOR_EXT,\n    case when (where_clause is null or trim(where_clause)='') then '1=1' else where_clause END where_clause_FOR_MAX\nfrom dbo.khc_data_extract_control_table\n) ctrl\non om.parent_id = ctrl.parent_id\nwhere len(trim(om.server_name)) > 0\n  and len(trim(om.application_name)) > 0\n  and len(trim(ctrl.table_name)) > 0\n  and len(trim(om.server_path)) > 0\n  and len(trim(om.filename)) > 0\n  and len(trim(om.data_filename)) > 0\n  and om.file_zip_ind in ('y', 'n')\n  and om.file_checksum_ind in ('y', 'n')\n  and len(trim(om.container_name)) > 0\n  and len(trim(om.archival_blob_name)) > 0\n  and len(trim(om.stage_blob_name)) > 0\n  and om.application_name like  '@{pipeline().parameters.ApplicationName}'\n  and om.dataset_group like  '@{pipeline().parameters.dataset_group}'\n  and om.data_level=1 \n  and om.active_ind = 'y'\n  and server_name like 'LS_APAC_ANZ_SALESFORCE%'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_KHCDE_GENERIC_MSSQL_Metadata",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "EP-SnowflakeIngestion",
				"description": "Snowflake ingestion for sfdc tables",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "LU-Metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "PL_KHCDE_GENERIC_SnowflakeIngestion",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"ApplicationName": {
							"value": "@{activity('LU-Metadata').output.value[0].application_name}",
							"type": "Expression"
						},
						"DatasetGroup": {
							"value": "@{activity('LU-Metadata').output.value[0].dataset_group}",
							"type": "Expression"
						},
						"ParameterJson": {
							"value": "@{activity('LU-Metadata').output.value[0].parameter_json}",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "EP-DBT_Processing",
				"description": "activity for dbt process after snowflake ingestion.",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "EP-SnowflakeIngestion",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "PL_KHCDE_GENERIC_DBTProcessing",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"ApplicationName": {
							"value": "@{activity('LU-Metadata').output.value[0].application_name}",
							"type": "Expression"
						},
						"DatasetGroup": {
							"value": "@{activity('LU-Metadata').output.value[0].dataset_group}",
							"type": "Expression"
						},
						"ParameterJson": {
							"value": "@{activity('LU-Metadata').output.value[0].parameter_json}",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "SP-ActivityFailed03",
				"description": "Failing activity for SNF ingestion.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "EP-SnowflakeIngestion",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": "EP_SnowflakeIngestion",
							"type": "String"
						},
						"activity_status": {
							"value": {
								"value": "Failed",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].dataset_group",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_code": {
							"value": {
								"value": "N.A.",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_detail": {
							"value": {
								"value": "N.A.",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-ActivitySuccess04",
				"description": "Success for dbt process",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "EP-DBT_Processing",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": "EP_DBT_Processing",
							"type": "String"
						},
						"activity_status": {
							"value": {
								"value": "Successful",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].dataset_group",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-ActivityFailed04",
				"description": "Failed acivity for dbt process",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "EP-DBT_Processing",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": "EP_DBT_Processing",
							"type": "String"
						},
						"activity_status": {
							"value": {
								"value": "Failed",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].dataset_group",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_code": {
							"value": {
								"value": "N.A.",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_detail": {
							"value": {
								"value": "N.A.",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-ActivitySuccess02",
				"description": "This activity for success of lookup-metadata,",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "LU-Metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": "LU-Metadata",
							"type": "String"
						},
						"activity_status": {
							"value": {
								"value": "Successful",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].dataset_group",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-ActivityFailed02",
				"description": "Failing activity for lookup-metadata",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "LU-Metadata",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": "LU-Metadata",
							"type": "String"
						},
						"activity_status": {
							"value": {
								"value": "Failed",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].dataset_group",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_code": {
							"value": {
								"value": "N.A.",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_detail": {
							"value": {
								"value": "N.A.",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-Pipelinesuccesful",
				"description": "This Activity logs completion of pipeline in khc_audit_log table.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "FE-Metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": "U",
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].dataset_group",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_name": {
							"value": {
								"value": "@{pipeline().Pipeline}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": "Successful",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-ActivitySuccess03",
				"description": "Success activity for SNF ingestion.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "EP-SnowflakeIngestion",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": "EP-SnowflakeIngestion",
							"type": "String"
						},
						"activity_status": {
							"value": {
								"value": "Successful",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].dataset_group",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "DELETE_FILE_TRIGGERS",
				"description": "Delete activity for trigger file",
				"type": "Delete",
				"dependsOn": [
					{
						"activity": "EP-DBT_Processing",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
						"type": "DatasetReference",
						"parameters": {
							"container_name": {
								"value": "@activity('LU-Metadata').output.value[0].container_name",
								"type": "Expression"
							},
							"blob_name": {
								"value": "master_data/sfdc_master_data/triggers/",
								"type": "Expression"
							}
						}
					},
					"enableLogging": false,
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": false,
						"wildcardFileName": "*.txt"
					}
				}
			},
			{
				"name": "SP-ActivitySuccess06",
				"description": "Activity success of delete trigger",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "DELETE_FILE_TRIGGERS",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": "DELETE_FILE_TRIGGERS",
							"type": "String"
						},
						"activity_status": {
							"value": {
								"value": "Successful",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].dataset_group",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-ActivityFailed06",
				"description": "Activity failing of delete trigger",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "DELETE_FILE_TRIGGERS",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": "DELETE_FILE_TRIGGERS",
							"type": "String"
						},
						"activity_status": {
							"value": {
								"value": "Failed",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].dataset_group",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_code": {
							"value": {
								"value": "N.A.",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_detail": {
							"value": {
								"value": "N.A.",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-PipelineStart",
				"description": "This Activity logs starting of pipeline in khc_audit_log table.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": {
								"value": "I",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@pipeline().parameters.ApplicationName",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@pipeline().parameters.dataset_group",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_name": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": {
								"value": "Processing",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "EP-Gold_DBT_Processing",
				"description": "Dbt process of gold tables",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "LU-Metadata_Dbt",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "EP-DBT_Processing",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "PL_KHCDE_GENERIC_DBTProcessing",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"ApplicationName": {
							"value": "@{activity('LU-Metadata_Dbt').output.value[0].application_name}",
							"type": "Expression"
						},
						"DatasetGroup": {
							"value": "@{activity('LU-Metadata_Dbt').output.value[0].dataset_group}",
							"type": "Expression"
						},
						"ParameterJson": {
							"value": "@{activity('LU-Metadata_Dbt').output.value[0].parameter_json}",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "LU-Metadata_Dbt",
				"description": "Lookup activity for gold dbt processing",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "EP_SFDC_DATA_Extract",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "select * from khc_orchestration_metadata where application_name = '@{pipeline().parameters.ApplicationName_dbt}' and dataset_group = '@{pipeline().parameters.dataset_group}' and active_ind = 'y'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_KHCDE_GENERIC_MSSQL_Metadata",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "SP-ActivitySuccess01",
				"description": "Success for lookup activity",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "LU-Metadata_Dbt",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": "LU-Metadata",
							"type": "String"
						},
						"activity_status": {
							"value": {
								"value": "Successful",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@activity('LU-Metadata_Dbt').output.value[0].application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU-Metadata_Dbt').output.value[0].dataset_group",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-ActivityFailed01",
				"description": "Failing activity for lookup",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "LU-Metadata_Dbt",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": "LU-Metadata",
							"type": "String"
						},
						"activity_status": {
							"value": {
								"value": "Failed",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@activity('LU-Metadata_Dbt').output.value[0].application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU-Metadata_Dbt').output.value[0].dataset_group",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_code": {
							"value": {
								"value": "N.A.",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_detail": {
							"value": {
								"value": "N.A.",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-ActivitySuccess05",
				"description": "Success activity for dbt process.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "FE-Metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": "EP_DBT_Processing",
							"type": "String"
						},
						"activity_status": {
							"value": {
								"value": "Successful",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@activity('LU-Metadata_Dbt').output.value[0].application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU-Metadata_Dbt').output.value[0].dataset_group",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-ActivityFailed05",
				"description": "Activity for failing of dbt process for gold.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "EP-Gold_DBT_Processing",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": "EP_DBT_Processing",
							"type": "String"
						},
						"activity_status": {
							"value": {
								"value": "Failed",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@activity('LU-Metadata_Dbt').output.value[0].application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU-Metadata_Dbt').output.value[0].dataset_group",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_code": {
							"value": {
								"value": "N.A.",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_detail": {
							"value": {
								"value": "N.A.",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "EP_SFDC_DATA_Extract",
				"description": "Used to extract SFDC data on daily basis",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "SP-PipelineStart",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "PL_KHCDE_MASTER_APAC_ANZ_SFDC_DATA_EXTRACT",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"application_name": "sfdc_master_data_retail",
						"dataset_name": "sfdc_sales"
					}
				}
			},
			{
				"name": "FE-Metadata",
				"description": "Loop through all the Datasets of SFDC",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "EP-Gold_DBT_Processing",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('LU-Metadata').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "GET_max_incr_value",
							"description": "capture max_incr_value of prev step and append Z in the end",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "FETCH_MAX_VALUE",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "GET_THE_EXT_DATE",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "max_incr_value",
								"value": {
									"value": "@if(equals(item().incr_column_name, 'LastModifiedDate'), concat(activity('FETCH_MAX_VALUE').output.firstRow.max_incr_value,'Z'), activity('FETCH_MAX_VALUE').output.firstRow.max_incr_value)",
									"type": "Expression"
								}
							}
						},
						{
							"name": "FETCH_MAX_VALUE",
							"description": "Fetch max value of incremental Column in the  table",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 5,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SalesforceSource",
									"query": {
										"value": "@{item().max_incr_value_query}",
										"type": "Expression"
									},
									"readBehavior": "query"
								},
								"dataset": {
									"referenceName": "DS_KHCDE_APAC_ANZ_SFDC_SOURCE",
									"type": "DatasetReference"
								}
							}
						},
						{
							"name": "UPDATE_INCR_LAST_VALUE",
							"description": "updating last_incr_value in extract_control table.",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "GET_max_incr_value",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 5,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[update_data_extract_last_incr_value]",
								"storedProcedureParameters": {
									"last_incr_value": {
										"value": {
											"value": "@variables('max_incr_value')",
											"type": "Expression"
										},
										"type": "String"
									},
									"parent_id": {
										"value": {
											"value": "@{item().parent_id}",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_SQL",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "GET_THE_EXT_DATE",
							"description": "Get the date of extraction in 'YYYYMMDD' format as in EST",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "extract_date",
								"value": {
									"value": "@{formatDateTime(convertTimeZone(utcNow(),'UTC','Eastern Standard Time'),'yyyyMMdd')}",
									"type": "Expression"
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"ApplicationName": {
				"type": "string",
				"defaultValue": "sfdc_master_data_retail"
			},
			"dataset_group": {
				"type": "string",
				"defaultValue": "sfdc_apac_anz_sales_daily"
			},
			"ApplicationName_dbt": {
				"type": "string",
				"defaultValue": "sales_management"
			}
		},
		"variables": {
			"exit": {
				"type": "String",
				"defaultValue": "N"
			},
			"adf_trigger_name": {
				"type": "String"
			},
			"max_incr_value": {
				"type": "String"
			},
			"extract_date": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Apac_Anz_sfdc"
		},
		"annotations": []
	}
}