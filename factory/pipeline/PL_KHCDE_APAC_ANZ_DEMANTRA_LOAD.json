{
	"name": "PL_KHCDE_APAC_ANZ_DEMANTRA_LOAD",
	"properties": {
		"description": "This pipeline is for data extraction from demantra integration to azure blob",
		"activities": [
			{
				"name": "ForEach2",
				"description": "ForEach2",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Application Name",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Application Name').output.value",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "LU-Metadata1",
							"description": "LU-Metadata1",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": {
										"value": "select * from khc_orchestration_metadata where application_name = '@{item().application_name}' and\n  active_ind = 'y' and data_level='2' and filename ='SQL'",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "DS_KHCDE_GENERIC_MSSQL_Metadata",
									"type": "DatasetReference"
								},
								"firstRowOnly": false
							}
						},
						{
							"name": "EP-SnowflakeIngestion",
							"description": "EP-SnowflakeIngestion",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "LU-Metadata1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "PL_KHCDE_GENERIC_SnowflakeIngestion",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"ApplicationName": {
										"value": "@{activity('LU-Metadata1').output.value[0].application_name}",
										"type": "Expression"
									},
									"DatasetGroup": {
										"value": "@{activity('LU-Metadata1').output.value[0].dataset_group}",
										"type": "Expression"
									},
									"ParameterJson": {
										"value": "@{activity('LU-Metadata1').output.value[0].parameter_json}",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "SP-PipelineStart_Master",
							"description": "SP-PipelineStart_Master",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "LU-Metadata1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 5,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
								"storedProcedureParameters": {
									"action_ind": {
										"value": {
											"value": "I",
											"type": "Expression"
										},
										"type": "String"
									},
									"application_name": {
										"value": {
											"value": "@{activity('LU-Metadata1').output.value[0].application_name}",
											"type": "Expression"
										},
										"type": "String"
									},
									"dataset_name": {
										"value": {
											"value": "@{activity('LU-Metadata1').output.value[0].dataset_group}",
											"type": "Expression"
										},
										"type": "String"
									},
									"pipeline_name": {
										"value": {
											"value": "@{pipeline().Pipeline}",
											"type": "Expression"
										},
										"type": "String"
									},
									"pipeline_run_id": {
										"value": {
											"value": "@{pipeline().RunId}",
											"type": "Expression"
										},
										"type": "String"
									},
									"pipeline_status": {
										"value": {
											"value": "Processing",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_SQL",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "SP-PipelineFailed_Master",
							"description": "SP-PipelineFailed_Master",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "EP-SnowflakeIngestion",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 5,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
								"storedProcedureParameters": {
									"action_ind": {
										"value": {
											"value": "U",
											"type": "Expression"
										},
										"type": "String"
									},
									"application_name": {
										"value": {
											"value": "@{activity('LU-Metadata1').output.value[0].application_name}",
											"type": "Expression"
										},
										"type": "String"
									},
									"dataset_name": {
										"value": {
											"value": "@{activity('LU-Metadata1').output.value[0].dataset_group}",
											"type": "Expression"
										},
										"type": "String"
									},
									"pipeline_name": {
										"value": {
											"value": "@{pipeline().Pipeline}",
											"type": "Expression"
										},
										"type": "String"
									},
									"pipeline_run_id": {
										"value": {
											"value": "@{pipeline().RunId}",
											"type": "Expression"
										},
										"type": "String"
									},
									"pipeline_status": {
										"value": {
											"value": "Failed",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_SQL",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "SP-PipelineSuccess_Master",
							"description": "SP-PipelineSuccess_Master",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "EP-SnowflakeIngestion",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 5,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
								"storedProcedureParameters": {
									"action_ind": {
										"value": {
											"value": "U",
											"type": "Expression"
										},
										"type": "String"
									},
									"application_name": {
										"value": {
											"value": "@{activity('LU-Metadata1').output.value[0].application_name}",
											"type": "Expression"
										},
										"type": "String"
									},
									"dataset_name": {
										"value": {
											"value": "@{activity('LU-Metadata1').output.value[0].dataset_group}",
											"type": "Expression"
										},
										"type": "String"
									},
									"pipeline_name": {
										"value": {
											"value": "@{pipeline().Pipeline}",
											"type": "Expression"
										},
										"type": "String"
									},
									"pipeline_run_id": {
										"value": {
											"value": "@{pipeline().RunId}",
											"type": "Expression"
										},
										"type": "String"
									},
									"pipeline_status": {
										"value": {
											"value": "Successful",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_SQL",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "WB-SendFailureEmail_master_SI",
							"description": "WB-SendFailureEmail_master_SI",
							"type": "WebActivity",
							"dependsOn": [
								{
									"activity": "SP-PipelineFailed_Master",
									"dependencyConditions": [
										"Completed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 5,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": {
									"value": "@pipeline().globalParameters.la_khcde_generic_email_url",
									"type": "Expression"
								},
								"method": "POST",
								"body": {
									"value": "{ \n       \"to_email\": \"@{if(equals(pipeline().globalParameters.AZURE_ENV,'PROD'),'DL_APAC_MiddlewareNotifications@kraftheinz.com;bfc2b500.Heinz365.onmicrosoft.com@amer.teams.ms','yatish.singla@kraftHeinz.com')}\", \n        \"subject\": \"@{pipeline().parameters.ApplicationName} Demand/Tradespend -Failure: DemantraIntegration Snowflake Ingestion Activity\", \n        \"body\": \"Dear All,<br><br>The APAC ANZ Data Load Process Failed for the Application: <b>@{pipeline().parameters.ApplicationName} Demand/Tradespend</b><br>Source: <b>DemantraIntegration</b><br>Error Note: <b>Snowflake Ingestion failed</b><br><br> Please find below the details: <br><br>    Pipeline Name: @{pipeline().Pipeline} <br> Pipeline Run ID: @{pipeline().RunId}<br> Pipeline Trigger Name: @{pipeline().TriggerName}<br> Pipeline Trigger Type: @{pipeline().TriggerType}<br> Pipeline Start Time: @{pipeline().TriggerTime}<br> Activity: LU-Metadata activity has failed.Please check the metadata<br>Parameters:<br>===========<br>Application Name: @{pipeline().parameters.ApplicationName}<br><br> <br><br>Please take care.<br><br>Regards,<br>Cloud Analytics Team\", \n        \"importance\": \"High\"\n}",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "Application Name",
				"description": "Application Name",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "If Condition2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "select distinct application_name from khc_orchestration_metadata where active_ind = 'y' and data_level=2 and dataset_group in ('demand_jda','tradespend_data') and filename ='SQL'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_KHCDE_GENERIC_MSSQL_Metadata",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "If Condition2",
				"description": "If Condition2",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Until1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(variables('control_value'), 'Y')",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Audit_Log_Data_Extraction_Failure_CT",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
								"storedProcedureParameters": {
									"action_ind": {
										"value": "U",
										"type": "String"
									},
									"activity_name": {
										"value": "Data_Extraction_SQL_to_BLOB",
										"type": "String"
									},
									"activity_status": {
										"value": "Failed",
										"type": "String"
									},
									"application_name": {
										"value": "Demand",
										"type": "String"
									},
									"dataset_name": {
										"type": "String"
									},
									"error_code": {
										"value": "1002",
										"type": "String"
									},
									"error_detail": {
										"value": "Data not available as per the demantra store procedure - DI_IntegrationBegin",
										"type": "String"
									},
									"pipeline_run_id": {
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										},
										"type": "String"
									},
									"pipeline_status": {
										"value": "Failed",
										"type": "String"
									},
									"skip_pipeline_audit_update": {
										"value": {
											"value": "N",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_SQL",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Failed copy activity",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Audit_Log_Data_Extraction_Failure_CT",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "DS_KHCDE_APAC_ANZ_SQL_TO_BLOB",
									"type": "DatasetReference",
									"parameters": {
										"cw_fileName": "dumy",
										"cw_containerName": "dumy",
										"cw_filePath": "dumy"
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DS_KHCDE_APAC_ANZ_SQL_TO_BLOB",
									"type": "DatasetReference",
									"parameters": {
										"cw_fileName": "dumy",
										"cw_containerName": "dumy",
										"cw_filePath": "dumy"
									}
								}
							]
						},
						{
							"name": "WB-SendFailureEmail_master_SP",
							"type": "WebActivity",
							"dependsOn": [
								{
									"activity": "Audit_Log_Data_Extraction_Failure_CT",
									"dependencyConditions": [
										"Completed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": {
									"value": "@pipeline().globalParameters.la_khcde_generic_email_url",
									"type": "Expression"
								},
								"method": "POST",
								"body": {
									"value": "{ \n        \"to_email\": \"@{if(equals(pipeline().globalParameters.AZURE_ENV,'PROD'),'DL_APAC_MiddlewareNotifications@kraftheinz.com;bfc2b500.Heinz365.onmicrosoft.com@amer.teams.ms','yatish.singla@kraftHeinz.com')}\", \n        \"subject\": \"@{pipeline().parameters.ApplicationName} Demand/Tradespend -Failure: DemantraIntegration Data Extraction Activity\", \n        \"body\": \"Dear All,<br><br>The APAC ANZ Data Load Process Failed for the Application: <b>@{pipeline().parameters.ApplicationName} Demand/Tradespend</b><br>Source: <b>DemantraIntegration</b><br>Error Note: As per SP DI_IntegrationBegin <b>Data Not available to extract</b><br><br> Please find below the details: <br><br>    Pipeline Name: @{pipeline().Pipeline} <br> Pipeline Run ID: @{pipeline().RunId}<br> Pipeline Trigger Name: @{pipeline().TriggerName}<br> Pipeline Trigger Type: @{pipeline().TriggerType}<br> Pipeline Start Time: @{pipeline().TriggerTime}<br> Activity: LU-Metadata activity has failed.Please check the metadata<br>Parameters:<br>===========<br>Application Name: @{pipeline().parameters.ApplicationName}<br><br> <br><br>Please take care.<br><br>Regards,<br>Cloud Analytics Team\", \n        \"importance\": \"High\"\n}",
									"type": "Expression"
								}
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "SP-PipelineEnd_Extract_sp",
							"description": "SP-PipelineEnd_Extract_sp",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "PL_KHDCE_APAC_ANZ_DEMANTRA_TO_BLOB",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
								"storedProcedureParameters": {
									"action_ind": {
										"value": {
											"value": "U",
											"type": "Expression"
										},
										"type": "String"
									},
									"application_name": {
										"value": "apac_anz_logistics",
										"type": "String"
									},
									"dataset_name": {
										"value": "DEMANTRA",
										"type": "String"
									},
									"pipeline_name": {
										"value": {
											"value": "@{pipeline().Pipeline}",
											"type": "Expression"
										},
										"type": "String"
									},
									"pipeline_run_id": {
										"value": {
											"value": "@{pipeline().RunId}",
											"type": "Expression"
										},
										"type": "String"
									},
									"pipeline_status": {
										"value": {
											"value": "Successful",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_SQL",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "PL_KHDCE_APAC_ANZ_DEMANTRA_TO_BLOB",
							"description": "PL_KHDCE_APAC_ANZ_DEMANTRA_TO_BLOB",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "Pre Demantra extract",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "PL_KHCDE_APAC_ANZ_DEMANTRA_TO_BLOB",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true
							}
						},
						{
							"name": "Audit_Log_Data_Extraction_Failure_CT_copy1",
							"description": "Audit_Log_Data_Extraction_Failure_CT_copy1",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "PL_KHDCE_APAC_ANZ_DEMANTRA_TO_BLOB",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
								"storedProcedureParameters": {
									"action_ind": {
										"value": "U",
										"type": "String"
									},
									"activity_name": {
										"value": "Data_Extraction_SQL_to_BLOB",
										"type": "String"
									},
									"activity_status": {
										"value": "Failed",
										"type": "String"
									},
									"application_name": {
										"value": "Demand",
										"type": "String"
									},
									"dataset_name": {
										"type": "String"
									},
									"error_code": {
										"value": "1001",
										"type": "String"
									},
									"error_detail": {
										"value": "Data Extraction failed from DemantraIntegration to BLOB",
										"type": "String"
									},
									"pipeline_run_id": {
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										},
										"type": "String"
									},
									"pipeline_status": {
										"value": "Failed",
										"type": "String"
									},
									"skip_pipeline_audit_update": {
										"value": {
											"value": "N",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_SQL",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "WB-SendFailureEmail_master_copy_activity",
							"description": "WB-SendFailureEmail_master_copy_activity",
							"type": "WebActivity",
							"dependsOn": [
								{
									"activity": "Audit_Log_Data_Extraction_Failure_CT_copy1",
									"dependencyConditions": [
										"Completed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": {
									"value": "@pipeline().globalParameters.la_khcde_generic_email_url",
									"type": "Expression"
								},
								"method": "POST",
								"body": {
									"value": "{ \n       \"to_email\": \"@{if(equals(pipeline().globalParameters.AZURE_ENV,'PROD'),'DL_APAC_MiddlewareNotifications@kraftheinz.com;bfc2b500.Heinz365.onmicrosoft.com@amer.teams.ms','yatish.singla@kraftHeinz.com')}\", \n        \"subject\": \"@{pipeline().parameters.ApplicationName} Demand/Tradespend -Failure: DemantraIntegration Data Extraction Activity\", \n        \"body\": \"Dear All,<br><br>The APAC ANZ Data Load Process Failed for the Application: <b>@{pipeline().parameters.ApplicationName} Demand/Tradespend </b><br>Source: <b>DemantraIntegration</b><br>Error Note: <b>Data Extraction activity failed</b> from DemantraIntegration to BLOB <br><br> Please find below the details: <br><br>Pipeline Name: @{pipeline().Pipeline} <br> Pipeline Run ID: @{pipeline().RunId}<br> Pipeline Trigger Name: @{pipeline().TriggerName}<br> Pipeline Trigger Type: @{pipeline().TriggerType}<br> Pipeline Start Time: @{pipeline().TriggerTime}<br> Activity: LU-Metadata activity has failed.Please check the metadata<br>Parameters:<br>===========<br>Application Name: @{pipeline().parameters.ApplicationName}<br><br> <br><br>Please take care.<br><br>Regards,<br>Cloud Analytics Team\", \n        \"importance\": \"High\"\n}",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Pre Demantra extract",
							"description": "setting  hz.batch_ts_fcst_ctl set LOCK_BATCH=1 ",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "OracleSource",
									"oracleReaderQuery": "select 1 as a from hz.batch_ts_fcst_ctl where 1=2",
									"partitionOption": "None",
									"queryTimeout": "02:00:00"
								},
								"sink": {
									"type": "OracleSink",
									"writeBatchSize": 10000,
									"preCopyScript": "update hz.batch_ts_fcst_ctl set LOCK_BATCH=1"
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "DS_KHCDE_APAC_ANZ_DEMANTRA_ORACLE",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "DS_KHCDE_APAC_ANZ_DEMANTRA_ORACLE",
									"type": "DatasetReference"
								}
							]
						},
						{
							"name": "Demantra extraction fail",
							"description": " hz.batch_ts_fcst_ctl set LOCK_BATCH=2",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "PL_KHDCE_APAC_ANZ_DEMANTRA_TO_BLOB",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "OracleSource",
									"oracleReaderQuery": "select 1 as a from hz.batch_ts_fcst_ctl where 1=2",
									"partitionOption": "None",
									"queryTimeout": "02:00:00"
								},
								"sink": {
									"type": "OracleSink",
									"writeBatchSize": 10000,
									"preCopyScript": "update hz.batch_ts_fcst_ctl set LOCK_BATCH=2"
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "DS_KHCDE_APAC_ANZ_DEMANTRA_ORACLE",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "DS_KHCDE_APAC_ANZ_DEMANTRA_ORACLE",
									"type": "DatasetReference"
								}
							]
						},
						{
							"name": "Demantra Extractio Success",
							"description": "hz.batch_ts_fcst_ctl set LAST_PROCESSED_DATE = current_timestamp at time zone 'Australia/Sydney',LOCK_BATCH=0",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "PL_KHDCE_APAC_ANZ_DEMANTRA_TO_BLOB",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "OracleSource",
									"oracleReaderQuery": "select 1 as a from hz.batch_ts_fcst_ctl where 1=2",
									"partitionOption": "None",
									"queryTimeout": "02:00:00"
								},
								"sink": {
									"type": "OracleSink",
									"writeBatchSize": 10000,
									"preCopyScript": "update hz.batch_ts_fcst_ctl set LAST_PROCESSED_DATE = cast ( from_tz( cast(current_timestamp as timestamp), 'CST' ) at time zone 'Australia/Sydney' as timestamp)\n,LOCK_BATCH=0"
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "DS_KHCDE_APAC_ANZ_DEMANTRA_ORACLE",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "DS_KHCDE_APAC_ANZ_DEMANTRA_ORACLE",
									"type": "DatasetReference"
								}
							]
						}
					]
				}
			},
			{
				"name": "SP-PipelineStart_Extract",
				"description": "SP-PipelineStart_Extract",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": {
								"value": "I",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": "apac_anz_logistics",
							"type": "String"
						},
						"dataset_name": {
							"value": "DEMANTRA",
							"type": "String"
						},
						"pipeline_name": {
							"value": {
								"value": "@{pipeline().Pipeline}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": {
								"value": "Processing",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Create Trigger",
				"description": "Create Trigger",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "ForEach2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": "select 1",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DS_KHCDE_GENERIC_MSSQL_Metadata",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "DS_KHCDE_APAC_ANZ_SQL_TO_BLOB",
						"type": "DatasetReference",
						"parameters": {
							"cw_fileName": "Trigger_sql.csv",
							"cw_containerName": "khc-enterprise-data",
							"cw_filePath": "logistics/demand_planning/apac_anz_demand/DEMANTRA/TRIGGER"
						}
					}
				]
			},
			{
				"name": "LU-Metadata",
				"description": "LU-Metadata",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "ForEach2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "select * from khc_orchestration_metadata where application_name in ('apac_anz_finance') and\n  active_ind = 'y' and data_level=2 and dataset_group = 'tradespend_data'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_KHCDE_GENERIC_MSSQL_Metadata",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "PL_KHCDE_GENERIC_DBTProcessing",
				"description": "PL_KHCDE_GENERIC_DBTProcessing",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "LU-Metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "PL_KHCDE_GENERIC_DBTProcessing",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"ApplicationName": {
							"value": "@{activity('LU-Metadata').output.value[0].application_name}",
							"type": "Expression"
						},
						"DatasetGroup": {
							"value": "@{activity('LU-Metadata').output.value[0].dataset_group}",
							"type": "Expression"
						},
						"ParameterJson": {
							"value": "@{activity('LU-Metadata').output.value[0].parameter_json}",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "SP-PipelineFailed_Master_dbt",
				"description": "SP-PipelineFailed_Master_dbt",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "PL_KHCDE_GENERIC_DBTProcessing",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": {
								"value": "U",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@{activity('LU-Metadata').output.value[0].application_name}",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@{activity('LU-Metadata').output.value[0].dataset_group}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_name": {
							"value": {
								"value": "@{pipeline().Pipeline}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": {
								"value": "Failed",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-PipelineStart_Master_dbt",
				"description": "SP-PipelineStart_Master_dbt",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "LU-Metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": {
								"value": "I",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@{activity('LU-Metadata').output.value[0].application_name}",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@{activity('LU-Metadata').output.value[0].dataset_group}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_name": {
							"value": {
								"value": "@{pipeline().Pipeline}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": {
								"value": "Processing",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-PipelineSuccess_Master_dbt",
				"description": "SP-PipelineSuccess_Master_dbt",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "PL_KHCDE_GENERIC_DBTProcessing",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": {
								"value": "U",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@{activity('LU-Metadata').output.value[0].application_name}",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@{activity('LU-Metadata').output.value[0].dataset_group}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_name": {
							"value": {
								"value": "@{pipeline().Pipeline}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": {
								"value": "Successful",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "WB-SendEmail_master_04_PL_Success",
				"description": "WB-SendEmail_master_04_PL_Success",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "ForEach2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@pipeline().globalParameters.la_khcde_generic_email_url",
						"type": "Expression"
					},
					"method": "POST",
					"body": {
						"value": "{ \n       \"to_email\": \"@{if(equals(pipeline().globalParameters.AZURE_ENV,'PROD'),'DL_APAC_MiddlewareNotifications@kraftheinz.com;bfc2b500.Heinz365.onmicrosoft.com@amer.teams.ms','yatish.singla@kraftHeinz.com')}\", \n        \"subject\": \"@{pipeline().parameters.ApplicationName} Demand/Tradespend- Success - DemantraIntegration -Data Extraction\", \n        \"body\": \"Dear All,<br><br>The APAC ANZ Data Load Process Succeeded for the Application: <b>@{pipeline().parameters.ApplicationName} Demand/Tradespend</b><br>Source: <b>DemantraIntegration</b><br> Please find below the details: <br><br> Pipeline Name: @{pipeline().Pipeline} <br> Pipeline Run ID: @{pipeline().RunId}<br><br> Pipeline Trigger Type: @{pipeline().TriggerType}<br> Pipeline Start Time: @{pipeline().TriggerTime}<br><br>Parameters:<br>===========<br>Application Name: @{pipeline().parameters.ApplicationName}<br><br>Regards,<br>Cloud Analytics Team\", \n        \"importance\": \"Low\"\n}",
						"type": "Expression"
					}
				}
			},
			{
				"name": "WB-SendEmail_master_04_PL_Success_dbt",
				"description": "WB-SendEmail_master_04_PL_Success_dbt",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "SP-PipelineSuccess_Master_dbt",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@pipeline().globalParameters.la_khcde_generic_email_url",
						"type": "Expression"
					},
					"method": "POST",
					"body": {
						"value": "{ \n       \"to_email\": \"@{if(equals(pipeline().globalParameters.AZURE_ENV,'PROD'),'DL_APAC_MiddlewareNotifications@kraftheinz.com;bfc2b500.Heinz365.onmicrosoft.com@amer.teams.ms','yatish.singla@kraftHeinz.com')}\", \n        \"subject\": \"@{pipeline().parameters.ApplicationName} Tradespend DBT - Success\", \n        \"body\": \"Dear All,<br><br>The APAC ANZ Data Load Process Succeeded for the Application: <b>@{pipeline().parameters.ApplicationName} Tradespend</b><br> Please find below the details: <br><br> Pipeline Name: @{pipeline().Pipeline} <br> Pipeline Run ID: @{pipeline().RunId}<br><br> Pipeline Trigger Type: @{pipeline().TriggerType}<br> Pipeline Start Time: @{pipeline().TriggerTime}<br><br>Parameters:<br>===========<br>Application Name: @{pipeline().parameters.ApplicationName}<br><br>Regards,<br>Cloud Analytics Team\", \n        \"importance\": \"Low\"\n}",
						"type": "Expression"
					}
				}
			},
			{
				"name": "WB-SendFailureEmail_master_SI_dbt",
				"description": "WB-SendFailureEmail_master_SI_dbt",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "SP-PipelineFailed_Master_dbt",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@pipeline().globalParameters.la_khcde_generic_email_url",
						"type": "Expression"
					},
					"method": "POST",
					"body": {
						"value": "{ \n       \"to_email\": \"@{if(equals(pipeline().globalParameters.AZURE_ENV,'PROD'),'DL_APAC_MiddlewareNotifications@kraftheinz.com;bfc2b500.Heinz365.onmicrosoft.com@amer.teams.ms','yatish.singla@kraftHeinz.com')}\", \n        \"subject\": \"@{pipeline().parameters.ApplicationName} Tradespend -Failure: DBT Activity\", \n        \"body\": \"Dear All,<br><br>The APAC ANZ Data Load Process Failed for the Application: <b>@{pipeline().parameters.ApplicationName} Tradespend</b><br>Error Note: <b>DBT Activity failed</b><br><br> Please find below the details: <br><br>    Pipeline Name: @{pipeline().Pipeline} <br> Pipeline Run ID: @{pipeline().RunId}<br> Pipeline Trigger Name: @{pipeline().TriggerName}<br> Pipeline Trigger Type: @{pipeline().TriggerType}<br> Pipeline Start Time: @{pipeline().TriggerTime}<br> Activity: LU-Metadata activity has failed.Please check the metadata<br>Parameters:<br>===========<br>Application Name: @{pipeline().parameters.ApplicationName}<br><br> <br><br>Please take care.<br><br>Regards,<br>Cloud Analytics Team\", \n        \"importance\": \"High\"\n}",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Until1",
				"description": "Until ",
				"type": "Until",
				"dependsOn": [
					{
						"activity": "SP-PipelineStart_Extract",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(variables('exit_ind'),'Y')",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Batch_ts_fcst_ctl",
							"description": "Batch_ts_fcst_ctl",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "OracleSource",
									"oracleReaderQuery": {
										"value": "select case when (last_update_date>last_processed_date) then 'Y'\nelse 'N' end as available from hz.batch_ts_fcst_ctl ",
										"type": "Expression"
									},
									"partitionOption": "None",
									"queryTimeout": "02:00:00"
								},
								"dataset": {
									"referenceName": "DS_KHCDE_APAC_ANZ_DEMANTRA_ORACLE",
									"type": "DatasetReference"
								},
								"firstRowOnly": true
							}
						},
						{
							"name": "Control Variable",
							"description": "Control Variable",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Batch_ts_fcst_ctl",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "control_value",
								"value": {
									"value": "@{activity('Batch_ts_fcst_ctl').output.firstRow.available}",
									"type": "Expression"
								}
							}
						},
						{
							"name": "If Condition1_1",
							"description": "If Condition1_1",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Control Variable",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@or(equals(activity('Batch_ts_fcst_ctl').output.firstRow.available,'Y'),equals(variables('retry_count'),'18'))",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "Wait1",
										"description": "Wait1",
										"type": "Wait",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"waitTimeInSeconds": {
												"value": "@int(600)",
												"type": "Expression"
											}
										}
									},
									{
										"name": "Set_retry_count_1",
										"description": "Set_retry_count_1",
										"type": "SetVariable",
										"dependsOn": [
											{
												"activity": "Wait1",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"userProperties": [],
										"typeProperties": {
											"variableName": "retry_count",
											"value": {
												"value": "@{add(int(variables('retry_count_temp')), 1)}",
												"type": "Expression"
											}
										}
									},
									{
										"name": "Set_retry_temp_1",
										"description": "Set_retry_temp_1",
										"type": "SetVariable",
										"dependsOn": [
											{
												"activity": "Set_retry_count_1",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"userProperties": [],
										"typeProperties": {
											"variableName": "retry_count_temp",
											"value": {
												"value": "@variables('retry_count')",
												"type": "Expression"
											}
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "Set_ext_ind_True_Y",
										"description": "Set_ext_ind_True_Y",
										"type": "SetVariable",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"variableName": "exit_ind",
											"value": "Y"
										}
									}
								]
							}
						}
					],
					"timeout": "7.00:00:00"
				}
			}
		],
		"parameters": {
			"ApplicationName": {
				"type": "string",
				"defaultValue": "APAC ANZ"
			}
		},
		"variables": {
			"env": {
				"type": "String",
				"defaultValue": "DEV"
			},
			"exit_ind": {
				"type": "String",
				"defaultValue": "N"
			},
			"retry_count": {
				"type": "String",
				"defaultValue": "0"
			},
			"retry_count_temp": {
				"type": "String",
				"defaultValue": "0"
			},
			"control_value": {
				"type": "String",
				"defaultValue": "N"
			}
		},
		"folder": {
			"name": "Apac_Anz"
		},
		"annotations": []
	}
}