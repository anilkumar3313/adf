{
	"name": "PL_KHCDE_IT4IT_MSAZURE_FILE_TRANSFER",
	"properties": {
		"description": "Pipeline to transfer MS Azure files from it4irmsazure location to the stage blob location and create triggers.",
		"activities": [
			{
				"name": "LU-Metadata",
				"description": "This activity will lookup orchestration table in SQL Server based on given application and dataset name",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "SP-PipelineStart_MSAZURE_FILE_TRANSFER",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "\nselect * from khc_orchestration_metadata where application_name = '@{pipeline().parameters.ApplicationName}' and dataset_group like '@{pipeline().parameters.DatasetGroup}'  and active_ind = 'y'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_KHCDE_GENERIC_MSSQL_Metadata",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Copy MSAzure files to Enterprise Blob",
				"description": "Copies the mszure files from it4itmsazure location to the stage blob location",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "If BLOB exists",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "BinarySource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"wildcardFolderPath": {
								"value": "@concat(activity('LU-Metadata').output.value[0].server_path,'KHAZ*/','202*/')",
								"type": "Expression"
							},
							"wildcardFileName": {
								"value": "@concat('*',activity('LU-Metadata').output.value[0].filename,'*')",
								"type": "Expression"
							},
							"deleteFilesAfterCompletion": false
						},
						"formatSettings": {
							"type": "BinaryReadSettings"
						}
					},
					"sink": {
						"type": "BinarySink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings",
							"copyBehavior": "FlattenHierarchy"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_FolderFile",
						"type": "DatasetReference",
						"parameters": {
							"container_name": {
								"value": "khc-enterprise-data",
								"type": "Expression"
							},
							"blob_name": {
								"value": "@concat(activity('LU-Metadata').output.value[0].server_path,'KHAZ*/','202*/')",
								"type": "Expression"
							},
							"file_name": {
								"value": "@concat('*',activity('LU-Metadata').output.value[0].filename,'*')",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
						"type": "DatasetReference",
						"parameters": {
							"container_name": {
								"value": "khc-enterprise-data",
								"type": "Expression"
							},
							"blob_name": {
								"value": "@activity('LU-Metadata').output.value[0].stage_blob_name\n",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Copy MSAzure files to Enterprise_archive_blob",
				"description": "Copies the mszure files from it4itmsazure location to the archive location and deleted the source files",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Copy MSAzure files to Enterprise Blob",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "BinarySource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"wildcardFolderPath": {
								"value": "@concat(activity('LU-Metadata').output.value[0].server_path,'KHAZ*/','202*/')",
								"type": "Expression"
							},
							"wildcardFileName": {
								"value": "@concat('*',activity('LU-Metadata').output.value[0].filename,'*')",
								"type": "Expression"
							},
							"deleteFilesAfterCompletion": true
						},
						"formatSettings": {
							"type": "BinaryReadSettings"
						}
					},
					"sink": {
						"type": "BinarySink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_FolderFile",
						"type": "DatasetReference",
						"parameters": {
							"container_name": {
								"value": "khc-enterprise-data",
								"type": "Expression"
							},
							"blob_name": {
								"value": "@concat(activity('LU-Metadata').output.value[0].server_path,'KHAZ*/','202*/')",
								"type": "Expression"
							},
							"file_name": {
								"value": "@concat('*',activity('LU-Metadata').output.value[0].filename,'*')",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
						"type": "DatasetReference",
						"parameters": {
							"container_name": {
								"value": "khc-enterprise-data",
								"type": "Expression"
							},
							"blob_name": {
								"value": "@replace(activity('LU-Metadata').output.value[0].archival_blob_name,'yyyyMMdd',formatDateTime(utcNow(),'yyyyMMdd'))",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "If BLOB exists",
				"description": "If condition for deleting the stage blob if it exists",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "msazure_stage_blob",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@greater(string(length(activity('msazure_stage_blob').output.childItems)),'0')",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Delete existing Stage",
							"description": "This activity deletes the stage blob",
							"type": "Delete",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 5,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_FolderFile",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "@activity('LU-Metadata').output.value[0].container_name",
											"type": "Expression"
										},
										"blob_name": {
											"value": "@activity('LU-Metadata').output.value[0].stage_blob_name",
											"type": "Expression"
										},
										"file_name": {
											"value": "@activity('LU-Metadata').output.value[0].data_filename",
											"type": "Expression"
										}
									}
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@{activity('LU-Metadata').output.value[0].data_filename}",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "msazure_stage_blob",
				"description": "Check for the msazure stage blob",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "LU-Metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_FolderFile",
						"type": "DatasetReference",
						"parameters": {
							"container_name": "khc-enterprise-data",
							"blob_name": {
								"value": "@activity('LU-Metadata').output.value[0].stage_blob_name",
								"type": "Expression"
							},
							"file_name": {
								"value": "@activity('LU-Metadata').output.value[0].data_filename",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			},
			{
				"name": "Trigger Creation",
				"description": "Activity to create a trigger for IT4IT MASTER POOL LOAD pipeline",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Copy MSAzure files to Enterprise_archive_blob",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": "select 'msazure_trigger';",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "DS_KHCDE_GENERIC_MSSQL_Metadata",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "DS_KHCDE_GENERIC_DATAFLOW_BLOB_FolderFile",
						"type": "DatasetReference",
						"parameters": {
							"container_name": "khc-enterprise-data",
							"blob_name": "it4it/triggers/",
							"file_name": {
								"value": "@split(activity('LU-Metadata').output.value[0].blob_trigger_name,'/')[2]",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "SP-PipelineStart_MSAZURE_FILE_TRANSFER",
				"description": "This pipeline will load Information Technology Vendor data to Snowflake",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": "I",
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@{pipeline().parameters.ApplicationName}",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@{pipeline().parameters.DatasetGroup}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_name": {
							"value": {
								"value": "@{pipeline().Pipeline}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": "Processing",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-PipelineEnd_MSAZURE_FILE_TRANSFER",
				"description": "This activity will log final SUCCESS message into SQL Server logs folder for pipeline Success",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Trigger Creation",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": "U",
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].dataset_group",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_name": {
							"value": {
								"value": "@{pipeline().Pipeline}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": "Successful",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Copy MSAzure files to Enterprise Blob_And_Create_Stage",
				"description": "Copies the mszure files from it4itmsazure location to the stage blob location",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "msazure_stage_blob",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "BinarySource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"wildcardFolderPath": {
								"value": "@concat(activity('LU-Metadata').output.value[0].server_path,'KHAZ*/','202*/')",
								"type": "Expression"
							},
							"wildcardFileName": {
								"value": "@concat('*',activity('LU-Metadata').output.value[0].filename,'*')",
								"type": "Expression"
							},
							"deleteFilesAfterCompletion": false
						},
						"formatSettings": {
							"type": "BinaryReadSettings"
						}
					},
					"sink": {
						"type": "BinarySink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings",
							"copyBehavior": "FlattenHierarchy"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_FolderFile",
						"type": "DatasetReference",
						"parameters": {
							"container_name": {
								"value": "khc-enterprise-data",
								"type": "Expression"
							},
							"blob_name": {
								"value": "@concat(activity('LU-Metadata').output.value[0].server_path,'KHAZ*/','202*/')",
								"type": "Expression"
							},
							"file_name": {
								"value": "@concat('*',activity('LU-Metadata').output.value[0].filename,'*')",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
						"type": "DatasetReference",
						"parameters": {
							"container_name": {
								"value": "khc-enterprise-data",
								"type": "Expression"
							},
							"blob_name": {
								"value": "@activity('LU-Metadata').output.value[0].stage_blob_name\n",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Copy MSAzure files to Enterprise_archive_blob_2",
				"description": "Copies the mszure files from it4itmsazure location to the archive location and deleted the source files",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Copy MSAzure files to Enterprise Blob_And_Create_Stage",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "BinarySource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"wildcardFolderPath": {
								"value": "@concat(activity('LU-Metadata').output.value[0].server_path,'KHAZ*/','202*/')",
								"type": "Expression"
							},
							"wildcardFileName": {
								"value": "@concat('*',activity('LU-Metadata').output.value[0].filename,'*')",
								"type": "Expression"
							},
							"deleteFilesAfterCompletion": true
						},
						"formatSettings": {
							"type": "BinaryReadSettings"
						}
					},
					"sink": {
						"type": "BinarySink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_FolderFile",
						"type": "DatasetReference",
						"parameters": {
							"container_name": {
								"value": "khc-enterprise-data",
								"type": "Expression"
							},
							"blob_name": {
								"value": "@concat(activity('LU-Metadata').output.value[0].server_path,'KHAZ*/','202*/')",
								"type": "Expression"
							},
							"file_name": {
								"value": "@concat('*',activity('LU-Metadata').output.value[0].filename,'*')",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
						"type": "DatasetReference",
						"parameters": {
							"container_name": {
								"value": "khc-enterprise-data",
								"type": "Expression"
							},
							"blob_name": {
								"value": "@replace(activity('LU-Metadata').output.value[0].archival_blob_name,'yyyyMMdd',formatDateTime(utcNow(),'yyyyMMdd'))",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Trigger Creation_In_Stage",
				"description": "Activity to create a trigger for IT4IT MASTER POOL LOAD pipeline",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Copy MSAzure files to Enterprise_archive_blob_2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": "select 'msazure_trigger';",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "DS_KHCDE_GENERIC_MSSQL_Metadata",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "DS_KHCDE_GENERIC_DATAFLOW_BLOB_FolderFile",
						"type": "DatasetReference",
						"parameters": {
							"container_name": "khc-enterprise-data",
							"blob_name": "it4it/triggers/",
							"file_name": {
								"value": "@split(activity('LU-Metadata').output.value[0].blob_trigger_name,'/')[2]",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "SP-PipelineEnd_MSAZURE_FILE_TRANSFER_Blob_Creation",
				"description": "This activity will log final Failure of stage activity message into SQL Server logs folder for pipeline Success",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Trigger Creation_In_Stage",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": "U",
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].dataset_group",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_name": {
							"value": {
								"value": "@{pipeline().Pipeline}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": "Failed (Stage created and file copied)",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"ApplicationName": {
				"type": "string",
				"defaultValue": "it4it"
			},
			"DatasetGroup": {
				"type": "string"
			}
		},
		"folder": {
			"name": "IT4IT"
		},
		"annotations": []
	}
}