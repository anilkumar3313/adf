{
	"name": "PL_KHCDE_US_SALES_UNTILTRIGGERFOUND",
	"properties": {
		"description": "Pipeline to Check presence of Trigger File",
		"activities": [
			{
				"name": "LU-Metadata",
				"description": "This fetches all entries from orchestration metadata for all parent and dependent ids",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "SP-PipelineStart",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "select dep.container_name, dep.application_name, dep.dataset_name, coalesce(dep.@{pipeline().parameters.trigger_type},'NULL') as trigger_path_name, dep.parent_id, dep.dependent_id,\ncount(dep.parent_id) over (partition by base.application_name,base.dataset_name) count_of_dependent_files\nfrom khcde_metadata.dbo.khc_orchestration_metadata base\nleft join (\n\t\t\tselect distinct source.container_name,source.application_name, source.dataset_name,ref.parent_id, source.parent_id as dependent_id, source.@{pipeline().parameters.trigger_type}\n\t\t\tfrom khcde_metadata.dbo.khc_orchestration_metadata source\n\t\t\tinner join\n\t\t    \t( select distinct application_name, parent_id, replace(value,'\"','') dependent_id, @{pipeline().parameters.trigger_type} \n            \tfrom khcde_metadata.dbo.khc_orchestration_metadata \n            \tcross apply STRING_SPLIT(dependent_id,',') \n            \twhere application_name='@{pipeline().parameters.ApplicationName}' \n            \tand active_ind = 'y'\n            \t) ref\n            on source.parent_id=ref.dependent_id\n            where source.active_ind='y' \n            ) dep \non base.parent_id = dep.parent_id\nwhere base.active_ind = 'y' \nand base.parent_id = '@{pipeline().parameters.parent_id}'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_KHCDE_GENERIC_MSSQL_Metadata",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "IF-NotAllTriggersExists",
				"description": "Control statement to check all trigger exists or not",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "FE-Metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@not(equals(variables('count_files') , string(activity('LU-Metadata').output.value[0].count_of_dependent_files)))",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "CP-RaiseErrorForNextTry",
							"description": "Raises Error",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Wait-Loop",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 5,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BinarySource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true
									},
									"formatSettings": {
										"type": "BinaryReadSettings"
									}
								},
								"sink": {
									"type": "BinarySink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "doesNotExist_Input",
											"type": "Expression"
										},
										"blob_name": {
											"value": "doesNotExist_Input",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "doesNotExist_Output",
											"type": "Expression"
										},
										"blob_name": {
											"value": "doesNotExist_Output",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Wait-Loop",
							"description": "Enforces Wait",
							"type": "Wait",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"waitTimeInSeconds": 1800
							}
						}
					]
				}
			},
			{
				"name": "FE-Metadata",
				"description": "For each entry in metadata inner activities are executed",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "LU-Metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('LU-Metadata').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "GM-TriggerFiles",
							"description": "Get Details of File",
							"type": "GetMetadata",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 5,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_FolderFile",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "@{item().container_name}",
											"type": "Expression"
										},
										"blob_name": {
											"value": "@if(contains(item().trigger_path_name, '/'), substring(item().trigger_path_name, 0, lastIndexOf(item().trigger_path_name, '/')),'sales/triggers_not_found')",
											"type": "Expression"
										},
										"file_name": {
											"value": "@if(contains(item().trigger_path_name, '/'), split(item().trigger_path_name, '/')[sub(length(split(item().trigger_path_name, '/')),1)],item().trigger_path_name)",
											"type": "Expression"
										}
									}
								},
								"fieldList": [
									"exists"
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							}
						},
						{
							"name": "IF-TriggerFilesExists",
							"description": "Checks if Trigger File is Present or not",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "GM-TriggerFiles",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@activity('GM-TriggerFiles').output.exists",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "SV-CountFiles",
										"description": "Increment's variable",
										"type": "SetVariable",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"variableName": "count_files",
											"value": {
												"value": "@{string(add(int(variables('count_files_temp')), 1))}",
												"type": "Expression"
											}
										}
									},
									{
										"name": "SV-CountFilesTemp",
										"description": "Set's Variable",
										"type": "SetVariable",
										"dependsOn": [
											{
												"activity": "SV-CountFiles",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"userProperties": [],
										"typeProperties": {
											"variableName": "count_files_temp",
											"value": {
												"value": "@variables('count_files')",
												"type": "Expression"
											}
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "SP-PipelineStart",
				"description": "This Activity logs starting of pipeline in khc_audit_logÂ table.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": {
								"value": "I",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@{pipeline().parameters.ApplicationName}",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@{pipeline().parameters.BlobTriggerName}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_name": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": {
								"value": "Until Trigger Started",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-PipelineSuccess01",
				"description": "This Activity logs completion of pipeline in khc_audit_log table.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "IF-NotAllTriggersExists",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": {
								"value": "U",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@{pipeline().parameters.ApplicationName}",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@{pipeline().parameters.BlobTriggerName}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_name": {
							"value": {
								"value": "@{pipeline().Pipeline}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": {
								"value": "Successful",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-ActivityAndPipelineFailed01",
				"description": "This activity logs failure of LU-Metadata activity in khc_audit_log_detail table and failure of pipeline in  khc_audit_log table.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "IF-NotAllTriggersExists",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": {
								"value": "AF-UntillTriggerFound",
								"type": "Expression"
							},
							"type": "String"
						},
						"activity_status": {
							"value": {
								"value": "Failed",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@{pipeline().parameters.ApplicationName}",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@{pipeline().parameters.BlobTriggerName}",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_code": {
							"value": {
								"value": "N.A.",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_detail": {
							"value": {
								"value": "N.A.",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"ApplicationName": {
				"type": "string"
			},
			"BlobTriggerName": {
				"type": "string"
			},
			"pipeline_run_id": {
				"type": "string"
			},
			"parent_id": {
				"type": "string"
			},
			"trigger_type": {
				"type": "string"
			}
		},
		"variables": {
			"count_files": {
				"type": "String",
				"defaultValue": "0"
			},
			"count_files_temp": {
				"type": "String",
				"defaultValue": "0"
			}
		},
		"folder": {
			"name": "US_Sales"
		},
		"annotations": []
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}