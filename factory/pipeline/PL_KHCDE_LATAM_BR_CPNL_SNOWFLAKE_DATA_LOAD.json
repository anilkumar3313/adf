{
	"name": "PL_KHCDE_LATAM_BR_CPNL_SNOWFLAKE_DATA_LOAD",
	"properties": {
		"description": "LATAM CPNL pipeline to load golas and actuals/pvm  data  into snowflake and dbt processing for latam pvm ",
		"activities": [
			{
				"name": "LU-Orchestration_Metadata",
				"description": "This activity will look up the metadata for executing the DBT processing pipeline",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "SP-PipelineStart_Master",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "select * from khc_orchestration_metadata where application_name = '@{pipeline().parameters.ApplicationName}' and dataset_group = '@{replace( pipeline().parameters.Trigger_File_Name, '.txt','' )}' and active_ind = 'y'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_KHCDE_GENERIC_MSSQL_Metadata",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "SP-PipelineStart_Master",
				"description": "This activity creates an audit entry in the audit log at the start of Pipeline.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "set_email_logic_app_variable",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": {
								"value": "I",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@pipeline().parameters.ApplicationName",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@pipeline().parameters.Trigger_File_Name",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_name": {
							"value": {
								"value": "@{pipeline().Pipeline}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": {
								"value": "Processing",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "EP-SnowflakeIngestion",
				"description": "Execution of Snowflake data ingestion activity",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "If Condition",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "PL_KHCDE_GENERIC_SnowflakeIngestion",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"ApplicationName": {
							"value": "@activity('LU-Orchestration_Metadata').output.value[0].application_name",
							"type": "Expression"
						},
						"DatasetGroup": {
							"value": "@activity('LU-Orchestration_Metadata').output.value[0].dataset_group",
							"type": "Expression"
						},
						"ParameterJson": {
							"value": "@activity('LU-Orchestration_Metadata').output.value[0].parameter_json",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "SP-EP-SnowflakeIngestion-Sucess",
				"description": "This activity will write a success activity log.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "EP-SnowflakeIngestion",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": {
								"value": "EP-SnowflakeIngestion",
								"type": "Expression"
							},
							"type": "String"
						},
						"activity_status": {
							"value": {
								"value": "Successful",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@{pipeline().parameters.ApplicationName}",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU-Orchestration_Metadata').output.value[0].dataset_group",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-EP-SnowflakeIngestion-Failure",
				"description": "This activity will write the EP-Snowflake Ingestion failure activity log",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "EP-SnowflakeIngestion",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": "U",
							"type": "String"
						},
						"activity_name": {
							"value": {
								"value": "EP-SnowflakeIngestion",
								"type": "Expression"
							},
							"type": "String"
						},
						"activity_status": {
							"value": {
								"value": "Failed",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@pipeline().parameters.ApplicationName",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU-Orchestration_Metadata').output.value[0].dataset_group",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": {
								"value": "Failed ",
								"type": "Expression"
							},
							"type": "String"
						},
						"skip_pipeline_audit_update": {
							"value": "N",
							"type": "String"
						},
						"error_code": {
							"value": {
								"value": "@activity('EP-SnowflakeIngestion').Error.errorCode",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_detail": {
							"value": {
								"value": "@activity('EP-SnowflakeIngestion').Error.message",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "LU-Orchestration-metadata-failure-Email",
				"description": "This activity will send Orchestration failure email communication",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "SP-LU-Orchestration-metadata-failure",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@variables('logicapp_url')",
						"type": "Expression"
					},
					"method": "POST",
					"body": {
						"value": "{ \n        \"to_email\": \"Brazil.Analytics@kraftheinz.com\", \n        \"subject\": \"CPNL Cloud Data Load Process failed\", \n        \"body\": \"CPNL Cloud Data Load Process failed. Please check the pipeline\", \n        \"importance\": \"High\"\n} ",
						"type": "Expression"
					}
				}
			},
			{
				"name": "SP-LU-Orchestration-metadata-failure",
				"description": "This activity will write the LU orchestration failure activity log",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "LU-Orchestration_Metadata",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": "U",
							"type": "String"
						},
						"activity_name": {
							"value": {
								"value": "LU_Orchestration_Metadata",
								"type": "Expression"
							},
							"type": "String"
						},
						"activity_status": {
							"value": {
								"value": "Failed",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@pipeline().parameters.ApplicationName",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU-Orchestration_Metadata').output.value[0].dataset_group",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": {
								"value": "Failed ",
								"type": "Expression"
							},
							"type": "String"
						},
						"skip_pipeline_audit_update": {
							"value": "N",
							"type": "String"
						},
						"error_code": {
							"value": {
								"value": "@activity('LU-Orchestration_Metadata').Error.errorCode",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_detail": {
							"value": {
								"value": "@activity('LU-Orchestration_Metadata').Error.errorCode",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-LU-Orchestration-metadata-Success",
				"description": "This activity will write LU-Orchestration-metadata-Success  Processing success  activity log",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "LU-Orchestration_Metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": {
								"value": "LU-Orchestration_Metadata",
								"type": "Expression"
							},
							"type": "String"
						},
						"activity_status": {
							"value": {
								"value": "Successful",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@{pipeline().parameters.ApplicationName}",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU-Orchestration_Metadata').output.value[0].dataset_group",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "set_email_logic_app_variable",
				"description": "Set the logic app URL from Global Param",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "set_env_variable",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "logicapp_url",
					"value": {
						"value": "@pipeline().globalParameters.la_khcde_generic_email_url",
						"type": "Expression"
					}
				}
			},
			{
				"name": "set_env_variable",
				"description": "Set the variable - ENV from global parameters - AZURE_ENV",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "SP-PipelineStart",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "env",
					"value": {
						"value": "@pipeline().globalParameters.AZURE_ENV",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Check_Pvm_DBT_Processing",
				"description": "check if dataset starts with latam_pvm then perform dbt processing else nothing",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Check_And_Delete",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@startswith(activity('LU-Orchestration_Metadata').output.value[0].dataset_group,'latam_pvm')",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "PipelineComplettionSuccessEmailSender",
							"description": "This activity will send pipeline completion email communication",
							"type": "WebActivity",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": {
									"value": "@variables('logicapp_url')",
									"type": "Expression"
								},
								"method": "POST",
								"body": {
									"value": "{ \n        \"to_email\": \"Brazil.Analytics@kraftheinz.com\", \n        \"subject\": \"CPNL Cloud Data Load Process Completed\", \n        \"body\": \"CPNL Cloud Data Load Process Completed. Please check the pipeline\", \n        \"importance\": \"High\"\n} ",
									"type": "Expression"
								}
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "EP-DBT_Processing",
							"description": "Execution of DBT Processing activity",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "PL_KHCDE_GENERIC_DBTProcessing",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"ApplicationName": {
										"value": "@activity('LU-Orchestration_Metadata').output.value[0].application_name",
										"type": "Expression"
									},
									"DatasetGroup": {
										"value": "@activity('LU-Orchestration_Metadata').output.value[0].dataset_group",
										"type": "Expression"
									},
									"ParameterJson": {
										"value": "@activity('LU-Orchestration_Metadata').output.value[0].parameter_json",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "SP-EP-DBT_Processing-Success",
							"description": "This activity will write the DBT Processing success  activity log",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "EP-DBT_Processing",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 5,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[generic_activity_audit_log]",
								"storedProcedureParameters": {
									"activity_name": {
										"value": {
											"value": "EP-DBT_Processing",
											"type": "Expression"
										},
										"type": "String"
									},
									"activity_status": {
										"value": {
											"value": "Successful",
											"type": "Expression"
										},
										"type": "String"
									},
									"application_name": {
										"value": {
											"value": "@{pipeline().parameters.ApplicationName}",
											"type": "Expression"
										},
										"type": "String"
									},
									"dataset_name": {
										"value": {
											"value": "@activity('LU-Orchestration_Metadata').output.value[0].dataset_group",
											"type": "Expression"
										},
										"type": "String"
									},
									"pipeline_run_id": {
										"value": {
											"value": "@{pipeline().RunId}",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_SQL",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "SP-EP-DBT_Processing-Failure",
							"description": "This activity will write the DBT Processing failure activity log",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "EP-DBT_Processing",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 5,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
								"storedProcedureParameters": {
									"action_ind": {
										"value": "U",
										"type": "String"
									},
									"activity_name": {
										"value": {
											"value": "EP-DBT_Processing",
											"type": "Expression"
										},
										"type": "String"
									},
									"activity_status": {
										"value": {
											"value": "Failed",
											"type": "Expression"
										},
										"type": "String"
									},
									"application_name": {
										"value": {
											"value": "@pipeline().parameters.ApplicationName",
											"type": "Expression"
										},
										"type": "String"
									},
									"dataset_name": {
										"value": {
											"value": "@activity('LU-Orchestration_Metadata').output.value[0].dataset_group",
											"type": "Expression"
										},
										"type": "String"
									},
									"pipeline_run_id": {
										"value": {
											"value": "@{pipeline().RunId}",
											"type": "Expression"
										},
										"type": "String"
									},
									"pipeline_status": {
										"value": {
											"value": "Failed ",
											"type": "Expression"
										},
										"type": "String"
									},
									"skip_pipeline_audit_update": {
										"value": "N",
										"type": "String"
									},
									"error_code": {
										"value": {
											"value": "@activity('EP-DBT_Processing').Error.errorCode",
											"type": "Expression"
										},
										"type": "String"
									},
									"error_detail": {
										"value": {
											"value": "@activity('EP-DBT_Processing').Error.message",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_SQL",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "PipelineComplettionSuccessEmailSender_copy1",
							"description": "This activity will send pipeline completion email communication",
							"type": "WebActivity",
							"dependsOn": [
								{
									"activity": "SP-EP-DBT_Processing-Success",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 5,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": {
									"value": "@variables('logicapp_url')",
									"type": "Expression"
								},
								"method": "POST",
								"body": {
									"value": "{ \n        \"to_email\": \"DL_KHC_LATAM_SNF_INGESTIONS@kraftheinz.com\", \n        \"subject\": \"LATAM PVM DBT Data Load Process Completed\", \n        \"body\": \"LATAM PVM DBT  Process Completed. Please check the pipeline\", \n        \"importance\": \"Low\"\n} ",
									"type": "Expression"
								}
							}
						},
						{
							"name": "EP-DBT_Processing-Failure-Email",
							"description": "This activity will send DBT Processing failure email communication",
							"type": "WebActivity",
							"dependsOn": [
								{
									"activity": "SP-EP-DBT_Processing-Failure",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 5,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": {
									"value": "@variables('logicapp_url')",
									"type": "Expression"
								},
								"method": "POST",
								"body": {
									"value": "{ \n        \"to_email\": \"DL_KHC_LATAM_SNF_INGESTIONS@kraftheinz.com\", \n        \"subject\": \"LATAM PVM DBT Data Load Process Failed  \", \n        \"body\": \"LATAM PVM DBT  Process Failed . Please check the pipeline\", \n        \"importance\": \"High\"\n} ",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "Check_Trigger_Location",
				"description": "Check Trigger Location Exists and get File Count",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "EP-SnowflakeIngestion",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DS_KHCDE_CPNL_BLOB_BINARY_Folder",
						"type": "DatasetReference",
						"parameters": {
							"container_name": {
								"value": "@activity('LU-Orchestration_Metadata').output.value[0].container_name",
								"type": "Expression"
							},
							"blob_name": {
								"value": "@activity('LU-Orchestration_Metadata').output.value[0].blob_trigger_name",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"exists",
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			},
			{
				"name": "Check_And_Delete",
				"description": "Check if Files Exists in Stage and then Delete",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Check_Trigger_Location",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@and(not(equals(if(activity('Check_Trigger_Location').output.exists,string(length(activity('Check_Trigger_Location').output.childItems)),'0'),'0')),startswith(activity('LU-Orchestration_Metadata').output.value[0].dataset_group,'latam_pvm'))",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "DELETE_STAGE_FILES",
							"description": "CPNL Delete stage file ",
							"type": "Delete",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 5,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "@activity('LU-Orchestration_Metadata').output.value[0].container_name",
											"type": "Expression"
										},
										"blob_name": {
											"value": "@activity('LU-Orchestration_Metadata').output.value[0].blob_trigger_name",
											"type": "Expression"
										}
									}
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false
								}
							}
						},
						{
							"name": "Audit_Log_Delete_Stage_Success",
							"description": "This activity logs success status of  Data Extract in khc_audit_log_detail table.",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "DELETE_STAGE_FILES",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 5,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[generic_activity_audit_log]",
								"storedProcedureParameters": {
									"activity_name": {
										"value": {
											"value": "DELETE_STAGE_FILES",
											"type": "Expression"
										},
										"type": "String"
									},
									"activity_status": {
										"value": {
											"value": "Successful",
											"type": "Expression"
										},
										"type": "String"
									},
									"application_name": {
										"value": {
											"value": "@activity('LU-Orchestration_Metadata').output.value[0].application_name\n",
											"type": "Expression"
										},
										"type": "String"
									},
									"dataset_name": {
										"value": {
											"value": "@activity('LU-Orchestration_Metadata').output.value[0].dataset_name",
											"type": "Expression"
										},
										"type": "String"
									},
									"pipeline_run_id": {
										"value": {
											"value": "@{pipeline().RunId}",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_SQL",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Audit_Log_Delete_Stage_Failure",
							"description": "Updates the khc_audit_log and khc_error_log tables",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "DELETE_STAGE_FILES",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 5,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
								"storedProcedureParameters": {
									"activity_name": {
										"value": {
											"value": "DELETE_STAGE_FILES",
											"type": "Expression"
										},
										"type": "String"
									},
									"activity_status": {
										"value": {
											"value": "Failed",
											"type": "Expression"
										},
										"type": "String"
									},
									"application_name": {
										"value": {
											"value": "@activity('LU-Orchestration_Metadata').output.value[0].application_name",
											"type": "Expression"
										},
										"type": "String"
									},
									"dataset_name": {
										"value": {
											"value": "@activity('LU-Orchestration_Metadata').output.value[0].dataset_name",
											"type": "Expression"
										},
										"type": "String"
									},
									"error_code": {
										"value": {
											"value": "@activity('DELETE_STAGE_FILES').Error.errorCode",
											"type": "Expression"
										},
										"type": "String"
									},
									"error_detail": {
										"value": {
											"value": "@activity('DELETE_STAGE_FILES').Error.message",
											"type": "Expression"
										},
										"type": "String"
									},
									"pipeline_run_id": {
										"value": {
											"value": "@{pipeline().RunId}",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_SQL",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "SP-Pipelinesuccesful_master_pool_with_week_check",
				"description": "LATAM PVM master pool pipeline successful ",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Check_Pvm_DBT_Processing",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": "U",
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@activity('LU-Orchestration_Metadata').output.value[0].application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU-Orchestration_Metadata').output.value[0].dataset_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_name": {
							"value": {
								"value": "@{pipeline().Pipeline}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": {
								"value": "Successful",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-SnowflakePipelineFailed",
				"description": "Snowflake ingestion failed and pipeline Failed",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "SP-EP-SnowflakeIngestion-Failure",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": {
								"value": "U",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@activity('LU-Orchestration_Metadata').output.value[0].application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU-Orchestration_Metadata').output.value[0].dataset_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_name": {
							"value": {
								"value": "@{pipeline().Pipeline}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": {
								"value": "Failed",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-PipelineStart",
				"description": "This Activity logs starting of pipeline in khc_audit_log table.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": "I",
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@pipeline().parameters.ApplicationName",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@replace(pipeline().parameters.Trigger_File_Name,'_trigger.txt','') ",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_name": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": {
								"value": "Processing",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SFK_ingestion-failure-Email",
				"description": "This activity will SFK ingestion failure email communication",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "EP-SnowflakeIngestion",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@variables('logicapp_url')",
						"type": "Expression"
					},
					"method": "POST",
					"body": {
						"value": "{ \n        \"to_email\": \"Brazil.Analytics@kraftheinz.com\", \n        \"subject\": \"CPNL Cloud Data Load Process failed\", \n        \"body\": \"CPNL Cloud Data Load Process failed. Please check the pipeline PL_KHCDE_LATAM_BR_CPNL_SNOWFLAKE_DATA_LOAD\", \n        \"importance\": \"High\"\n} ",
						"type": "Expression"
					}
				}
			},
			{
				"name": "If Condition",
				"description": "Checks if the dataset group starts with latam_pvm",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "SP-LU-Orchestration-metadata-Success",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@startswith(activity('LU-Orchestration_Metadata').output.value[0].dataset_group,'latam_pvm')",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Delete files from stage",
							"description": "delete stage files that are older than today",
							"type": "Delete",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 5,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "DS_KHCDE_GENERIC_BLOB_CSV_Folder",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "@activity('LU-Orchestration_Metadata').output.value[0].container_name",
											"type": "Expression"
										},
										"blob_name": {
											"value": "@activity('LU-Orchestration_Metadata').output.value[0].stage_blob_name",
											"type": "Expression"
										},
										"field_delimiter": ";"
									}
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"modifiedDatetimeEnd": {
										"value": "@getPastTime(6,'Hour' )\n",
										"type": "Expression"
									},
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								}
							}
						}
					]
				}
			}
		],
		"concurrency": 1,
		"parameters": {
			"ApplicationName": {
				"type": "string",
				"defaultValue": "latam_br_cpnl"
			},
			"Trigger_File_Name": {
				"type": "string",
				"defaultValue": "aop_data.txt"
			}
		},
		"variables": {
			"logicapp_url": {
				"type": "String",
				"defaultValue": "https://prod-21.eastus2.logic.azure.com:443/workflows/bf557cd83c3b45c5a365826555b38597/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=eAMxSb-7pJGx_Ex0OGfry6YBV-RFaKUmU5ul75ISRtg"
			},
			"env": {
				"type": "String",
				"defaultValue": "DEV"
			},
			"temp": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Latam_br_cpnl"
		},
		"annotations": []
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}