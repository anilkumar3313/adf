{
	"name": "PL_KHCDE_GENERIC_SUB_StageWithChecksum",
	"properties": {
		"description": "Process stage file with checksum option",
		"activities": [
			{
				"name": "FE-File",
				"description": "process each record of checksum file.",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "LU-File",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('LU-File').output.firstRow.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "CP-TempToStage_WithChecksum",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ""
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "DS_KHCDE_GENERIC_BLOB_CSV_FolderFile",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "@pipeline().parameters.container_name",
											"type": "Expression"
										},
										"blob_name": {
											"value": "@{substring(item().blobName, 0, add(lastIndexOf(item().blobName, '/'), 0))}",
											"type": "Expression"
										},
										"file_name": {
											"value": "@{substring(item().blobName, add(lastIndexOf(item().blobName, '/'), 1), sub(length(item().blobName), add(lastIndexOf(item().blobName, '/'), 1)))}",
											"type": "Expression"
										},
										"field_delimiter": {
											"value": "@{pipeline().parameters.field_delimiter}",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DS_KHCDE_GENERIC_BLOB_CSV_Folder",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "@pipeline().parameters.container_name",
											"type": "Expression"
										},
										"blob_name": {
											"value": "@pipeline().parameters.sink_blob_name",
											"type": "Expression"
										},
										"field_delimiter": {
											"value": "@{pipeline().parameters.field_delimiter}",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "AF-Checksum",
							"type": "AzureFunctionActivity",
							"dependsOn": [
								{
									"activity": "CP-TempToStage_WithChecksum",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.01:00:00",
								"retry": 5,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"functionName": "HttpTriggerChecksum",
								"method": "POST",
								"body": {
									"value": "@json(concat('{', '\"container_name\":\"', pipeline().parameters.container_name, '\", ', '\"blob_path_archival\":\"', replace(pipeline().parameters.archival_blob_name, 'yyyyMMdd', 'processing'), '\", ', '\"blob_path_data\":\"', item().blobName, '\", ', '\"rowsRead\":\"', activity('CP-TempToStage_WithChecksum').output.rowsRead, '\", ', '\"dataRead\":\"', activity('CP-TempToStage_WithChecksum').output.dataRead, '\", ', '\"stage_path\":\"', pipeline().parameters.sink_blob_name, '\"',  '}'))",
									"type": "Expression"
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_AzF_Src_File_Validation",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "IF-AFChecksum-Error",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "AF-Checksum",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@less(activity('AF-Checksum').output.returnCode, 0)",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "CP-TempToError",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "BinarySource",
												"storeSettings": {
													"type": "AzureBlobFSReadSettings",
													"recursive": true
												},
												"formatSettings": {
													"type": "BinaryReadSettings"
												}
											},
											"sink": {
												"type": "BinarySink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings"
												}
											},
											"enableStaging": false,
											"validateDataConsistency": false
										},
										"inputs": [
											{
												"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_FolderFile",
												"type": "DatasetReference",
												"parameters": {
													"container_name": {
														"value": "@pipeline().parameters.container_name",
														"type": "Expression"
													},
													"blob_name": {
														"value": "@{substring(item().blobName, 0, add(lastIndexOf(item().blobName, '/'), 0))}",
														"type": "Expression"
													},
													"file_name": {
														"value": "@{substring(item().blobName, add(lastIndexOf(item().blobName, '/'), 1), sub(length(item().blobName), add(lastIndexOf(item().blobName, '/'), 1)))}",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
												"type": "DatasetReference",
												"parameters": {
													"container_name": {
														"value": "@pipeline().parameters.container_name",
														"type": "Expression"
													},
													"blob_name": {
														"value": "@{concat(replace(pipeline().parameters.archival_blob_name, 'yyyyMMdd', pipeline().parameters.date), '/error')}",
														"type": "Expression"
													}
												}
											}
										]
									},
									{
										"name": "SV-ErrorChecksum",
										"type": "SetVariable",
										"dependsOn": [
											{
												"activity": "CP-TempToError",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"userProperties": [],
										"typeProperties": {
											"variableName": "error_checksum",
											"value": "Y"
										}
									},
									{
										"name": "SP-ActivitySuccess05_03",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [
											{
												"activity": "CP-TempToError",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.00:10:00",
											"retry": 50,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[dbo].[generic_activity_audit_log]",
											"storedProcedureParameters": {
												"activity_name": {
													"value": {
														"value": "CP-TempToError",
														"type": "Expression"
													},
													"type": "String"
												},
												"application_name": {
													"value": {
														"value": "@{pipeline().parameters.application_name}",
														"type": "Expression"
													},
													"type": "String"
												},
												"dataset_name": {
													"value": {
														"value": "@{pipeline().parameters.dataset_name}",
														"type": "Expression"
													},
													"type": "String"
												},
												"pipeline_run_id": {
													"value": {
														"value": "@{pipeline().parameters.pipeline_run_id}",
														"type": "Expression"
													},
													"type": "String"
												},
												"activity_status": {
													"value": {
														"value": "Successful",
														"type": "Expression"
													},
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "LS_SQL",
											"type": "LinkedServiceReference"
										}
									},
									{
										"name": "SP-ActivityError05_03",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [
											{
												"activity": "CP-TempToError",
												"dependencyConditions": [
													"Failed"
												]
											}
										],
										"policy": {
											"timeout": "0.00:10:00",
											"retry": 50,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
											"storedProcedureParameters": {
												"activity_name": {
													"value": {
														"value": "CP-TempToError",
														"type": "Expression"
													},
													"type": "String"
												},
												"application_name": {
													"value": {
														"value": "@{pipeline().parameters.application_name}",
														"type": "Expression"
													},
													"type": "String"
												},
												"dataset_name": {
													"value": {
														"value": "@{pipeline().parameters.dataset_name}",
														"type": "Expression"
													},
													"type": "String"
												},
												"error_code": {
													"value": {
														"value": "@{activity('CP-TempToError').output.errors[0].Code}",
														"type": "Expression"
													},
													"type": "String"
												},
												"error_detail": {
													"value": {
														"value": "@{activity('CP-TempToError').output.errors[0].Message}",
														"type": "Expression"
													},
													"type": "String"
												},
												"pipeline_run_id": {
													"value": {
														"value": "@{pipeline().parameters.pipeline_run_id}",
														"type": "Expression"
													},
													"type": "String"
												},
												"activity_status": {
													"value": {
														"value": "Failed",
														"type": "Expression"
													},
													"type": "String"
												},
												"skip_pipeline_audit_update": {
													"value": {
														"value": "Y",
														"type": "Expression"
													},
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "LS_SQL",
											"type": "LinkedServiceReference"
										}
									},
									{
										"name": "CP-ReraiseError_05_03",
										"type": "Copy",
										"dependsOn": [
											{
												"activity": "SP-ActivityError05_03",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "BinarySource",
												"storeSettings": {
													"type": "AzureBlobFSReadSettings",
													"recursive": true
												},
												"formatSettings": {
													"type": "BinaryReadSettings"
												}
											},
											"sink": {
												"type": "BinarySink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings"
												}
											},
											"enableStaging": false,
											"validateDataConsistency": false
										},
										"inputs": [
											{
												"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
												"type": "DatasetReference",
												"parameters": {
													"container_name": {
														"value": "doesNotExist_Input",
														"type": "Expression"
													},
													"blob_name": {
														"value": "doesNotExist_Input",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
												"type": "DatasetReference",
												"parameters": {
													"container_name": {
														"value": "doesNotExist_Output",
														"type": "Expression"
													},
													"blob_name": {
														"value": "doesNotExist_Output",
														"type": "Expression"
													}
												}
											}
										]
									}
								]
							}
						},
						{
							"name": "SP-ActivitySuccess05_01",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "CP-TempToStage_WithChecksum",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.00:10:00",
								"retry": 50,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[generic_activity_audit_log]",
								"storedProcedureParameters": {
									"activity_name": {
										"value": {
											"value": "CP-TempToStage_WithChecksum",
											"type": "Expression"
										},
										"type": "String"
									},
									"application_name": {
										"value": {
											"value": "@{pipeline().parameters.application_name}",
											"type": "Expression"
										},
										"type": "String"
									},
									"dataset_name": {
										"value": {
											"value": "@{pipeline().parameters.dataset_name}",
											"type": "Expression"
										},
										"type": "String"
									},
									"pipeline_run_id": {
										"value": {
											"value": "@{pipeline().parameters.pipeline_run_id}",
											"type": "Expression"
										},
										"type": "String"
									},
									"activity_status": {
										"value": {
											"value": "Successful",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_SQL",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "SP-ActivityError05_01",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "CP-TempToStage_WithChecksum",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "0.00:10:00",
								"retry": 50,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
								"storedProcedureParameters": {
									"activity_name": {
										"value": {
											"value": "CP-TempToStage_WithChecksum",
											"type": "Expression"
										},
										"type": "String"
									},
									"application_name": {
										"value": {
											"value": "@{pipeline().parameters.application_name}",
											"type": "Expression"
										},
										"type": "String"
									},
									"dataset_name": {
										"value": {
											"value": "@{pipeline().parameters.dataset_name}",
											"type": "Expression"
										},
										"type": "String"
									},
									"error_code": {
										"value": {
											"value": "@{activity('CP-TempToStage_WithChecksum').output.errors[0].Code}",
											"type": "Expression"
										},
										"type": "String"
									},
									"error_detail": {
										"value": {
											"value": "@{activity('CP-TempToStage_WithChecksum').output.errors[0].Message}",
											"type": "Expression"
										},
										"type": "String"
									},
									"pipeline_run_id": {
										"value": {
											"value": "@{pipeline().parameters.pipeline_run_id}",
											"type": "Expression"
										},
										"type": "String"
									},
									"activity_status": {
										"value": {
											"value": "Failed",
											"type": "Expression"
										},
										"type": "String"
									},
									"skip_pipeline_audit_update": {
										"value": {
											"value": "Y",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_SQL",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "SP-ActivitySuccess05_02",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "AF-Checksum",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.00:10:00",
								"retry": 50,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[generic_activity_audit_log]",
								"storedProcedureParameters": {
									"activity_name": {
										"value": {
											"value": "AF-Checksum",
											"type": "Expression"
										},
										"type": "String"
									},
									"application_name": {
										"value": {
											"value": "@{pipeline().parameters.application_name}",
											"type": "Expression"
										},
										"type": "String"
									},
									"dataset_name": {
										"value": {
											"value": "@{pipeline().parameters.dataset_name}",
											"type": "Expression"
										},
										"type": "String"
									},
									"pipeline_run_id": {
										"value": {
											"value": "@{pipeline().parameters.pipeline_run_id}",
											"type": "Expression"
										},
										"type": "String"
									},
									"activity_status": {
										"value": {
											"value": "Successful",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_SQL",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "SP-ActivityError05_02",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "AF-Checksum",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "0.00:10:00",
								"retry": 50,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
								"storedProcedureParameters": {
									"activity_name": {
										"value": {
											"value": "AF-Checksum",
											"type": "Expression"
										},
										"type": "String"
									},
									"application_name": {
										"value": {
											"value": "@{pipeline().parameters.application_name}",
											"type": "Expression"
										},
										"type": "String"
									},
									"dataset_name": {
										"value": {
											"value": "@{pipeline().parameters.dataset_name}",
											"type": "Expression"
										},
										"type": "String"
									},
									"error_code": {
										"value": {
											"value": "@{activity('AF-Checksum').Error.errorCode}",
											"type": "Expression"
										},
										"type": "String"
									},
									"error_detail": {
										"value": {
											"value": "@{activity('AF-Checksum').Error.message}",
											"type": "Expression"
										},
										"type": "String"
									},
									"pipeline_run_id": {
										"value": {
											"value": "@{pipeline().parameters.pipeline_run_id}",
											"type": "Expression"
										},
										"type": "String"
									},
									"activity_status": {
										"value": {
											"value": "Failed",
											"type": "Expression"
										},
										"type": "String"
									},
									"skip_pipeline_audit_update": {
										"value": {
											"value": "Y",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_SQL",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "CP-ReraiseError_05_01",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "SP-ActivityError05_01",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BinarySource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true
									},
									"formatSettings": {
										"type": "BinaryReadSettings"
									}
								},
								"sink": {
									"type": "BinarySink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									}
								},
								"enableStaging": false,
								"validateDataConsistency": false
							},
							"inputs": [
								{
									"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "doesNotExist_Input",
											"type": "Expression"
										},
										"blob_name": {
											"value": "doesNotExist_Input",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "doesNotExist_Output",
											"type": "Expression"
										},
										"blob_name": {
											"value": "doesNotExist_Output",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "CP-ReraiseError_05_02",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "SP-ActivityError05_02",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BinarySource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true
									}
								},
								"sink": {
									"type": "BinarySink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									}
								},
								"enableStaging": false,
								"validateDataConsistency": false
							},
							"inputs": [
								{
									"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "doesNotExist_Input",
											"type": "Expression"
										},
										"blob_name": {
											"value": "doesNotExist_Input",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "doesNotExist_Output",
											"type": "Expression"
										},
										"blob_name": {
											"value": "doesNotExist_Output",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "LU-File",
				"description": "read the JSON file which have checksum data.",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.00:10:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"dataset": {
						"referenceName": "DS_KHCDE_GENERIC_BLOB_JSON_File",
						"type": "DatasetReference",
						"parameters": {
							"container_name": {
								"value": "@pipeline().parameters.container_name",
								"type": "Expression"
							},
							"blob_name": {
								"value": "@pipeline().parameters.source_blob_name",
								"type": "Expression"
							}
						}
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "IF-NotChecksumError",
				"description": "create trigger file based on conditions ",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "FE-File",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@not(equals(variables('error_checksum'), 'Y'))",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "CP-RaiseErrorWithChecksum",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BinarySource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true
									},
									"formatSettings": {
										"type": "BinaryReadSettings"
									}
								},
								"sink": {
									"type": "BinarySink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									}
								},
								"enableStaging": false,
								"validateDataConsistency": false
							},
							"inputs": [
								{
									"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "doesNot Exists_Input",
											"type": "Expression"
										},
										"blob_name": {
											"value": "doesNot Exists_Input",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "doesNot Exists_Output",
											"type": "Expression"
										},
										"blob_name": {
											"value": "doesNot Exists_Output",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "SP-ActivityError05",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "CP-RaiseErrorWithChecksum",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "0.00:10:00",
								"retry": 50,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
								"storedProcedureParameters": {
									"activity_name": {
										"value": {
											"value": "CP-RaiseErrorWithChecksum",
											"type": "Expression"
										},
										"type": "String"
									},
									"application_name": {
										"value": {
											"value": "@{pipeline().parameters.application_name}",
											"type": "Expression"
										},
										"type": "String"
									},
									"dataset_name": {
										"value": {
											"value": "@{pipeline().parameters.dataset_name}",
											"type": "Expression"
										},
										"type": "String"
									},
									"error_code": {
										"value": {
											"value": "@{activity('CP-RaiseErrorWithChecksum').output.errors[0].Code}",
											"type": "Expression"
										},
										"type": "String"
									},
									"error_detail": {
										"value": {
											"value": "@{concat('Checksum error - ', activity('CP-RaiseErrorWithChecksum').output.errors[0].Message)}",
											"type": "Expression"
										},
										"type": "String"
									},
									"pipeline_run_id": {
										"value": {
											"value": "@{pipeline().parameters.pipeline_run_id}",
											"type": "Expression"
										},
										"type": "String"
									},
									"activity_status": {
										"value": {
											"value": "Failed",
											"type": "Expression"
										},
										"type": "String"
									},
									"skip_pipeline_audit_update": {
										"value": {
											"value": "Y",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_SQL",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "CP-ReraiseError05",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "SP-ActivityError05",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BinarySource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true
									},
									"formatSettings": {
										"type": "BinaryReadSettings"
									}
								},
								"sink": {
									"type": "BinarySink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									}
								},
								"enableStaging": false,
								"validateDataConsistency": false
							},
							"inputs": [
								{
									"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "doesNot Exists_Input",
											"type": "Expression"
										},
										"blob_name": {
											"value": "doesNot Exists_Input",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "doesNot Exists_Output",
											"type": "Expression"
										},
										"blob_name": {
											"value": "doesNot Exists_Output",
											"type": "Expression"
										}
									}
								}
							]
						}
					],
					"ifTrueActivities": [
						{
							"name": "SP-ActivitySuccess05_04",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "CP-TriggerWithChecksum",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.00:10:00",
								"retry": 50,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[generic_activity_audit_log]",
								"storedProcedureParameters": {
									"activity_name": {
										"value": {
											"value": "CP-TriggerWithChecksum",
											"type": "Expression"
										},
										"type": "String"
									},
									"application_name": {
										"value": {
											"value": "@{pipeline().parameters.application_name}",
											"type": "Expression"
										},
										"type": "String"
									},
									"dataset_name": {
										"value": {
											"value": "@{pipeline().parameters.dataset_name}",
											"type": "Expression"
										},
										"type": "String"
									},
									"pipeline_run_id": {
										"value": {
											"value": "@{pipeline().parameters.pipeline_run_id}",
											"type": "Expression"
										},
										"type": "String"
									},
									"activity_status": {
										"value": {
											"value": "Successful",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_SQL",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "CP-ReraiseError_05_04",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "SP-ActivityError05_04",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BinarySource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true
									}
								},
								"sink": {
									"type": "BinarySink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									}
								},
								"enableStaging": false,
								"validateDataConsistency": false
							},
							"inputs": [
								{
									"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "doesNotExist_Input",
											"type": "Expression"
										},
										"blob_name": {
											"value": "doesNotExist_Input",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "doesNotExist_Output",
											"type": "Expression"
										},
										"blob_name": {
											"value": "doesNotExist_Output",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "CP-TriggerWithChecksum",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": {
										"value": "select current_timestamp",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "DS_KHCDE_GENERIC_MSSQL_Metadata",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "DS_KHCDE_GENERIC_BLOB_CSV_FolderFile",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "@{pipeline().parameters.container_name}",
											"type": "Expression"
										},
										"blob_name": {
											"value": "@if(contains(pipeline().parameters.blob_trigger_name, '/'), substring(pipeline().parameters.blob_trigger_name, 0, lastIndexOf(pipeline().parameters.blob_trigger_name, '/')), 'sales/triggers')",
											"type": "Expression"
										},
										"file_name": {
											"value": "@if(contains(pipeline().parameters.blob_trigger_name, '/'), last(split(pipeline().parameters.blob_trigger_name, '/')), pipeline().parameters.blob_trigger_name)",
											"type": "Expression"
										},
										"field_delimiter": {
											"value": ",",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "SP-ActivityError05_04",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "CP-TriggerWithChecksum",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "0.00:10:00",
								"retry": 50,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
								"storedProcedureParameters": {
									"activity_name": {
										"value": {
											"value": "CP-TriggerWithChecksum",
											"type": "Expression"
										},
										"type": "String"
									},
									"application_name": {
										"value": {
											"value": "@{pipeline().parameters.application_name}",
											"type": "Expression"
										},
										"type": "String"
									},
									"dataset_name": {
										"value": {
											"value": "@{pipeline().parameters.dataset_name}",
											"type": "Expression"
										},
										"type": "String"
									},
									"error_code": {
										"value": {
											"value": "@{activity('CP-TriggerWithChecksum').output.errors[0].Code}",
											"type": "Expression"
										},
										"type": "String"
									},
									"error_detail": {
										"value": {
											"value": "@{activity('CP-TriggerWithChecksum').output.errors[0].Message}",
											"type": "Expression"
										},
										"type": "String"
									},
									"pipeline_run_id": {
										"value": {
											"value": "@{pipeline().parameters.pipeline_run_id}",
											"type": "Expression"
										},
										"type": "String"
									},
									"activity_status": {
										"value": {
											"value": "Failed",
											"type": "Expression"
										},
										"type": "String"
									},
									"skip_pipeline_audit_update": {
										"value": {
											"value": "Y",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_SQL",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "EP-DeleteTemp_WithChecksum",
				"description": "Execute delete with checksum pipeline.",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "IF-NotChecksumError",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "PL_KHCDE_GENERIC_SUB_BLOBDeleteAll",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"container_name": {
							"value": "@{pipeline().parameters.container_name}",
							"type": "Expression"
						},
						"blob_name": {
							"value": "@{concat(replace(pipeline().parameters.archival_blob_name, 'yyyyMMdd', 'processing'), '/temp')}",
							"type": "Expression"
						},
						"activity_name": {
							"value": "DL-TempWithChecksum",
							"type": "Expression"
						},
						"application_name": {
							"value": "@{pipeline().parameters.application_name}",
							"type": "Expression"
						},
						"dataset_name": {
							"value": "@{pipeline().parameters.dataset_name}",
							"type": "Expression"
						},
						"pipeline_run_id": {
							"value": "@{pipeline().parameters.pipeline_run_id}",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Wait-EP_DeleteTemp",
				"description": "Force successful ",
				"type": "Wait",
				"dependsOn": [
					{
						"activity": "EP-DeleteTemp_WithChecksum",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"waitTimeInSeconds": 1
				}
			},
			{
				"name": "EP-DeleteWork_WithChecksum",
				"description": "Execute pipeline to delete work folder.",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "IF-NotChecksumError",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "PL_KHCDE_GENERIC_SUB_BLOBDeleteAll",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"container_name": {
							"value": "@{pipeline().parameters.container_name}",
							"type": "Expression"
						},
						"blob_name": {
							"value": "@{concat(replace(pipeline().parameters.archival_blob_name, 'yyyyMMdd', 'processing'), '/work')}",
							"type": "Expression"
						},
						"activity_name": {
							"value": "DL-WorkWithChecksum",
							"type": "Expression"
						},
						"application_name": {
							"value": "@{pipeline().parameters.application_name}",
							"type": "Expression"
						},
						"dataset_name": {
							"value": "@{pipeline().parameters.dataset_name}",
							"type": "Expression"
						},
						"pipeline_run_id": {
							"value": "@{pipeline().parameters.pipeline_run_id}",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Wait-EP_DeleteWork",
				"description": "Force successful ",
				"type": "Wait",
				"dependsOn": [
					{
						"activity": "EP-DeleteWork_WithChecksum",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"waitTimeInSeconds": 1
				}
			}
		],
		"parameters": {
			"container_name": {
				"type": "string"
			},
			"source_blob_name": {
				"type": "string"
			},
			"sink_blob_name": {
				"type": "string"
			},
			"archival_blob_name": {
				"type": "string"
			},
			"blob_trigger_name": {
				"type": "string"
			},
			"application_name": {
				"type": "string"
			},
			"dataset_name": {
				"type": "string"
			},
			"pipeline_run_id": {
				"type": "string"
			},
			"field_delimiter": {
				"type": "string"
			},
			"date": {
				"type": "string"
			}
		},
		"variables": {
			"error_checksum": {
				"type": "String",
				"defaultValue": "N"
			}
		},
		"folder": {
			"name": "Generic_Frameworks/Sub_Pipelines"
		},
		"annotations": []
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}