{
	"name": "PL_KHCDE_US_SALES_ON_DEMAND_SUBMASTER",
	"properties": {
		"description": "Sub Pipeline of PL_KHCDE_US_SALES_ON_DEMAND_MASTER",
		"activities": [
			{
				"name": "FE-File-ServerDelete",
				"description": "Deletes File on the External Source",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "IF-File-Exists_InArchiveLand",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "CP-ToArchieve",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@if(and(contains(string(activity('GM-InboundArchive').output), 'childItems'), equals(toLower(pipeline().parameters.delete_ind),'y')), activity('GM-InboundArchive').output.childItems, json('[]'))",
						"type": "Expression"
					},
					"isSequential": false,
					"batchCount": 50,
					"activities": [
						{
							"name": "SW-ServerDelete",
							"type": "Switch",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"on": {
									"value": "@{pipeline().parameters.server_name}",
									"type": "Expression"
								},
								"cases": [
									{
										"value": "LS_AZ_KHC_DATASHARE_STRGV2",
										"activities": [
											{
												"name": "DL-KHC_DATASHARE_STRGV2Files",
												"type": "Delete",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "DS_KHCDE_GENERIC_KHC_DATASHARE_STRGV2_FolderFile",
														"type": "DatasetReference",
														"parameters": {
															"container_name": {
																"value": "@substring(pipeline().parameters.server_path,0,indexof(pipeline().parameters.server_path,'/'))",
																"type": "Expression"
															},
															"blob_name": {
																"value": "@substring(pipeline().parameters.server_path,add(indexof(pipeline().parameters.server_path,'/'),1),sub(sub(length(pipeline().parameters.server_path),indexof(pipeline().parameters.server_path,'/')),1))",
																"type": "Expression"
															},
															"file_name": {
																"value": "@{item().name}",
																"type": "Expression"
															}
														}
													},
													"enableLogging": false,
													"storeSettings": {
														"type": "AzureBlobFSReadSettings",
														"recursive": false
													}
												}
											}
										]
									},
									{
										"value": "LS_AZ_XTEL",
										"activities": [
											{
												"name": "DL-Xtel",
												"description": "Delete file from source",
												"type": "Delete",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 5,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "DS_KHCDE_GENERIC_KHC_XTEL_STRGV2_FolderFile",
														"type": "DatasetReference",
														"parameters": {
															"container_name": {
																"value": "@substring(pipeline().parameters.server_path,0,indexof(pipeline().parameters.server_path,'/'))\n",
																"type": "Expression"
															},
															"blob_name": {
																"value": "@substring(pipeline().parameters.server_path,add(indexof(pipeline().parameters.server_path,'/'),1),sub(sub(length(pipeline().parameters.server_path),indexof(pipeline().parameters.server_path,'/')),1))\n",
																"type": "Expression"
															},
															"file_name": {
																"value": "@{item().name}",
																"type": "Expression"
															}
														}
													},
													"enableLogging": false,
													"storeSettings": {
														"type": "AzureBlobFSReadSettings",
														"recursive": false
													}
												}
											}
										]
									},
									{
										"value": "LS_AZ_KHC_EXTERNALSHARE_STRGV2",
										"activities": [
											{
												"name": "DL-KHC_DATASHARE_STRGV2Files_copy1",
												"type": "Delete",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "DS_KHCDE_GENERIC_KHC_EXTERNALSHARE_STRGV2ToLand_FolderFile",
														"type": "DatasetReference",
														"parameters": {
															"container_name": {
																"value": "@substring(pipeline().parameters.server_path,0,indexof(pipeline().parameters.server_path,'/'))",
																"type": "Expression"
															},
															"blob_name": {
																"value": "@substring(pipeline().parameters.server_path,add(indexof(pipeline().parameters.server_path,'/'),1),sub(sub(length(pipeline().parameters.server_path),indexof(pipeline().parameters.server_path,'/')),1))",
																"type": "Expression"
															},
															"file_name": {
																"value": "@{item().name}",
																"type": "Expression"
															}
														}
													},
													"enableLogging": false,
													"storeSettings": {
														"type": "AzureBlobFSReadSettings",
														"recursive": false
													}
												}
											}
										]
									},
									{
										"value": "LS_AZ_STRGV2",
										"activities": [
											{
												"name": "DL-STRGV2Files",
												"type": "Delete",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_FolderFile",
														"type": "DatasetReference",
														"parameters": {
															"container_name": {
																"value": "@substring(pipeline().parameters.server_path,0,indexof(pipeline().parameters.server_path,'/'))",
																"type": "Expression"
															},
															"blob_name": {
																"value": "@substring(pipeline().parameters.server_path,add(indexof(pipeline().parameters.server_path,'/'),1),sub(sub(length(pipeline().parameters.server_path),indexof(pipeline().parameters.server_path,'/')),1))",
																"type": "Expression"
															},
															"file_name": {
																"value": "@{item().name}",
																"type": "Expression"
															}
														}
													},
													"enableLogging": false,
													"storeSettings": {
														"type": "AzureBlobFSReadSettings",
														"recursive": true,
														"enablePartitionDiscovery": false
													}
												}
											}
										]
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "SW-Server",
				"description": "Switch Server",
				"type": "Switch",
				"dependsOn": [
					{
						"activity": "IF-File-Exists_InStage",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "IF-File-Exists_InArchive",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"on": {
						"value": "@{pipeline().parameters.server_name}",
						"type": "Expression"
					},
					"cases": [
						{
							"value": "LS_AZ_XTEL",
							"activities": [
								{
									"name": "CP-xtel_external_storage_to_stage_blob",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 5,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": false,
												"wildcardFileName": {
													"value": "@{pipeline().parameters.filename}",
													"type": "Expression"
												}
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false,
										"skipErrorFile": {
											"fileMissing": false
										},
										"validateDataConsistency": false
									},
									"inputs": [
										{
											"referenceName": "DS_KHCDE_GENERIC_KHC_XTEL_STRGV2_Folder",
											"type": "DatasetReference",
											"parameters": {
												"container_name": {
													"value": "@substring(pipeline().parameters.server_path,0,indexof(pipeline().parameters.server_path,'/'))",
													"type": "Expression"
												},
												"blob_name": {
													"value": "@substring(pipeline().parameters.server_path,add(indexof(pipeline().parameters.server_path,'/'),1),sub(sub(length(pipeline().parameters.server_path),indexof(pipeline().parameters.server_path,'/')),1))",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
											"type": "DatasetReference",
											"parameters": {
												"container_name": {
													"value": "@{pipeline().parameters.container_name}",
													"type": "Expression"
												},
												"blob_name": {
													"value": "@{concat(replace(pipeline().parameters.archival_blob_name,'yyyyMMdd', pipeline().parameters.date),'/land')}",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						},
						{
							"value": "LS_AZ_KHC_DATASHARE_STRGV2",
							"activities": [
								{
									"name": "CP-KHC_DATASHARE_STRGV2ToLand",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": false,
												"wildcardFileName": {
													"value": "@{pipeline().parameters.filename}",
													"type": "Expression"
												},
												"deleteFilesAfterCompletion": false
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false,
										"skipErrorFile": {
											"fileMissing": false,
											"fileForbidden": false
										},
										"validateDataConsistency": false
									},
									"inputs": [
										{
											"referenceName": "DS_KHCDE_GENERIC_KHC_DATASHARE_STRGV2_Folder",
											"type": "DatasetReference",
											"parameters": {
												"container_name": {
													"value": "@substring(pipeline().parameters.server_path,0,indexof(pipeline().parameters.server_path,'/'))",
													"type": "Expression"
												},
												"blob_name": {
													"value": "@substring(pipeline().parameters.server_path,add(indexof(pipeline().parameters.server_path,'/'),1),sub(sub(length(pipeline().parameters.server_path),indexof(pipeline().parameters.server_path,'/')),1))",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
											"type": "DatasetReference",
											"parameters": {
												"container_name": {
													"value": "@{pipeline().parameters.container_name}",
													"type": "Expression"
												},
												"blob_name": {
													"value": "@{concat(replace(pipeline().parameters.archival_blob_name,'yyyyMMdd', pipeline().parameters.date),'/land')}",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						},
						{
							"value": "LS_AZ_KHC_EXTERNALSHARE_STRGV2",
							"activities": [
								{
									"name": "CP-KHC_EXTERNALSHARE_STRGV2ToLand",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": false,
												"wildcardFileName": {
													"value": "@{pipeline().parameters.filename}",
													"type": "Expression"
												},
												"deleteFilesAfterCompletion": false
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false,
										"skipErrorFile": {
											"fileMissing": false,
											"fileForbidden": false
										},
										"validateDataConsistency": false
									},
									"inputs": [
										{
											"referenceName": "DS_KHCDE_GENERIC_KHC_EXTERNALSHARE_STRGV2ToLand_Folder",
											"type": "DatasetReference",
											"parameters": {
												"container_name": {
													"value": "@substring(pipeline().parameters.server_path,0,indexof(pipeline().parameters.server_path,'/'))",
													"type": "Expression"
												},
												"blob_name": {
													"value": "@substring(pipeline().parameters.server_path,add(indexof(pipeline().parameters.server_path,'/'),1),sub(sub(length(pipeline().parameters.server_path),indexof(pipeline().parameters.server_path,'/')),1))",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
											"type": "DatasetReference",
											"parameters": {
												"container_name": {
													"value": "@{pipeline().parameters.container_name}",
													"type": "Expression"
												},
												"blob_name": {
													"value": "@{concat(replace(pipeline().parameters.archival_blob_name,'yyyyMMdd', pipeline().parameters.date),'/land')}",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						},
						{
							"value": "LS_AZ_STRGV2",
							"activities": [
								{
									"name": "CP-STRGV2ToLand",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
											"type": "DatasetReference",
											"parameters": {
												"container_name": {
													"value": "@substring(pipeline().parameters.server_path,0,indexof(pipeline().parameters.server_path,'/'))",
													"type": "Expression"
												},
												"blob_name": {
													"value": "@substring(pipeline().parameters.server_path,add(indexof(pipeline().parameters.server_path,'/'),1),sub(sub(length(pipeline().parameters.server_path),indexof(pipeline().parameters.server_path,'/')),1))",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
											"type": "DatasetReference",
											"parameters": {
												"container_name": {
													"value": "@{pipeline().parameters.container_name}",
													"type": "Expression"
												},
												"blob_name": {
													"value": "@{concat(replace(pipeline().parameters.archival_blob_name,'yyyyMMdd', pipeline().parameters.date),'/land')}",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					]
				}
			},
			{
				"name": "CP-TriggerToInbound",
				"description": "Creates Trigger File",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "IF-File-Exists_InArchiveLand",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "CP-ToArchieve",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "select current_timestamp",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DS_KHCDE_GENERIC_MSSQL_Metadata",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "DS_KHCDE_GENERIC_BLOB_CSV_FolderFile",
						"type": "DatasetReference",
						"parameters": {
							"container_name": {
								"value": "@{pipeline().parameters.container_name}",
								"type": "Expression"
							},
							"blob_name": {
								"value": "@if(contains(pipeline().parameters.trigger_type, '/'), substring(pipeline().parameters.trigger_type, 0, lastIndexOf(pipeline().parameters.trigger_type, '/')), 'sales/triggers')",
								"type": "Expression"
							},
							"file_name": {
								"value": "@if(contains(pipeline().parameters.trigger_type, '/'), last(split(pipeline().parameters.trigger_type, '/')), pipeline().parameters.trigger_type)",
								"type": "Expression"
							},
							"field_delimiter": {
								"value": ",",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "SP-PipelineStart",
				"description": "Logs the start of Pipeline ",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": {
								"value": "I",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@{pipeline().parameters.application_name}",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@{pipeline().parameters.dataset_name}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_name": {
							"value": {
								"value": "@{pipeline().Pipeline}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": {
								"value": "Processing",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-ActivityError_SW-Server",
				"description": "Logs Error",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "SW-Server",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": {
								"value": "SW-Server",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@{pipeline().parameters.application_name}",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@{pipeline().parameters.dataset_name}",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_code": {
							"value": {
								"value": "@{activity('SW-Server').Error.errorCode}",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_detail": {
							"value": {
								"value": "@{activity('SW-Server').Error.message}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().Pipeline}",
								"type": "Expression"
							},
							"type": "String"
						},
						"activity_status": {
							"value": {
								"value": "Failed",
								"type": "Expression"
							},
							"type": "String"
						},
						"skip_pipeline_audit_update": {
							"value": {
								"value": "Y",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-ActivityError_05",
				"description": "Logs Error",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "CP-TriggerToInbound",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": {
								"value": "CP-TriggerToInbound",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@{pipeline().parameters.application_name}",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@{pipeline().parameters.dataset_name}",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_code": {
							"value": {
								"value": "@{activity('CP-TriggerToInbound').Error.errorCode}",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_detail": {
							"value": {
								"value": "@{activity('CP-TriggerToInbound').Error.message}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().Pipeline}",
								"type": "Expression"
							},
							"type": "String"
						},
						"activity_status": {
							"value": {
								"value": "Failed",
								"type": "Expression"
							},
							"type": "String"
						},
						"skip_pipeline_audit_update": {
							"value": {
								"value": "Y",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "FE-Land-UnZip_Go",
				"description": "Loops for each file in location",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "GM-InboundArchive",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('GM-InboundArchive').output.childItems",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "IF-Zip",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@not(equals(toLower(pipeline().parameters.file_zip_ind),'n'))",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "CP-InboundArchiveToInboundStage",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "BinarySource",
												"storeSettings": {
													"type": "AzureBlobFSReadSettings",
													"recursive": true
												},
												"formatSettings": {
													"type": "BinaryReadSettings"
												}
											},
											"sink": {
												"type": "BinarySink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings"
												}
											},
											"enableStaging": false,
											"validateDataConsistency": false
										},
										"inputs": [
											{
												"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_FolderFile",
												"type": "DatasetReference",
												"parameters": {
													"container_name": {
														"value": "@{pipeline().parameters.container_name}",
														"type": "Expression"
													},
													"blob_name": {
														"value": "@{concat(replace(pipeline().parameters.archival_blob_name,'yyyyMMdd', pipeline().parameters.date),'/land')}",
														"type": "Expression"
													},
													"file_name": {
														"value": "@{item().name}",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
												"type": "DatasetReference",
												"parameters": {
													"container_name": {
														"value": "@{pipeline().parameters.container_name}",
														"type": "Expression"
													},
													"blob_name": {
														"value": "@{pipeline().parameters.stage_blob_name}",
														"type": "Expression"
													}
												}
											}
										]
									}
								],
								"ifTrueActivities": [
									{
										"name": "CP-Archive_Unzip",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "BinarySource",
												"storeSettings": {
													"type": "AzureBlobFSReadSettings",
													"recursive": true
												},
												"formatSettings": {
													"type": "BinaryReadSettings"
												}
											},
											"sink": {
												"type": "BinarySink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings"
												}
											},
											"enableStaging": false
										},
										"inputs": [
											{
												"referenceName": "DS_KHCDE_US_SALES_ON_DEMAND_BLOB_BINARY_FolderFile_UnZip",
												"type": "DatasetReference",
												"parameters": {
													"container_name": {
														"value": "@{pipeline().parameters.container_name}",
														"type": "Expression"
													},
													"folder_name": {
														"value": "@{concat(replace(pipeline().parameters.archival_blob_name,'yyyyMMdd', pipeline().parameters.date),'/land')}",
														"type": "Expression"
													},
													"file_name": {
														"value": "@{item().name}",
														"type": "Expression"
													},
													"compression_type": {
														"value": "@{if(equals(toLower(pipeline().parameters.file_zip_ind),'y'),'ZipDeflate',pipeline().parameters.file_zip_ind)}",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
												"type": "DatasetReference",
												"parameters": {
													"container_name": {
														"value": "@{pipeline().parameters.container_name}",
														"type": "Expression"
													},
													"blob_name": {
														"value": "@{replace(pipeline().parameters.archival_blob_name, 'yyyyMMdd', 'temp')}",
														"type": "Expression"
													}
												}
											}
										]
									},
									{
										"name": "CP-ToStage",
										"type": "Copy",
										"dependsOn": [
											{
												"activity": "CP-Archive_Unzip",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "BinarySource",
												"storeSettings": {
													"type": "AzureBlobFSReadSettings",
													"recursive": true,
													"deleteFilesAfterCompletion": false
												},
												"formatSettings": {
													"type": "BinaryReadSettings"
												}
											},
											"sink": {
												"type": "BinarySink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings"
												}
											},
											"enableStaging": false,
											"validateDataConsistency": false
										},
										"inputs": [
											{
												"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
												"type": "DatasetReference",
												"parameters": {
													"container_name": {
														"value": "@{pipeline().parameters.container_name}",
														"type": "Expression"
													},
													"blob_name": {
														"value": "@{concat(replace(pipeline().parameters.archival_blob_name, 'yyyyMMdd', 'temp'),'/',item().name)}",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
												"type": "DatasetReference",
												"parameters": {
													"container_name": {
														"value": "@{pipeline().parameters.container_name}",
														"type": "Expression"
													},
													"blob_name": {
														"value": "@{pipeline().parameters.stage_blob_name}",
														"type": "Expression"
													}
												}
											}
										]
									},
									{
										"name": "DL-InboundArchive_Processing",
										"type": "Delete",
										"dependsOn": [
											{
												"activity": "CP-ToStage",
												"dependencyConditions": [
													"Completed"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"dataset": {
												"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
												"type": "DatasetReference",
												"parameters": {
													"container_name": {
														"value": "@{pipeline().parameters.container_name}",
														"type": "Expression"
													},
													"blob_name": {
														"value": "@{replace(pipeline().parameters.archival_blob_name, 'yyyyMMdd', 'temp')}",
														"type": "Expression"
													}
												}
											},
											"enableLogging": false,
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											}
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "GM-InboundArchive",
				"description": "Check the presence of Items in Inbound Archive",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "SW-Server",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
						"type": "DatasetReference",
						"parameters": {
							"container_name": {
								"value": "@{pipeline().parameters.container_name}",
								"type": "Expression"
							},
							"blob_name": {
								"value": "@{concat(replace(pipeline().parameters.archival_blob_name,'yyyyMMdd', pipeline().parameters.date),'/land')}",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"childItems",
						"exists"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			},
			{
				"name": "IF-File-Exists_InStage",
				"description": "If File(s) exists",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "GMDetails-Stage",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@activity('GMDetails-Stage').output.exists",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "DL-InboundStage",
							"type": "Delete",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "@{pipeline().parameters.container_name}",
											"type": "Expression"
										},
										"blob_name": {
											"value": "@{pipeline().parameters.stage_blob_name}",
											"type": "Expression"
										}
									}
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								}
							}
						}
					]
				}
			},
			{
				"name": "GMDetails-Stage",
				"description": "Check the presence of Items in Stage",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "SP-PipelineStart",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
						"type": "DatasetReference",
						"parameters": {
							"container_name": {
								"value": "@{pipeline().parameters.container_name}",
								"type": "Expression"
							},
							"blob_name": {
								"value": "@{pipeline().parameters.stage_blob_name}",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"exists",
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			},
			{
				"name": "IF-File-Exists_InArchive",
				"description": "If File(s) exists",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "GMDetails-Archive",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@activity('GMDetails-Archive').output.exists",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "DL-InboundArchive",
							"type": "Delete",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "@{pipeline().parameters.container_name}",
											"type": "Expression"
										},
										"blob_name": {
											"value": "@{concat(replace(pipeline().parameters.archival_blob_name,'yyyyMMdd', pipeline().parameters.date),'/land')}",
											"type": "Expression"
										}
									}
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								}
							}
						}
					]
				}
			},
			{
				"name": "GMDetails-Archive",
				"description": "Check the presence of Items in Archival-Land",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "SP-PipelineStart",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
						"type": "DatasetReference",
						"parameters": {
							"container_name": {
								"value": "@{pipeline().parameters.container_name}",
								"type": "Expression"
							},
							"blob_name": {
								"value": "@{concat(replace(pipeline().parameters.archival_blob_name,'yyyyMMdd', pipeline().parameters.date),'/land')}",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"exists",
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			},
			{
				"name": "SP-ActivityError_Unzip",
				"description": "Logs Error",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "FE-Land-UnZip_Go",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": {
								"value": "FE-Land-UnZip_Go",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@{pipeline().parameters.application_name}",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@{pipeline().parameters.dataset_name}",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_code": {
							"value": {
								"value": "N.A",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_detail": {
							"value": {
								"value": "Error in FE-Land-UnZip_Go",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().Pipeline}",
								"type": "Expression"
							},
							"type": "String"
						},
						"activity_status": {
							"value": {
								"value": "Failed",
								"type": "Expression"
							},
							"type": "String"
						},
						"skip_pipeline_audit_update": {
							"value": {
								"value": "Y",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-ActivityError_Stage_01",
				"description": "Logs Error",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "IF-File-Exists_InStage",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": {
								"value": "IF-File-Exists_InStage",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@{pipeline().parameters.application_name}",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@{pipeline().parameters.dataset_name}",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_code": {
							"value": {
								"value": "N.A",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_detail": {
							"value": {
								"value": "N.A",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().Pipeline}",
								"type": "Expression"
							},
							"type": "String"
						},
						"activity_status": {
							"value": {
								"value": "Failed",
								"type": "Expression"
							},
							"type": "String"
						},
						"skip_pipeline_audit_update": {
							"value": {
								"value": "Y",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-ActivityError_Archive_01",
				"description": "Logs Error",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "IF-File-Exists_InArchive",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": {
								"value": "IF-File-Exists_InArchive",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@{pipeline().parameters.application_name}",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@{pipeline().parameters.dataset_name}",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_code": {
							"value": {
								"value": "N.A",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_detail": {
							"value": {
								"value": "N.A",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().Pipeline}",
								"type": "Expression"
							},
							"type": "String"
						},
						"activity_status": {
							"value": {
								"value": "Failed",
								"type": "Expression"
							},
							"type": "String"
						},
						"skip_pipeline_audit_update": {
							"value": {
								"value": "Y",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-ActivityError_04",
				"description": "Logs Error",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "FE-File-ServerDelete",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": {
								"value": "FE-File-ServerDelete",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@{pipeline().parameters.application_name}",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@{pipeline().parameters.dataset_name}",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_code": {
							"value": {
								"value": "N.A",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_detail": {
							"value": {
								"value": "Error in FE-File-ServerDelete",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().Pipeline}",
								"type": "Expression"
							},
							"type": "String"
						},
						"activity_status": {
							"value": {
								"value": "Failed",
								"type": "Expression"
							},
							"type": "String"
						},
						"skip_pipeline_audit_update": {
							"value": {
								"value": "Y",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Pipeline_Successful",
				"description": "This Activity logs completion of pipeline in khc_audit_log table.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "FE-File-ServerDelete",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "CP-TriggerToInbound",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": {
								"value": "U",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@pipeline().parameters.application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@{pipeline().parameters.dataset_group}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_name": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": "Successful",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "IF-File-Exists_InArchiveLand",
				"description": "If File(s) exists",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "GMDetails-Archive_Land",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@activity('GMDetails-Archive_Land').output.exists",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "DL-InboundArchive_Land",
							"type": "Delete",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "@{pipeline().parameters.container_name}",
											"type": "Expression"
										},
										"blob_name": {
											"value": "@{concat(replace(pipeline().parameters.archival_blob_name,'yyyyMMdd', pipeline().parameters.date),'/land')}",
											"type": "Expression"
										}
									}
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								}
							}
						}
					]
				}
			},
			{
				"name": "GMDetails-Archive_Land",
				"description": "Check the presence of Items in Inbound Archive",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "CP-ToArchieve",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
						"type": "DatasetReference",
						"parameters": {
							"container_name": {
								"value": "@{pipeline().parameters.container_name}",
								"type": "Expression"
							},
							"blob_name": {
								"value": "@{concat(replace(pipeline().parameters.archival_blob_name,'yyyyMMdd', pipeline().parameters.date),'/land')}",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"exists",
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			},
			{
				"name": "CP-ToArchieve",
				"description": "Copies file(s) to archive",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "FE-Land-UnZip_Go",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "BinarySource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"deleteFilesAfterCompletion": false
						},
						"formatSettings": {
							"type": "BinaryReadSettings"
						}
					},
					"sink": {
						"type": "BinarySink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						}
					},
					"enableStaging": false,
					"validateDataConsistency": false
				},
				"inputs": [
					{
						"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
						"type": "DatasetReference",
						"parameters": {
							"container_name": {
								"value": "@{pipeline().parameters.container_name}",
								"type": "Expression"
							},
							"blob_name": {
								"value": "@{concat(replace(pipeline().parameters.archival_blob_name,'yyyyMMdd', pipeline().parameters.date),'/land')}",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
						"type": "DatasetReference",
						"parameters": {
							"container_name": {
								"value": "@{pipeline().parameters.container_name}",
								"type": "Expression"
							},
							"blob_name": {
								"value": "@{replace(pipeline().parameters.archival_blob_name,'yyyyMMdd', pipeline().parameters.date)}",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "SP-ActivityError_CP-ToArchieve",
				"description": "Logs Error",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "CP-ToArchieve",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": {
								"value": "CP-ToArchieve",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@{pipeline().parameters.application_name}",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@{pipeline().parameters.dataset_name}",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_code": {
							"value": {
								"value": "@{activity('CP-ToArchieve').Error.errorCode}",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_detail": {
							"value": {
								"value": "@{activity('CP-ToArchieve').Error.message}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().Pipeline}",
								"type": "Expression"
							},
							"type": "String"
						},
						"activity_status": {
							"value": {
								"value": "Failed",
								"type": "Expression"
							},
							"type": "String"
						},
						"skip_pipeline_audit_update": {
							"value": {
								"value": "Y",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-ActivityError_Archive_02",
				"description": "Logs Error",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "IF-File-Exists_InArchiveLand",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": {
								"value": "DL-Archieve-Land",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@{pipeline().parameters.application_name}",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@{pipeline().parameters.dataset_name}",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_code": {
							"value": {
								"value": "N.A",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_detail": {
							"value": {
								"value": "N.A",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().Pipeline}",
								"type": "Expression"
							},
							"type": "String"
						},
						"activity_status": {
							"value": {
								"value": "Failed",
								"type": "Expression"
							},
							"type": "String"
						},
						"skip_pipeline_audit_update": {
							"value": {
								"value": "Y",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "CP-ReraiseError01",
				"description": "Raises Error",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "SP-ActivityError_CP-ToArchieve",
						"dependencyConditions": [
							"Completed"
						]
					},
					{
						"activity": "IF-File-Exists_InArchiveLand",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "BinarySource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true
						},
						"formatSettings": {
							"type": "BinaryReadSettings"
						}
					},
					"sink": {
						"type": "BinarySink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
						"type": "DatasetReference",
						"parameters": {
							"container_name": {
								"value": "doesNotExist_Input",
								"type": "Expression"
							},
							"blob_name": {
								"value": "doesNotExist_Input",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
						"type": "DatasetReference",
						"parameters": {
							"container_name": {
								"value": "doesNotExist_Output",
								"type": "Expression"
							},
							"blob_name": {
								"value": "doesNotExist_Output",
								"type": "Expression"
							}
						}
					}
				]
			}
		],
		"parameters": {
			"parent_id": {
				"type": "string"
			},
			"dependent_id": {
				"type": "string"
			},
			"application_name": {
				"type": "string"
			},
			"dataset_name": {
				"type": "string"
			},
			"server_name": {
				"type": "string"
			},
			"server_path": {
				"type": "string"
			},
			"filename": {
				"type": "string"
			},
			"data_filename": {
				"type": "string"
			},
			"pattern_type": {
				"type": "string"
			},
			"rename_prefix": {
				"type": "string"
			},
			"file_zip_ind": {
				"type": "string"
			},
			"file_checksum_ind": {
				"type": "string"
			},
			"checksum_filename": {
				"type": "string"
			},
			"field_delimiter": {
				"type": "string"
			},
			"container_name": {
				"type": "string"
			},
			"stage_blob_name": {
				"type": "string"
			},
			"archival_blob_name": {
				"type": "string"
			},
			"blob_trigger_name": {
				"type": "string"
			},
			"dbt_trigger_name": {
				"type": "string"
			},
			"adf_trigger_name": {
				"type": "string"
			},
			"dataset_group": {
				"type": "string"
			},
			"snowflake_role": {
				"type": "string"
			},
			"warehouse_size": {
				"type": "string"
			},
			"snowflake_database": {
				"type": "string"
			},
			"snowflake_schema": {
				"type": "string"
			},
			"stage_table_name": {
				"type": "string"
			},
			"snowflake_stage_name": {
				"type": "string"
			},
			"snowflake_file_format": {
				"type": "string"
			},
			"dbt_exec_mode": {
				"type": "string"
			},
			"dbt_name": {
				"type": "string"
			},
			"parameter_json": {
				"type": "string"
			},
			"data_level": {
				"type": "string"
			},
			"audit_add_user_name": {
				"type": "string"
			},
			"audit_add_timestamp": {
				"type": "string"
			},
			"audit_update_username": {
				"type": "string"
			},
			"audit_update_timestamp": {
				"type": "string"
			},
			"active_ind": {
				"type": "string"
			},
			"pipeline_name": {
				"type": "string"
			},
			"pipeline_run_id": {
				"type": "string"
			},
			"date": {
				"type": "string"
			},
			"adf_env": {
				"type": "string"
			},
			"delete_ind": {
				"type": "string",
				"defaultValue": "y"
			},
			"trigger_type": {
				"type": "string"
			}
		},
		"folder": {
			"name": "US_Sales"
		},
		"annotations": []
	}
}