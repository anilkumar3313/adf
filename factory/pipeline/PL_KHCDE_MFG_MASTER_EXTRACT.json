{
	"name": "PL_KHCDE_MFG_MASTER_EXTRACT",
	"properties": {
		"description": "To extract the data from various databases SQL server, Oracle and  DB2",
		"activities": [
			{
				"name": "SP-PipelineStart",
				"description": "This Activity logs starting of pipeline in khc_audit_log table.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": {
								"value": "I",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@pipeline().parameters.application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@pipeline().parameters.adf_trigger_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_name": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": {
								"value": "Generic_Extract started",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-PipelineSuccess01",
				"description": "This Activity logs completion of pipeline in khc_audit_log table.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "ForEach-Inp",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": {
								"value": "U",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@pipeline().parameters.application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].dataset_group",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_name": {
							"value": {
								"value": "@{pipeline().Pipeline}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": {
								"value": "Successful",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-ActivityAndPipelineFailed01",
				"description": "This activity logs failure of LU-Metadata activity in khc_audit_log_detail table and failure of pipeline in  khc_audit_log table.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "ForEach-Inp",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": {
								"value": "AF-DBTTriggerLoad",
								"type": "Expression"
							},
							"type": "String"
						},
						"activity_status": {
							"value": {
								"value": "Failed",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@pipeline().parameters.application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].dataset_group",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_code": {
							"value": {
								"value": "N.A.",
								"type": "Expression"
							},
							"type": "String"
						},
						"error_detail": {
							"value": {
								"value": "N.A.",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "WB-SendSuccessEmail",
				"description": "Send email notification upon successful completion of the pipeline",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "MFG_Create_trigger",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@pipeline().globalParameters.la_khcde_generic_email_url",
						"type": "Expression"
					},
					"method": "POST",
					"body": {
						"value": "{ \n        \"to_email\": \"@{variables('emailTo')}\", \n        \"subject\": \"Successful execution of pipeline: @{pipeline().parameters.application_name} - @{split(pipeline().parameters.adf_trigger_name,'.')[0]}\", \n        \"body\": \"Dear All,<br><br>The cloud analytics data load process successfull for the Application: @{pipeline().parameters.application_name}<br> Please find below the details: <br><br> Pipeline Name: @{pipeline().Pipeline} <br> Pipeline Run ID: @{pipeline().RunId}<br> Pipeline Trigger Name: @{pipeline().TriggerName}<br> Pipeline Trigger Type: @{pipeline().TriggerType}<br> Pipeline Start Time: @{pipeline().TriggerTime}<br><br>Parameters:<br>===========<br>Application Name: @{pipeline().parameters.application_name}<br>ADF TriggerName: @{pipeline().parameters.adf_trigger_name}<br><br><br>Regards,<br>Cloud Analytics Team\", \n        \"importance\": \"Low\"\n}",
						"type": "Expression"
					}
				}
			},
			{
				"name": "WB-SendFailureEmail01",
				"description": "Send email notification upon failure of data extraction",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "SP-ActivityAndPipelineFailed01",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@pipeline().globalParameters.la_khcde_generic_email_url",
						"type": "Expression"
					},
					"method": "POST",
					"body": {
						"value": "{ \n        \"to_email\": \"@{variables('emailTo')}\", \n        \"subject\": \"Failed Snowflake Ingestion: @{pipeline().parameters.application_name} - @{split(pipeline().parameters.adf_trigger_name,'.')[0]}\", \n        \"body\": \"Dear All,<br><br>The data extraction process failed for the Application: @{pipeline().parameters.application_name}<br> Please find below the details: <br><br> Pipeline Name: @{pipeline().Pipeline} <br> Pipeline Run ID: @{pipeline().RunId}<br> Pipeline Trigger Name: @{pipeline().TriggerName}<br> Pipeline Trigger Type: @{pipeline().TriggerType}<br> Pipeline Start Time: @{pipeline().TriggerTime}<br> Activity: LU-Metadata<br>Next Step: Please check the DatasetGroup and active_ind<br><br>Parameters:<br>===========<br>Application Name: @{pipeline().parameters.application_name}<br>ADF TriggerName: @{pipeline().parameters.adf_trigger_name}<br><br>Please take care.<br><br>Regards,<br>Cloud Analytics Team\", \n        \"importance\": \"High\"\n}",
						"type": "Expression"
					}
				}
			},
			{
				"name": "LU-Metadata",
				"description": "This activity pulls the details related to application_name and adf_trigger_name from orchestration_metadata. ",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "SP-PipelineStart",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "select\n    om.application_name,\n    om.dataset_name,\n    om.dataset_group,\n    ctrl.table_name,\n    om.server_name,\n    om.server_path as source_object_type,\n    om.filename as dso_changelog_table,\n    om.data_filename,\n    om.container_name,\n    om.archival_blob_name,\n    om.stage_blob_name,\n    om.blob_trigger_name,\n    om.data_level,\n    om.active_ind,\n    om.parent_id,\n    ctrl.dynamic_partition_ind,\n    ctrl.partition_column,\n    ctrl.incr_column_name,\n    ctrl.last_incr_value\n\t,case when server_name = 'LS_SQL_PROCUREMENT_EM' then 'khcde-kv-sec-procurement-em-sql-conn-string'\n\t when server_name = 'LS_SQL_QS_COLUMBIA' then 'khcde-kv-sec-mfg-iqscolumbia-sql-conn-string'\n\t when server_name = 'LS_SQL_AI_DAVENPORT' then 'khcde-kv-sec-mfg-ai-Davenport-sql-conn-string'\n\t when server_name = 'LS_SQL_AI_COLUMBIA' then 'khcde-kv-sec-mfg-aicolumbia-sql-conn-string'\n     \t when server_name = 'LS_SQL_QS_KIRKSVILLE' then 'khcde-kv-sec-mfg-iqskirk-sql-conn-string'\n     \t when server_name = 'LS_SQL_QS_MASON' then 'khcde-kv-sec-mfg-iqsmason-sql-conn-string'\n     \t when server_name = 'LS_SQL_QS_MASSILLON' then 'khcde-kv-sec-mfg-iqsmassillon-sql-conn-string'\n     \t when server_name = 'LS_SQL_QS_LOWVILLE' then 'khcde-kv-sec-mfg-iqslowville-sql-conn-string'\n     \t when server_name = 'LS_SQL_QS_SPRINGFIELD' then 'khcde-kv-sec-mfg-iqsspringfield-sql-conn-string'\n     \t when server_name = 'LS_SQL_QS_NEWBERRY' then 'khcde-kv-sec-mfg-iqsnewberry-sql-conn-string'\n     \t when server_name = 'LS_SQL_QS_CHAMPAIGN' then 'khcde-kv-sec-mfg-iqschampaign-sql-conn-string'\n     \t when server_name = 'LS_SQL_QS_COSHOCTON' then 'khcde-kv-sec-mfg-iqscoshocton-sql-conn-string'\n     \t when server_name = 'LS_SQL_QS_DOVER' then 'khcde-kv-sec-mfg-iqsdover-sql-conn-string'\n\t when server_name = 'LS_SQL_AI_KIRKSVILLE' then 'khcde-kv-sec-mfg-aipi-kirksville-sql-conn-string'          \n    END AS key_vault_secret_name\nfrom dbo.khc_orchestration_metadata om inner join\n( Select\n    parent_id,\n    table_name,\n    dynamic_partition_ind,\n    partition_column,\n    where_clause,\n    incr_column_name,\n    last_incr_value\nfrom dbo.khc_data_extract_control_table\n) ctrl\non om.parent_id = ctrl.parent_id\nwhere len(trim(om.server_name)) > 0\n    and om.application_name in ('@{pipeline().parameters.application_name}')\n  and om.adf_trigger_name in ('@{pipeline().parameters.adf_trigger_name}')\n  and (om.server_name like 'LS_SQL_PROCUREMENT%EM' OR om.server_name like 'LS_SQL_AI_%'\n OR om.server_name like 'LS_SQL_QS_%'\n)\n  and om.data_level >=2 and om.active_ind='y'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_KHCDE_GENERIC_MSSQL_Metadata",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "WB-SendFailureEmail02",
				"description": "Send email notification upon failure of event file creation",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "MFG_Create_trigger",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@pipeline().globalParameters.la_khcde_generic_email_url",
						"type": "Expression"
					},
					"method": "POST",
					"body": {
						"value": "{ \n        \"to_email\": \"@{variables('emailTo')}\", \n        \"subject\": \"Failed Snowflake Ingestion: @{pipeline().parameters.application_name} - @{split(pipeline().parameters.adf_trigger_name,'.')[0]}\", \n        \"body\": \"Dear All,<br><br>The cloud analytics data load process failed for the Application: @{pipeline().parameters.application_name}<br> Please find below the details: <br><br> Pipeline Name: @{pipeline().Pipeline} <br> Pipeline Run ID: @{pipeline().RunId}<br> Pipeline Trigger Name: @{pipeline().TriggerName}<br> Pipeline Trigger Type: @{pipeline().TriggerType}<br> Pipeline Start Time: @{pipeline().TriggerTime}<br> Activity: LU-Metadata<br>Next Step: Please check the DatasetGroup and active_ind<br><br>Parameters:<br>===========<br>Application Name: @{pipeline().parameters.application_name}<br>ADF TriggerName: @{pipeline().parameters.adf_trigger_name}<br><br>Please take care.<br><br>Regards,<br>Cloud Analytics Team\", \n        \"importance\": \"High\"\n}",
						"type": "Expression"
					}
				}
			},
			{
				"name": "ForEach-Inp",
				"description": "For each entry in metadata performs data extraction from relevant databases",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "LU-Metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('LU-Metadata').output.value",
						"type": "Expression"
					},
					"isSequential": false,
					"batchCount": 10,
					"activities": [
						{
							"name": "Copy_SQL",
							"description": "Data extraction from SQL Server database system and copying extracted files to specified blob location",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 5,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": {
										"value": "@{item().table_name}",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "DS_KHCDE_APAC_INDO_DF_SQL",
									"type": "DatasetReference",
									"parameters": {
										"key_vault_secret_name": {
											"value": "@{item().key_vault_secret_name}",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DS_KHCDE_APAC_INDO_SEABPP_BLOB",
									"type": "DatasetReference",
									"parameters": {
										"cw_fileName": {
											"value": "@{concat(item().data_filename,'.csv')}",
											"type": "Expression"
										},
										"cw_containerName": {
											"value": "@{item().container_name}",
											"type": "Expression"
										},
										"cw_filePath": {
											"value": "@{item().stage_blob_name}",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "SP-Copy_SQL_Success",
							"description": "This activity logs success of  Data Extract in khc_audit_log_detail table.",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Copy_SQL",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 5,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[generic_activity_audit_log]",
								"storedProcedureParameters": {
									"activity_name": {
										"value": "Copy_SQL",
										"type": "String"
									},
									"activity_status": {
										"value": {
											"value": "Successful",
											"type": "Expression"
										},
										"type": "String"
									},
									"application_name": {
										"value": {
											"value": "@pipeline().parameters.Application_Name",
											"type": "Expression"
										},
										"type": "String"
									},
									"dataset_name": {
										"value": {
											"value": "@pipeline().parameters.adf_trigger_name",
											"type": "Expression"
										},
										"type": "String"
									},
									"pipeline_run_id": {
										"value": {
											"value": "@{pipeline().RunId}",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_SQL",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "SP-Copy_SQL_Failed",
							"description": "This activity logs failure of Data Extract in khc_audit_log_detail table and failure of pipeline in  khc_audit_log table.",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Copy_SQL",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 5,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[generic_activity_error_audit_log]",
								"storedProcedureParameters": {
									"action_ind": {
										"value": "U",
										"type": "String"
									},
									"activity_name": {
										"value": "Copy_SQL",
										"type": "String"
									},
									"activity_status": {
										"value": "Failed",
										"type": "String"
									},
									"application_name": {
										"value": {
											"value": "@pipeline().parameters.Application_Name",
											"type": "Expression"
										},
										"type": "String"
									},
									"dataset_name": {
										"value": {
											"value": "@pipeline().parameters.adf_trigger_name",
											"type": "Expression"
										},
										"type": "String"
									},
									"error_code": {
										"value": {
											"value": "@activity('Copy_SQL').Error.errorCode",
											"type": "Expression"
										},
										"type": "String"
									},
									"error_detail": {
										"value": {
											"value": "@activity('Copy_SQL').Error.message",
											"type": "Expression"
										},
										"type": "String"
									},
									"pipeline_run_id": {
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										},
										"type": "String"
									},
									"pipeline_status": {
										"value": "Failed ",
										"type": "String"
									},
									"skip_pipeline_audit_update": {
										"value": "N",
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_SQL",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "MFG_Create_trigger",
				"description": "This copy activity creates trigger file for each entry in metadata",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "SP-PipelineSuccess01",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "select current_timestamp",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DS_KHCDE_GENERIC_MSSQL_Metadata",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "DS_KHCDE_GENERIC_BLOB_CSV_FolderFile",
						"type": "DatasetReference",
						"parameters": {
							"container_name": "khc-enterprise-data",
							"blob_name": {
								"value": "@substring(activity('LU-Metadata').output.value[0].blob_trigger_name,0,lastindexof(activity('LU-Metadata').output.value[0].blob_trigger_name,'/'))",
								"type": "Expression"
							},
							"file_name": {
								"value": "@last(split(activity('LU-Metadata').output.value[0].blob_trigger_name,'/'))",
								"type": "Expression"
							},
							"field_delimiter": ","
						}
					}
				]
			}
		],
		"parameters": {
			"application_name": {
				"type": "string",
				"defaultValue": "digital_revolution_manufacturing"
			},
			"adf_trigger_name": {
				"type": "string",
				"defaultValue": "iqs_kirku.txt"
			}
		},
		"variables": {
			"emailTo": {
				"type": "String",
				"defaultValue": "8cd7b897.Heinz365.onmicrosoft.com@amer.teams.ms"
			}
		},
		"folder": {
			"name": "digital_revolution_manufacturing"
		},
		"annotations": []
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}