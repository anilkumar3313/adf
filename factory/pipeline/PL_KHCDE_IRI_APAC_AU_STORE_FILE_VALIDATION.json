{
	"name": "PL_KHCDE_IRI_APAC_AU_STORE_FILE_VALIDATION",
	"properties": {
		"description": "File Validation Pipeline for IRI AU",
		"activities": [
			{
				"name": "ForEach - File",
				"description": "for each",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Filter-Files",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Filter-Files').output.Value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Get Metadata - File",
							"type": "GetMetadata",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "DS_KHCDE_IRI_AU_STORE_BLOB_CSV_FolderFile",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "@activity('LU-Metadata').output.value[0].container_name",
											"type": "Expression"
										},
										"blob_name": {
											"value": "@activity('LU-Metadata').output.value[0].stage_blob_name",
											"type": "Expression"
										},
										"file_name": {
											"value": "@item().name",
											"type": "Expression"
										},
										"field_delimiter": {
											"value": "|",
											"type": "Expression"
										}
									}
								},
								"fieldList": [
									"structure"
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							}
						},
						{
							"name": "Get Metadata Coles - Ref",
							"type": "GetMetadata",
							"dependsOn": [
								{
									"activity": "CP - ColesRef",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "DS_KHCDE_IRI_AU_STORE_BLOB_CSV_FolderFile",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "@activity('LU-Metadata').output.value[0].container_name",
											"type": "Expression"
										},
										"blob_name": {
											"value": "sales/iri_apac/stage/au/ref_file_structure",
											"type": "Expression"
										},
										"file_name": {
											"value": "coles.txt",
											"type": "Expression"
										},
										"field_delimiter": {
											"value": "@activity('LU-Metadata').output.value[0].field_delimiter",
											"type": "Expression"
										}
									}
								},
								"fieldList": [
									"structure"
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							}
						},
						{
							"name": "If Condition - Check File Structure",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Get Metadata - File",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "Get Metadata Coles - Ref",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "Get Metadata - Woolworths ref",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@or(equals(activity('Get Metadata - File').output.structure,activity('Get Metadata Coles - Ref').output.structure),\nequals(activity('Get Metadata - File').output.structure,activity('Get Metadata - Woolworths ref').output.structure))",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "SV-tempCounter1",
										"type": "SetVariable",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"variableName": "tempCounter1",
											"value": {
												"value": "@string(add(int(variables('Counter1')), 1))",
												"type": "Expression"
											}
										}
									},
									{
										"name": "SV-Counter1",
										"type": "SetVariable",
										"dependsOn": [
											{
												"activity": "SV-tempCounter1",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"userProperties": [],
										"typeProperties": {
											"variableName": "Counter1",
											"value": {
												"value": "@variables('tempCounter1')",
												"type": "Expression"
											}
										}
									},
									{
										"name": "Append File Name",
										"type": "AppendVariable",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"variableName": "FileNames",
											"value": {
												"value": "@item().name",
												"type": "Expression"
											}
										}
									}
								]
							}
						},
						{
							"name": "Get Metadata - Woolworths ref",
							"type": "GetMetadata",
							"dependsOn": [
								{
									"activity": "CP - WoolworthsRef",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "DS_KHCDE_IRI_AU_STORE_BLOB_CSV_FolderFile",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "@activity('LU-Metadata').output.value[0].container_name",
											"type": "Expression"
										},
										"blob_name": {
											"value": "sales/iri_apac/stage/au/ref_file_structure",
											"type": "Expression"
										},
										"file_name": {
											"value": "woolworths.txt",
											"type": "Expression"
										},
										"field_delimiter": {
											"value": "@activity('LU-Metadata').output.value[0].field_delimiter",
											"type": "Expression"
										}
									}
								},
								"fieldList": [
									"structure"
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							}
						},
						{
							"name": "filecount_temp",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "filecount_temp",
								"value": {
									"value": "@string(add(int(variables('filecount')), 1))",
									"type": "Expression"
								}
							}
						},
						{
							"name": "file_count",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "filecount_temp",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "filecount",
								"value": {
									"value": "@variables('filecount_temp')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "CP - ColesRef",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": {
										"value": "select \nconcat('MARKET Code|MARKET Description|STATE|PRODUCT Code|PRODUCT Description|BRAND|COMMODITY|SIZE|SUB COMMODITY|',\n'SUPPLIER|COLES_ID|TIME Description|UNIT SALES|VALUE SALES|AVERAGE PRICE PER UNIT|UNIT SALES YEAR AGO',char(13))",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "DS_KHCDE_GENERIC_MSSQL_Metadata",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "DS_KHCDE_GENERIC_BLOB_CSV_FolderFile",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "@activity('LU-Metadata').output.value[0].container_name",
											"type": "Expression"
										},
										"blob_name": {
											"value": "sales/iri_apac/stage/au/ref_file_structure",
											"type": "Expression"
										},
										"file_name": "coles.txt",
										"field_delimiter": {
											"value": "@activity('LU-Metadata').output.value[0].field_delimiter",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "CP - WoolworthsRef",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": {
										"value": "select concat('MARKET Code|MARKET Description|STATE|PRODUCT Code|PRODUCT Description|BRAND|COMMODITY|SIZE|SUB COMMODITY|SUPPLIER|WOOLWORTHS_ID|','TIME Description|UNIT SALES|VALUE SALES|AVERAGE PRICE PER UNIT|UNIT SALES YEAR AGO',char(13))",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "DS_KHCDE_GENERIC_MSSQL_Metadata",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "DS_KHCDE_GENERIC_BLOB_CSV_FolderFile",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "@activity('LU-Metadata').output.value[0].container_name",
											"type": "Expression"
										},
										"blob_name": {
											"value": "sales/iri_apac/stage/au/ref_file_structure",
											"type": "Expression"
										},
										"file_name": {
											"value": "woolworths.txt",
											"type": "Expression"
										},
										"field_delimiter": {
											"value": "@activity('LU-Metadata').output.value[0].field_delimiter",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "If File structure is incorrect",
				"description": "file structure is incorrect",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "ForEach - File",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(int(variables('Counter1')), 0)",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Send Email for file structure changes",
							"type": "WebActivity",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": {
									"value": "@pipeline().globalParameters.la_khcde_generic_email_url",
									"type": "Expression"
								},
								"method": "POST",
								"body": {
									"value": "{\n\"subject\": \"Azure Data Factory - AU Store error notification\",\n\"body\": \"Hi, <br> please find the list of files with the header row issue for category  <br>\n<br>@{join(variables('FileNames'),',')} for Store @{activity('LU-Metadata').output.value[0].dataset_name}<br>Thanks & Regards, <br>KHC APAC DE Team\",\n\"to_email\": \"@{if(equals(pipeline().globalParameters.AZURE_ENV,'PROD'),'DL_ANZ_ScanSalesIntegrationNotify@kraftheinz.com;HASSQLSerAdm@kraftheinz.com','yogesh.yadav@kraftheinz.com;amol.sorade@kraftheinz.com')}\",\n\"cc_email\": \"@{if(equals(pipeline().globalParameters.AZURE_ENV,'PROD'),'yogesh.yadav@kraftheinz.com;amol.sorade@kraftheinz.com','')}\",\n\"importance\": \"High\"\n}",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Copy data - Errors",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Send Email for file structure changes",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": "1",
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "DS_KHCDE_APAC_ANZ_DF_SQL",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "DS_KHCDE_APAC_ANZ_DF_BLOB_Folder",
									"type": "DatasetReference",
									"parameters": {
										"cw_fileName": "dummy",
										"cw_containerName": "dummy",
										"cw_filePath": "dummy"
									}
								}
							]
						},
						{
							"name": "Wait2",
							"type": "Wait",
							"dependsOn": [
								{
									"activity": "Copy data - Errors",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"waitTimeInSeconds": 1
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Wait1",
							"type": "Wait",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"waitTimeInSeconds": 1
							}
						}
					]
				}
			},
			{
				"name": "GM-Files",
				"description": "get metadata files",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "LU-Metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DS_KHCDE_APAC_ANZ_SOURCE_CSV",
						"type": "DatasetReference",
						"parameters": {
							"container_name": {
								"value": "@activity('LU-Metadata').output.value[0].container_name",
								"type": "Expression"
							},
							"blob_name": {
								"value": "@activity('LU-Metadata').output.value[0].stage_blob_name",
								"type": "Expression"
							},
							"delimiter": {
								"value": "@activity('LU-Metadata').output.value[0].field_delimiter",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "LU-Metadata",
				"description": "lookup metadata",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "SP-PipelineStart",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "@{concat('select * from khc_orchestration_metadata where application_name = ', '''', 'iri_international', '''', ' and blob_trigger_name = ', '''', pipeline().parameters.blob_trigger_name, '''', ' and data_level = 2 and active_ind = ', '''', 'y', '''')}",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_KHCDE_GENERIC_MSSQL_Metadata",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "If File count is incorrect",
				"description": "file count is incorrect",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "If File structure is incorrect",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@or(and(\nequals(int(variables('filecount')), 14),\nequals(activity('LU-Metadata').output.value[0].dataset_name,'coles')),and(\nequals(int(variables('filecount')), 11),\nequals(activity('LU-Metadata').output.value[0].dataset_name,'woolworths')))",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Send Email for file structure changes_copy1",
							"type": "WebActivity",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": {
									"value": "@pipeline().globalParameters.la_khcde_generic_email_url",
									"type": "Expression"
								},
								"method": "POST",
								"body": {
									"value": "{\n\"subject\": \"Azure Data Factory - AU Store error notification\",\n\"body\": \"Hi, <br> File Count is not as exepcted for store @{activity('LU-Metadata').output.value[0].dataset_name} for the week - @{variables('FileDate')}\n<br>File Count is:<br>@{variables('filecount')}<br><br>Thanks & Regards, <br>KHC APAC DE Team\",\n\"to_email\": \"@{if(equals(pipeline().globalParameters.AZURE_ENV,'PROD'),'DL_ANZ_ScanSalesIntegrationNotify@kraftheinz.com;HASSQLSerAdm@kraftheinz.com','yogesh.yadav@kraftheinz.com;amol.sorade@kraftheinz.com')}\",\n\"cc_email\": \"@{if(equals(pipeline().globalParameters.AZURE_ENV,'PROD'),'yogesh.yadav@kraftheinz.com;amol.sorade@kraftheinz.com','')}\",\n\"importance\": \"High\"\n}",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Copy data - Errors_copy1",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Send Email for file structure changes_copy1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": "1",
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "DS_KHCDE_APAC_ANZ_DF_SQL",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "DS_KHCDE_APAC_ANZ_DF_BLOB_Folder",
									"type": "DatasetReference",
									"parameters": {
										"cw_fileName": "dummy",
										"cw_containerName": "dummy",
										"cw_filePath": "dummy"
									}
								}
							]
						},
						{
							"name": "Wait2_copy1",
							"type": "Wait",
							"dependsOn": [
								{
									"activity": "Copy data - Errors_copy1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"waitTimeInSeconds": 1
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Wait1_copy1",
							"type": "Wait",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"waitTimeInSeconds": 1
							}
						}
					]
				}
			},
			{
				"name": "SP-Pipelinesuccesful",
				"description": "This Activity logs completion of pipeline in khc_audit_log table.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "If File count is incorrect",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": "U",
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU-Metadata').output.value[0].dataset_group",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_name": {
							"value": {
								"value": "@{pipeline().Pipeline}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": "Successful",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-PipelineStart",
				"description": "This Activity logs starting of pipeline in khc_audit_log table.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": {
								"value": "I",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "iri_international",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "store",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_name": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": {
								"value": "Master_Pool_Load_Started",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Filter-Files",
				"description": "filter only selected files and not folders",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "GM-Files",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('GM-Files').output.childitems",
						"type": "Expression"
					},
					"condition": {
						"value": "@endswith(item().name,'.TXT')",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"blob_trigger_name": {
				"type": "string",
				"defaultValue": "iri_apac_au_store_coles_trigger.txt"
			}
		},
		"variables": {
			"Counter1": {
				"type": "String",
				"defaultValue": "0"
			},
			"tempCounter1": {
				"type": "String",
				"defaultValue": "0"
			},
			"FileNames": {
				"type": "Array"
			},
			"structure": {
				"type": "String"
			},
			"filecount": {
				"type": "String",
				"defaultValue": "0"
			},
			"filecount_temp": {
				"type": "String",
				"defaultValue": "0"
			},
			"FileDate": {
				"type": "String"
			}
		},
		"folder": {
			"name": "IRI_International/Sub_Pipelines"
		},
		"annotations": []
	}
}