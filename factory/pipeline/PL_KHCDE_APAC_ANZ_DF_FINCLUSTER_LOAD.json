{
	"name": "PL_KHCDE_APAC_ANZ_DF_FINCLUSTER_LOAD",
	"properties": {
		"description": "It execute the pipeline for Finance and Cluster tables(Group E).",
		"activities": [
			{
				"name": "LU-Metadata",
				"description": "This activity pulls the details related to application_name and adf_trigger_name from orchestration_metadata. ",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "EP- SQLSever Extract",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "select * from dbo.khc_orchestration_metadata where server_name='LS_SQL_BPCS_APAC' and application_name in ( 'apac_anz_df_master_data','apac_anz_df_finance') and active_ind='y' \nand dataset_name in ('DGP_ProfitabilityT','DGP_ClusterL1TransT','DGP_ClusterL2TransT')\nand dataset_group = 'apac_anz_df'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_KHCDE_GENERIC_MSSQL_Metadata",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "EP- SQLSever Extract",
				"description": "This activity is used to extract data from SQL Server",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "SP-PipelineStart",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "PL_KHCDE_APAC_ANZ_DF_SQL_BPCS_MAIN_EXTRACT_FINCLUSTER",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true
				}
			},
			{
				"name": "SV-date",
				"description": "Performs the operation to set the value of data",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "LU-Metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "extract_date",
					"value": {
						"value": "@{string(formatDateTime(addhours(utcnow(), 5), 'yyyyMMdd'))}",
						"type": "Expression"
					}
				}
			},
			{
				"name": "ForEach_Inp",
				"description": "For each entry in metadata performs data extraction from relevant databases",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "SV-date",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('LU-Metadata').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Delete_Archive",
							"description": "delete the data from archive",
							"type": "Delete",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 5,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "@{item().container_name}",
											"type": "Expression"
										},
										"blob_name": {
											"value": "@{concat(item().stage_blob_name,  '/archive/last_updated_data')}",
											"type": "Expression"
										}
									}
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								}
							}
						},
						{
							"name": "CP-LandToArchive",
							"description": "Copy data activity from land to archive",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Delete_Archive",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 5,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BinarySource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true
									},
									"formatSettings": {
										"type": "BinaryReadSettings"
									}
								},
								"sink": {
									"type": "BinarySink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "@{item().container_name}",
											"type": "Expression"
										},
										"blob_name": {
											"value": "@{item().stage_blob_name}",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DS_KHCDE_GENERIC_BLOB_BINARY_Folder",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "@{item().container_name}",
											"type": "Expression"
										},
										"blob_name": {
											"value": "@{concat(item().stage_blob_name,  '/archive/last_updated_data')}",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "EP-DemantraDBT_Fact",
				"description": "Execute the DBT pipeline",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "LU-Metadata_Fact",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "PL_KHCDE_GENERIC_DBTProcessing",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"ApplicationName": {
							"value": "@{activity('LU-Metadata_Fact').output.value[0].application_name}",
							"type": "Expression"
						},
						"DatasetGroup": {
							"value": "@{activity('LU-Metadata_Fact').output.value[0].dataset_group}",
							"type": "Expression"
						},
						"ParameterJson": {
							"value": "@{activity('LU-Metadata_Fact').output.value[0].parameter_json}",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "SP-ActivitySuccess1",
				"description": "Logs the success of the activity",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "EP-DemantraDBT_Fact",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": {
								"value": "EP_DBT_Processing",
								"type": "Expression"
							},
							"type": "String"
						},
						"activity_status": {
							"value": {
								"value": "Successful",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@activity('LU-Metadata_Fact').output.value[0].application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU-Metadata_Fact').output.value[0].dataset_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-ActivityFailed1",
				"description": "logs the failure of the activity",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "EP-DemantraDBT_Fact",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_activity_audit_log]",
					"storedProcedureParameters": {
						"activity_name": {
							"value": {
								"value": "EP_DBT_Processing",
								"type": "Expression"
							},
							"type": "String"
						},
						"activity_status": {
							"value": {
								"value": "Successful",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "@activity('LU-Metadata_Fact').output.value[0].application_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "@activity('LU-Metadata_Fact').output.value[0].dataset_name",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "LU-Metadata_Fact",
				"description": "This activity pulls the details related to application_name and adf_trigger_name from orchestration_metadata. ",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "ForEach_SF",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "select * from dbo.khc_orchestration_metadata where server_name='LS_SQL_BPCS_APAC' and application_name in ('apac_anz_df_finance') and active_ind='y' \nand dataset_name in ('DGP_ProfitabilityT','DGP_ClusterL1TransT','DGP_ClusterL2TransT')\nand dataset_group = 'apac_anz_df'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_KHCDE_GENERIC_MSSQL_Metadata",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach_SF",
				"description": "For each entry in metadata performs data extraction from relevant databases",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "LU-Metadata_Fin",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('LU-Metadata_Fin').output.value",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "EP-SnowflakeIngestion",
							"description": "Pipeline for snowflake ingestion",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "PL_KHCDE_GENERIC_SnowflakeIngestion",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"ApplicationName": {
										"value": "@{item().application_name}",
										"type": "Expression"
									},
									"DatasetGroup": {
										"value": "@{item().dataset_group}",
										"type": "Expression"
									},
									"ParameterJson": {
										"value": "@{item().parameter_json}",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "LU-Metadata_Fin",
				"description": "This activity pulls the details related to application_name and adf_trigger_name from orchestration_metadata. ",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "EP- SQLSever Extract",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "select distinct application_name , dataset_group,parameter_json from dbo.khc_orchestration_metadata where server_name='LS_SQL_BPCS_APAC' and application_name in ('apac_anz_df_finance') and active_ind='y' \nand dataset_name in ('DGP_ProfitabilityT','DGP_ClusterL1TransT','DGP_ClusterL2TransT')\nand dataset_group = 'apac_anz_df'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_KHCDE_GENERIC_MSSQL_Metadata",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "SP-PipelineStart",
				"description": "This Activity logs starting of pipeline in khc_audit_log table.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": {
								"value": "I",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "apac_anz_df_finance",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": "DGP_ProfitabilityT\n",
							"type": "String"
						},
						"pipeline_name": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": {
								"value": "SnowflakeExtraction_CopyTOSQL_Started",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SP-PipelineSuccess01",
				"description": "This Activity logs completion of pipeline in khc_audit_log table.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "EP-DemantraDBT_Fact",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[generic_pipeline_audit_log]",
					"storedProcedureParameters": {
						"action_ind": {
							"value": {
								"value": "U",
								"type": "Expression"
							},
							"type": "String"
						},
						"application_name": {
							"value": {
								"value": "apac_anz_df_finance",
								"type": "Expression"
							},
							"type": "String"
						},
						"dataset_name": {
							"value": {
								"value": "DGP_ProfitabilityT",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_name": {
							"value": {
								"value": "@{pipeline().Pipeline}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_run_id": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "String"
						},
						"pipeline_status": {
							"value": {
								"value": "Successful",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_SQL",
					"type": "LinkedServiceReference"
				}
			}
		],
		"variables": {
			"dataset": {
				"type": "Array"
			},
			"extract_date": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Apac_Anz_DF"
		},
		"annotations": []
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}